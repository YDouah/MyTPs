2022-03-01 05:21:06.369 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@14dd7b39
2022-03-01 05:21:06.495 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-01 05:21:06.507 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-01 05:21:06.551 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-03-01 05:21:06.551 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'daoId'
2022-03-01 05:21:06.561 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-01 05:21:06.602 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-01 05:21:06.615 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-01 05:21:06.615 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-03-01 05:21:06.615 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-01 05:21:06.615 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP7/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-03-01 05:21:06.632 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-01 05:21:06.637 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-01 05:21:06.637 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-01 05:21:06.637 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-01 05:21:06.679 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-01 05:21:06.679 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-01 05:21:06.679 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-01 05:21:06.688 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-01 05:21:06.704 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-01 05:21:06.707 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-01 05:21:06.744 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@52350abb
2022-03-01 05:21:06.744 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@52350abb
2022-03-01 05:21:06.744 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@52350abb
2022-03-01 05:21:06.744 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1b58ff9e
2022-03-01 05:21:06.744 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5400db36
2022-03-01 05:21:06.744 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@5aa0dbf4
2022-03-01 05:21:06.744 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1051817b
2022-03-01 05:21:06.744 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1051817b
2022-03-01 05:21:06.744 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1051817b
2022-03-01 05:21:06.744 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@41beb473
2022-03-01 05:21:06.744 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@41beb473
2022-03-01 05:21:06.744 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@41beb473
2022-03-01 05:21:06.744 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@677dbd89
2022-03-01 05:21:06.744 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@677dbd89
2022-03-01 05:21:06.744 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@677dbd89
2022-03-01 05:21:06.744 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@f31c0c6
2022-03-01 05:21:06.744 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@f31c0c6
2022-03-01 05:21:06.744 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@f31c0c6
2022-03-01 05:21:06.744 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@5769e7ae
2022-03-01 05:21:06.744 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@5769e7ae
2022-03-01 05:21:06.744 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5769e7ae
2022-03-01 05:21:06.759 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@2ca65ce4
2022-03-01 05:21:06.759 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@2ca65ce4
2022-03-01 05:21:06.759 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ca65ce4
2022-03-01 05:21:06.759 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6d511b5f
2022-03-01 05:21:06.759 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6d511b5f
2022-03-01 05:21:06.759 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6d511b5f
2022-03-01 05:21:06.759 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@120f38e6
2022-03-01 05:21:06.759 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@120f38e6
2022-03-01 05:21:06.759 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3b1bb3ab
2022-03-01 05:21:06.759 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3b1bb3ab
2022-03-01 05:21:06.759 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@37d80fe7
2022-03-01 05:21:06.759 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@37d80fe7
2022-03-01 05:21:06.759 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@15bcf458
2022-03-01 05:21:06.759 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@69adf72c
2022-03-01 05:21:06.759 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@30c31dd7
2022-03-01 05:21:06.759 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@30c31dd7
2022-03-01 05:21:06.759 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@7249dadf
2022-03-01 05:21:06.759 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7249dadf
2022-03-01 05:21:06.759 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@1e11bc55
2022-03-01 05:21:06.759 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1e11bc55
2022-03-01 05:21:06.759 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@5ea502e0
2022-03-01 05:21:06.759 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5ea502e0
2022-03-01 05:21:06.759 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5ea502e0
2022-03-01 05:21:06.759 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@77b7ffa4
2022-03-01 05:21:06.775 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@2102a4d5
2022-03-01 05:21:06.776 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2102a4d5
2022-03-01 05:21:06.776 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2102a4d5
2022-03-01 05:21:06.778 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6ce1f601
2022-03-01 05:21:06.779 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@372b0d86
2022-03-01 05:21:06.780 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@372b0d86
2022-03-01 05:21:06.781 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@70eecdc2
2022-03-01 05:21:06.782 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70eecdc2
2022-03-01 05:21:06.782 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1a6f5124
2022-03-01 05:21:06.782 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1a6f5124
2022-03-01 05:21:06.782 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@f5c79a6
2022-03-01 05:21:06.782 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f5c79a6
2022-03-01 05:21:06.782 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@52d10fb8
2022-03-01 05:21:06.782 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@52d10fb8
2022-03-01 05:21:06.782 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@22680f52
2022-03-01 05:21:06.782 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@2575f671
2022-03-01 05:21:06.782 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@2575f671
2022-03-01 05:21:06.782 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@2575f671
2022-03-01 05:21:06.782 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@30c0ccff
2022-03-01 05:21:06.782 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@30c0ccff
2022-03-01 05:21:06.782 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@30c0ccff
2022-03-01 05:21:06.782 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5851bd4f
2022-03-01 05:21:06.782 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@547e29a4
2022-03-01 05:21:06.782 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@547e29a4
2022-03-01 05:21:06.782 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@547e29a4
2022-03-01 05:21:06.782 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@c8b96ec
2022-03-01 05:21:06.782 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@c8b96ec
2022-03-01 05:21:06.782 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@c8b96ec
2022-03-01 05:21:06.782 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@5949eba8
2022-03-01 05:21:06.782 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@7728643a
2022-03-01 05:21:06.782 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@3704122f
2022-03-01 05:21:06.782 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3704122f
2022-03-01 05:21:06.782 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3f2049b6
2022-03-01 05:21:06.782 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@3bb9efbc
2022-03-01 05:21:06.782 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3bb9efbc
2022-03-01 05:21:06.798 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@7692cd34
2022-03-01 05:21:06.798 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7692cd34
2022-03-01 05:21:06.798 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@70f43b45
2022-03-01 05:21:06.798 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2c282004
2022-03-01 05:21:06.798 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@78e16155
2022-03-01 05:21:06.798 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@4102b1b1
2022-03-01 05:21:06.798 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4102b1b1
2022-03-01 05:21:06.798 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@f325091
2022-03-01 05:21:06.798 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@437e951d
2022-03-01 05:21:06.798 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@77b325b3
2022-03-01 05:21:06.798 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@63a5e46c
2022-03-01 05:21:06.798 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7e8e8651
2022-03-01 05:21:06.798 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@49ef32e0
2022-03-01 05:21:06.798 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@271f18d3
2022-03-01 05:21:06.798 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bd51ed8
2022-03-01 05:21:06.807 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-01 05:21:06.815 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-01 05:21:06.816 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {password=root, user=root}
2022-03-01 05:21:06.816 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-01 05:21:06.816 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-01 05:21:06.816 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-01 05:21:06.924 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.ClientDaoImpl.<init>(ClientDaoImpl.java:11) ~[classes/:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:11) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:115) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:101) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Client does not support authentication protocol requested by server; consider upgrading MySQL client
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.Util.getInstance(Util.java:381) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:984) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:956) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3491) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3423) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:910) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:3923) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1273) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2031) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46) ~[mysql-connector-java-5.1.6.jar:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282) ~[mysql-connector-java-5.1.6.jar:?]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-03-01 05:21:06.924 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'service' while setting bean property 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'service' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'daoId' while setting bean property 'dao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'daoId' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.ClientDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-03-01 05:21:47.945 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@14dd7b39
2022-03-01 05:21:48.081 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-01 05:21:48.097 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-01 05:21:48.097 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-03-01 05:21:48.097 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'daoId'
2022-03-01 05:21:48.113 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-01 05:21:48.144 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-01 05:21:48.160 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-01 05:21:48.160 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-03-01 05:21:48.160 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-01 05:21:48.169 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP7/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-03-01 05:21:48.169 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-01 05:21:48.169 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-01 05:21:48.169 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-01 05:21:48.169 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-01 05:21:48.200 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-01 05:21:48.200 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-01 05:21:48.214 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-01 05:21:48.217 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-01 05:21:48.233 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-01 05:21:48.233 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-01 05:21:48.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@52350abb
2022-03-01 05:21:48.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@52350abb
2022-03-01 05:21:48.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@52350abb
2022-03-01 05:21:48.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1b58ff9e
2022-03-01 05:21:48.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5400db36
2022-03-01 05:21:48.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@5aa0dbf4
2022-03-01 05:21:48.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1051817b
2022-03-01 05:21:48.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1051817b
2022-03-01 05:21:48.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1051817b
2022-03-01 05:21:48.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@41beb473
2022-03-01 05:21:48.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@41beb473
2022-03-01 05:21:48.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@41beb473
2022-03-01 05:21:48.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@677dbd89
2022-03-01 05:21:48.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@677dbd89
2022-03-01 05:21:48.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@677dbd89
2022-03-01 05:21:48.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@f31c0c6
2022-03-01 05:21:48.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@f31c0c6
2022-03-01 05:21:48.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@f31c0c6
2022-03-01 05:21:48.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@5769e7ae
2022-03-01 05:21:48.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@5769e7ae
2022-03-01 05:21:48.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5769e7ae
2022-03-01 05:21:48.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@2ca65ce4
2022-03-01 05:21:48.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@2ca65ce4
2022-03-01 05:21:48.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ca65ce4
2022-03-01 05:21:48.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6d511b5f
2022-03-01 05:21:48.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6d511b5f
2022-03-01 05:21:48.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6d511b5f
2022-03-01 05:21:48.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@120f38e6
2022-03-01 05:21:48.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@120f38e6
2022-03-01 05:21:48.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3b1bb3ab
2022-03-01 05:21:48.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3b1bb3ab
2022-03-01 05:21:48.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@37d80fe7
2022-03-01 05:21:48.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@37d80fe7
2022-03-01 05:21:48.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@15bcf458
2022-03-01 05:21:48.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@69adf72c
2022-03-01 05:21:48.297 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@30c31dd7
2022-03-01 05:21:48.297 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@30c31dd7
2022-03-01 05:21:48.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@7249dadf
2022-03-01 05:21:48.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7249dadf
2022-03-01 05:21:48.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@1e11bc55
2022-03-01 05:21:48.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1e11bc55
2022-03-01 05:21:48.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@5ea502e0
2022-03-01 05:21:48.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5ea502e0
2022-03-01 05:21:48.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5ea502e0
2022-03-01 05:21:48.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@77b7ffa4
2022-03-01 05:21:48.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@2102a4d5
2022-03-01 05:21:48.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2102a4d5
2022-03-01 05:21:48.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2102a4d5
2022-03-01 05:21:48.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6ce1f601
2022-03-01 05:21:48.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@372b0d86
2022-03-01 05:21:48.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@372b0d86
2022-03-01 05:21:48.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@70eecdc2
2022-03-01 05:21:48.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70eecdc2
2022-03-01 05:21:48.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1a6f5124
2022-03-01 05:21:48.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1a6f5124
2022-03-01 05:21:48.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@f5c79a6
2022-03-01 05:21:48.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f5c79a6
2022-03-01 05:21:48.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@52d10fb8
2022-03-01 05:21:48.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@52d10fb8
2022-03-01 05:21:48.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@22680f52
2022-03-01 05:21:48.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@2575f671
2022-03-01 05:21:48.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@2575f671
2022-03-01 05:21:48.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@2575f671
2022-03-01 05:21:48.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@30c0ccff
2022-03-01 05:21:48.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@30c0ccff
2022-03-01 05:21:48.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@30c0ccff
2022-03-01 05:21:48.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5851bd4f
2022-03-01 05:21:48.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@547e29a4
2022-03-01 05:21:48.314 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@547e29a4
2022-03-01 05:21:48.314 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@547e29a4
2022-03-01 05:21:48.314 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@c8b96ec
2022-03-01 05:21:48.314 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@c8b96ec
2022-03-01 05:21:48.314 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@c8b96ec
2022-03-01 05:21:48.314 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@5949eba8
2022-03-01 05:21:48.314 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@7728643a
2022-03-01 05:21:48.319 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@3704122f
2022-03-01 05:21:48.319 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3704122f
2022-03-01 05:21:48.319 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3f2049b6
2022-03-01 05:21:48.319 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@3bb9efbc
2022-03-01 05:21:48.319 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3bb9efbc
2022-03-01 05:21:48.319 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@7692cd34
2022-03-01 05:21:48.319 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7692cd34
2022-03-01 05:21:48.319 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@70f43b45
2022-03-01 05:21:48.319 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2c282004
2022-03-01 05:21:48.327 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@78e16155
2022-03-01 05:21:48.328 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@4102b1b1
2022-03-01 05:21:48.328 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4102b1b1
2022-03-01 05:21:48.328 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@f325091
2022-03-01 05:21:48.328 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@437e951d
2022-03-01 05:21:48.328 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@77b325b3
2022-03-01 05:21:48.328 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@63a5e46c
2022-03-01 05:21:48.328 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7e8e8651
2022-03-01 05:21:48.328 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@49ef32e0
2022-03-01 05:21:48.328 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@271f18d3
2022-03-01 05:21:48.328 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bd51ed8
2022-03-01 05:21:48.336 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-01 05:21:48.336 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-01 05:21:48.336 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {password=root, user=root}
2022-03-01 05:21:48.336 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-01 05:21:48.336 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-01 05:21:48.336 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-01 05:21:48.453 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.ClientDaoImpl.<init>(ClientDaoImpl.java:11) ~[classes/:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:11) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:115) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:101) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Client does not support authentication protocol requested by server; consider upgrading MySQL client
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.Util.getInstance(Util.java:381) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:984) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:956) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3491) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3423) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:910) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:3923) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1273) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2031) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46) ~[mysql-connector-java-5.1.6.jar:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282) ~[mysql-connector-java-5.1.6.jar:?]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-03-01 05:21:48.453 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'service' while setting bean property 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'service' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'daoId' while setting bean property 'dao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'daoId' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.ClientDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-03-01 05:23:04.673 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@14dd7b39
2022-03-01 05:23:04.869 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-01 05:23:04.903 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-01 05:23:04.903 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-03-01 05:23:04.903 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'daoId'
2022-03-01 05:23:04.957 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-01 05:23:05.032 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-01 05:23:05.061 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-01 05:23:05.062 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-03-01 05:23:05.064 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-01 05:23:05.065 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP7/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-03-01 05:23:05.065 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-01 05:23:05.078 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-01 05:23:05.078 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-01 05:23:05.078 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-01 05:23:05.141 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-01 05:23:05.144 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-01 05:23:05.144 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-01 05:23:05.165 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-01 05:23:05.194 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-01 05:23:05.221 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-01 05:23:05.255 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@52350abb
2022-03-01 05:23:05.255 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@52350abb
2022-03-01 05:23:05.255 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@52350abb
2022-03-01 05:23:05.255 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1b58ff9e
2022-03-01 05:23:05.255 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5400db36
2022-03-01 05:23:05.255 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@5aa0dbf4
2022-03-01 05:23:05.255 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1051817b
2022-03-01 05:23:05.255 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1051817b
2022-03-01 05:23:05.255 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1051817b
2022-03-01 05:23:05.255 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@41beb473
2022-03-01 05:23:05.255 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@41beb473
2022-03-01 05:23:05.255 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@41beb473
2022-03-01 05:23:05.255 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@677dbd89
2022-03-01 05:23:05.271 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@677dbd89
2022-03-01 05:23:05.271 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@677dbd89
2022-03-01 05:23:05.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@f31c0c6
2022-03-01 05:23:05.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@f31c0c6
2022-03-01 05:23:05.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@f31c0c6
2022-03-01 05:23:05.275 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@5769e7ae
2022-03-01 05:23:05.275 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@5769e7ae
2022-03-01 05:23:05.275 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5769e7ae
2022-03-01 05:23:05.275 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@2ca65ce4
2022-03-01 05:23:05.275 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@2ca65ce4
2022-03-01 05:23:05.277 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ca65ce4
2022-03-01 05:23:05.277 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6d511b5f
2022-03-01 05:23:05.277 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6d511b5f
2022-03-01 05:23:05.277 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6d511b5f
2022-03-01 05:23:05.277 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@120f38e6
2022-03-01 05:23:05.277 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@120f38e6
2022-03-01 05:23:05.277 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3b1bb3ab
2022-03-01 05:23:05.277 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3b1bb3ab
2022-03-01 05:23:05.277 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@37d80fe7
2022-03-01 05:23:05.277 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@37d80fe7
2022-03-01 05:23:05.277 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@15bcf458
2022-03-01 05:23:05.277 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@69adf72c
2022-03-01 05:23:05.277 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@30c31dd7
2022-03-01 05:23:05.277 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@30c31dd7
2022-03-01 05:23:05.277 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@7249dadf
2022-03-01 05:23:05.277 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7249dadf
2022-03-01 05:23:05.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@1e11bc55
2022-03-01 05:23:05.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1e11bc55
2022-03-01 05:23:05.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@5ea502e0
2022-03-01 05:23:05.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5ea502e0
2022-03-01 05:23:05.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5ea502e0
2022-03-01 05:23:05.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@77b7ffa4
2022-03-01 05:23:05.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@2102a4d5
2022-03-01 05:23:05.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2102a4d5
2022-03-01 05:23:05.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2102a4d5
2022-03-01 05:23:05.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6ce1f601
2022-03-01 05:23:05.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@372b0d86
2022-03-01 05:23:05.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@372b0d86
2022-03-01 05:23:05.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@70eecdc2
2022-03-01 05:23:05.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70eecdc2
2022-03-01 05:23:05.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1a6f5124
2022-03-01 05:23:05.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1a6f5124
2022-03-01 05:23:05.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@f5c79a6
2022-03-01 05:23:05.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f5c79a6
2022-03-01 05:23:05.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@52d10fb8
2022-03-01 05:23:05.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@52d10fb8
2022-03-01 05:23:05.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@22680f52
2022-03-01 05:23:05.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@2575f671
2022-03-01 05:23:05.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@2575f671
2022-03-01 05:23:05.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@2575f671
2022-03-01 05:23:05.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@30c0ccff
2022-03-01 05:23:05.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@30c0ccff
2022-03-01 05:23:05.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@30c0ccff
2022-03-01 05:23:05.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5851bd4f
2022-03-01 05:23:05.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@547e29a4
2022-03-01 05:23:05.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@547e29a4
2022-03-01 05:23:05.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@547e29a4
2022-03-01 05:23:05.302 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@c8b96ec
2022-03-01 05:23:05.302 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@c8b96ec
2022-03-01 05:23:05.302 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@c8b96ec
2022-03-01 05:23:05.302 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@5949eba8
2022-03-01 05:23:05.302 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@7728643a
2022-03-01 05:23:05.305 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@3704122f
2022-03-01 05:23:05.305 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3704122f
2022-03-01 05:23:05.305 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3f2049b6
2022-03-01 05:23:05.305 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@3bb9efbc
2022-03-01 05:23:05.305 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3bb9efbc
2022-03-01 05:23:05.305 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@7692cd34
2022-03-01 05:23:05.305 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7692cd34
2022-03-01 05:23:05.305 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@70f43b45
2022-03-01 05:23:05.313 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2c282004
2022-03-01 05:23:05.314 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@78e16155
2022-03-01 05:23:05.315 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@4102b1b1
2022-03-01 05:23:05.315 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4102b1b1
2022-03-01 05:23:05.315 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@f325091
2022-03-01 05:23:05.318 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@437e951d
2022-03-01 05:23:05.318 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@77b325b3
2022-03-01 05:23:05.319 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@63a5e46c
2022-03-01 05:23:05.319 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7e8e8651
2022-03-01 05:23:05.319 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@49ef32e0
2022-03-01 05:23:05.319 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@271f18d3
2022-03-01 05:23:05.319 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bd51ed8
2022-03-01 05:23:05.325 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-01 05:23:05.325 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-01 05:23:05.325 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {password=root, user=root}
2022-03-01 05:23:05.325 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-01 05:23:05.332 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-01 05:23:05.332 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-01 05:23:05.489 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.ClientDaoImpl.<init>(ClientDaoImpl.java:11) ~[classes/:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:11) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:115) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:101) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Client does not support authentication protocol requested by server; consider upgrading MySQL client
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.Util.getInstance(Util.java:381) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:984) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:956) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3491) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3423) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:910) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:3923) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1273) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2031) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46) ~[mysql-connector-java-5.1.6.jar:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282) ~[mysql-connector-java-5.1.6.jar:?]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-03-01 05:23:05.499 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'service' while setting bean property 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'service' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'daoId' while setting bean property 'dao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'daoId' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.ClientDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-03-01 05:26:40.121 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@14dd7b39
2022-03-01 05:26:40.271 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-01 05:26:40.284 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-01 05:26:40.299 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-03-01 05:26:40.299 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'daoId'
2022-03-01 05:26:40.299 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-01 05:26:40.329 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-01 05:26:40.350 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-01 05:26:40.350 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-03-01 05:26:40.350 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-01 05:26:40.350 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP7/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-03-01 05:26:40.350 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-01 05:26:40.350 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-01 05:26:40.366 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-01 05:26:40.366 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-01 05:26:40.395 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-01 05:26:40.403 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-01 05:26:40.403 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-01 05:26:40.411 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-01 05:26:40.428 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-01 05:26:40.428 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-01 05:26:40.460 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@52350abb
2022-03-01 05:26:40.460 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@52350abb
2022-03-01 05:26:40.460 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@52350abb
2022-03-01 05:26:40.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1b58ff9e
2022-03-01 05:26:40.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5400db36
2022-03-01 05:26:40.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@5aa0dbf4
2022-03-01 05:26:40.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1051817b
2022-03-01 05:26:40.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1051817b
2022-03-01 05:26:40.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1051817b
2022-03-01 05:26:40.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@41beb473
2022-03-01 05:26:40.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@41beb473
2022-03-01 05:26:40.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@41beb473
2022-03-01 05:26:40.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@677dbd89
2022-03-01 05:26:40.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@677dbd89
2022-03-01 05:26:40.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@677dbd89
2022-03-01 05:26:40.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@f31c0c6
2022-03-01 05:26:40.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@f31c0c6
2022-03-01 05:26:40.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@f31c0c6
2022-03-01 05:26:40.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@5769e7ae
2022-03-01 05:26:40.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@5769e7ae
2022-03-01 05:26:40.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5769e7ae
2022-03-01 05:26:40.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@2ca65ce4
2022-03-01 05:26:40.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@2ca65ce4
2022-03-01 05:26:40.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ca65ce4
2022-03-01 05:26:40.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6d511b5f
2022-03-01 05:26:40.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6d511b5f
2022-03-01 05:26:40.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6d511b5f
2022-03-01 05:26:40.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@120f38e6
2022-03-01 05:26:40.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@120f38e6
2022-03-01 05:26:40.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3b1bb3ab
2022-03-01 05:26:40.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3b1bb3ab
2022-03-01 05:26:40.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@37d80fe7
2022-03-01 05:26:40.492 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@37d80fe7
2022-03-01 05:26:40.492 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@15bcf458
2022-03-01 05:26:40.492 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@69adf72c
2022-03-01 05:26:40.492 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@30c31dd7
2022-03-01 05:26:40.492 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@30c31dd7
2022-03-01 05:26:40.492 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@7249dadf
2022-03-01 05:26:40.492 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7249dadf
2022-03-01 05:26:40.492 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@1e11bc55
2022-03-01 05:26:40.492 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1e11bc55
2022-03-01 05:26:40.492 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@5ea502e0
2022-03-01 05:26:40.492 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5ea502e0
2022-03-01 05:26:40.492 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5ea502e0
2022-03-01 05:26:40.492 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@77b7ffa4
2022-03-01 05:26:40.492 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@2102a4d5
2022-03-01 05:26:40.492 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2102a4d5
2022-03-01 05:26:40.492 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2102a4d5
2022-03-01 05:26:40.492 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6ce1f601
2022-03-01 05:26:40.492 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@372b0d86
2022-03-01 05:26:40.492 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@372b0d86
2022-03-01 05:26:40.492 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@70eecdc2
2022-03-01 05:26:40.492 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70eecdc2
2022-03-01 05:26:40.492 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1a6f5124
2022-03-01 05:26:40.492 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1a6f5124
2022-03-01 05:26:40.492 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@f5c79a6
2022-03-01 05:26:40.492 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f5c79a6
2022-03-01 05:26:40.492 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@52d10fb8
2022-03-01 05:26:40.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@52d10fb8
2022-03-01 05:26:40.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@22680f52
2022-03-01 05:26:40.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@2575f671
2022-03-01 05:26:40.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@2575f671
2022-03-01 05:26:40.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@2575f671
2022-03-01 05:26:40.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@30c0ccff
2022-03-01 05:26:40.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@30c0ccff
2022-03-01 05:26:40.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@30c0ccff
2022-03-01 05:26:40.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5851bd4f
2022-03-01 05:26:40.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@547e29a4
2022-03-01 05:26:40.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@547e29a4
2022-03-01 05:26:40.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@547e29a4
2022-03-01 05:26:40.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@c8b96ec
2022-03-01 05:26:40.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@c8b96ec
2022-03-01 05:26:40.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@c8b96ec
2022-03-01 05:26:40.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@5949eba8
2022-03-01 05:26:40.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@7728643a
2022-03-01 05:26:40.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@3704122f
2022-03-01 05:26:40.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3704122f
2022-03-01 05:26:40.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3f2049b6
2022-03-01 05:26:40.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@3bb9efbc
2022-03-01 05:26:40.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3bb9efbc
2022-03-01 05:26:40.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@7692cd34
2022-03-01 05:26:40.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7692cd34
2022-03-01 05:26:40.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@70f43b45
2022-03-01 05:26:40.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2c282004
2022-03-01 05:26:40.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@78e16155
2022-03-01 05:26:40.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@4102b1b1
2022-03-01 05:26:40.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4102b1b1
2022-03-01 05:26:40.524 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@f325091
2022-03-01 05:26:40.524 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@437e951d
2022-03-01 05:26:40.524 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@77b325b3
2022-03-01 05:26:40.524 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@63a5e46c
2022-03-01 05:26:40.524 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7e8e8651
2022-03-01 05:26:40.524 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@49ef32e0
2022-03-01 05:26:40.524 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@271f18d3
2022-03-01 05:26:40.524 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bd51ed8
2022-03-01 05:26:40.524 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-01 05:26:40.524 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-01 05:26:40.524 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {password=root, user=root}
2022-03-01 05:26:40.524 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-01 05:26:40.524 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-01 05:26:40.524 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-01 05:26:40.648 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.ClientDaoImpl.<init>(ClientDaoImpl.java:11) ~[classes/:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:11) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:115) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:101) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Client does not support authentication protocol requested by server; consider upgrading MySQL client
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.Util.getInstance(Util.java:381) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:984) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:956) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3491) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3423) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:910) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:3923) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1273) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2031) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46) ~[mysql-connector-java-5.1.6.jar:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282) ~[mysql-connector-java-5.1.6.jar:?]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-03-01 05:26:40.658 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'service' while setting bean property 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'service' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'daoId' while setting bean property 'dao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'daoId' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.ClientDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-03-01 06:20:55.848 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@14dd7b39
2022-03-01 06:20:55.967 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-01 06:20:55.984 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-01 06:20:55.984 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-03-01 06:20:55.984 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'daoId'
2022-03-01 06:20:56.004 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-01 06:20:56.020 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-01 06:20:56.036 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-01 06:20:56.036 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-03-01 06:20:56.048 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-01 06:20:56.048 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP7/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-03-01 06:20:56.052 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-01 06:20:56.052 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-01 06:20:56.052 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-01 06:20:56.052 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-01 06:20:56.094 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-01 06:20:56.094 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-01 06:20:56.094 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-01 06:20:56.102 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-01 06:20:56.120 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-01 06:20:56.120 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-01 06:20:56.167 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@52350abb
2022-03-01 06:20:56.167 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@52350abb
2022-03-01 06:20:56.167 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@52350abb
2022-03-01 06:20:56.167 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1b58ff9e
2022-03-01 06:20:56.167 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5400db36
2022-03-01 06:20:56.167 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@5aa0dbf4
2022-03-01 06:20:56.167 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1051817b
2022-03-01 06:20:56.167 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1051817b
2022-03-01 06:20:56.167 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1051817b
2022-03-01 06:20:56.167 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@41beb473
2022-03-01 06:20:56.167 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@41beb473
2022-03-01 06:20:56.167 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@41beb473
2022-03-01 06:20:56.167 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@677dbd89
2022-03-01 06:20:56.167 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@677dbd89
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@677dbd89
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@f31c0c6
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@f31c0c6
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@f31c0c6
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@5769e7ae
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@5769e7ae
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5769e7ae
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@2ca65ce4
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@2ca65ce4
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ca65ce4
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6d511b5f
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6d511b5f
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6d511b5f
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@120f38e6
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@120f38e6
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3b1bb3ab
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3b1bb3ab
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@37d80fe7
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@37d80fe7
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@15bcf458
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@69adf72c
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@30c31dd7
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@30c31dd7
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@7249dadf
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7249dadf
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@1e11bc55
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1e11bc55
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@5ea502e0
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5ea502e0
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5ea502e0
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@77b7ffa4
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@2102a4d5
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2102a4d5
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2102a4d5
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6ce1f601
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@372b0d86
2022-03-01 06:20:56.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@372b0d86
2022-03-01 06:20:56.199 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@70eecdc2
2022-03-01 06:20:56.199 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70eecdc2
2022-03-01 06:20:56.199 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1a6f5124
2022-03-01 06:20:56.199 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1a6f5124
2022-03-01 06:20:56.199 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@f5c79a6
2022-03-01 06:20:56.199 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f5c79a6
2022-03-01 06:20:56.199 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@52d10fb8
2022-03-01 06:20:56.199 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@52d10fb8
2022-03-01 06:20:56.199 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@22680f52
2022-03-01 06:20:56.199 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@2575f671
2022-03-01 06:20:56.199 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@2575f671
2022-03-01 06:20:56.199 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@2575f671
2022-03-01 06:20:56.199 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@30c0ccff
2022-03-01 06:20:56.199 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@30c0ccff
2022-03-01 06:20:56.199 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@30c0ccff
2022-03-01 06:20:56.199 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5851bd4f
2022-03-01 06:20:56.199 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@547e29a4
2022-03-01 06:20:56.199 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@547e29a4
2022-03-01 06:20:56.199 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@547e29a4
2022-03-01 06:20:56.199 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@c8b96ec
2022-03-01 06:20:56.199 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@c8b96ec
2022-03-01 06:20:56.199 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@c8b96ec
2022-03-01 06:20:56.199 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@5949eba8
2022-03-01 06:20:56.199 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@7728643a
2022-03-01 06:20:56.199 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@3704122f
2022-03-01 06:20:56.199 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3704122f
2022-03-01 06:20:56.199 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3f2049b6
2022-03-01 06:20:56.199 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@3bb9efbc
2022-03-01 06:20:56.199 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3bb9efbc
2022-03-01 06:20:56.215 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@7692cd34
2022-03-01 06:20:56.215 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7692cd34
2022-03-01 06:20:56.215 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@70f43b45
2022-03-01 06:20:56.215 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2c282004
2022-03-01 06:20:56.215 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@78e16155
2022-03-01 06:20:56.215 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@4102b1b1
2022-03-01 06:20:56.215 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4102b1b1
2022-03-01 06:20:56.215 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@f325091
2022-03-01 06:20:56.215 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@437e951d
2022-03-01 06:20:56.215 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@77b325b3
2022-03-01 06:20:56.215 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@63a5e46c
2022-03-01 06:20:56.215 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7e8e8651
2022-03-01 06:20:56.215 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@49ef32e0
2022-03-01 06:20:56.215 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@271f18d3
2022-03-01 06:20:56.215 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bd51ed8
2022-03-01 06:20:56.215 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-01 06:20:56.215 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-01 06:20:56.215 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {password=root, user=root}
2022-03-01 06:20:56.215 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-01 06:20:56.215 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-01 06:20:56.215 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-01 06:20:56.320 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.ClientDaoImpl.<init>(ClientDaoImpl.java:11) ~[classes/:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:11) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:115) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:101) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Client does not support authentication protocol requested by server; consider upgrading MySQL client
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.Util.getInstance(Util.java:381) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:984) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:956) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3491) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3423) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:910) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:3923) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1273) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2031) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46) ~[mysql-connector-java-5.1.6.jar:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282) ~[mysql-connector-java-5.1.6.jar:?]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-03-01 06:20:56.320 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'service' while setting bean property 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'service' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'daoId' while setting bean property 'dao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'daoId' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.ClientDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-03-01 06:21:45.795 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@14dd7b39
2022-03-01 06:21:45.908 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-01 06:21:45.925 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-01 06:21:45.934 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-03-01 06:21:45.934 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'daoId'
2022-03-01 06:21:45.950 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-01 06:21:45.971 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-01 06:21:45.987 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-01 06:21:45.987 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-03-01 06:21:45.987 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-01 06:21:45.987 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP7/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-03-01 06:21:45.995 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-01 06:21:45.995 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-01 06:21:45.995 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-01 06:21:45.995 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-01 06:21:46.027 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-01 06:21:46.027 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-01 06:21:46.044 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-01 06:21:46.044 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-01 06:21:46.076 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-01 06:21:46.076 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-01 06:21:46.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@52350abb
2022-03-01 06:21:46.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@52350abb
2022-03-01 06:21:46.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@52350abb
2022-03-01 06:21:46.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1b58ff9e
2022-03-01 06:21:46.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5400db36
2022-03-01 06:21:46.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@5aa0dbf4
2022-03-01 06:21:46.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1051817b
2022-03-01 06:21:46.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1051817b
2022-03-01 06:21:46.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1051817b
2022-03-01 06:21:46.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@41beb473
2022-03-01 06:21:46.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@41beb473
2022-03-01 06:21:46.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@41beb473
2022-03-01 06:21:46.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@677dbd89
2022-03-01 06:21:46.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@677dbd89
2022-03-01 06:21:46.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@677dbd89
2022-03-01 06:21:46.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@f31c0c6
2022-03-01 06:21:46.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@f31c0c6
2022-03-01 06:21:46.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@f31c0c6
2022-03-01 06:21:46.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@5769e7ae
2022-03-01 06:21:46.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@5769e7ae
2022-03-01 06:21:46.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5769e7ae
2022-03-01 06:21:46.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@2ca65ce4
2022-03-01 06:21:46.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@2ca65ce4
2022-03-01 06:21:46.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ca65ce4
2022-03-01 06:21:46.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6d511b5f
2022-03-01 06:21:46.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6d511b5f
2022-03-01 06:21:46.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6d511b5f
2022-03-01 06:21:46.140 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@120f38e6
2022-03-01 06:21:46.140 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@120f38e6
2022-03-01 06:21:46.140 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3b1bb3ab
2022-03-01 06:21:46.140 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3b1bb3ab
2022-03-01 06:21:46.140 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@37d80fe7
2022-03-01 06:21:46.140 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@37d80fe7
2022-03-01 06:21:46.140 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@15bcf458
2022-03-01 06:21:46.140 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@69adf72c
2022-03-01 06:21:46.140 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@30c31dd7
2022-03-01 06:21:46.140 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@30c31dd7
2022-03-01 06:21:46.145 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@7249dadf
2022-03-01 06:21:46.145 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7249dadf
2022-03-01 06:21:46.145 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@1e11bc55
2022-03-01 06:21:46.145 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1e11bc55
2022-03-01 06:21:46.145 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@5ea502e0
2022-03-01 06:21:46.145 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5ea502e0
2022-03-01 06:21:46.145 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5ea502e0
2022-03-01 06:21:46.145 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@77b7ffa4
2022-03-01 06:21:46.145 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@2102a4d5
2022-03-01 06:21:46.153 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2102a4d5
2022-03-01 06:21:46.153 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2102a4d5
2022-03-01 06:21:46.153 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6ce1f601
2022-03-01 06:21:46.153 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@372b0d86
2022-03-01 06:21:46.153 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@372b0d86
2022-03-01 06:21:46.153 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@70eecdc2
2022-03-01 06:21:46.153 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70eecdc2
2022-03-01 06:21:46.153 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1a6f5124
2022-03-01 06:21:46.153 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1a6f5124
2022-03-01 06:21:46.153 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@f5c79a6
2022-03-01 06:21:46.153 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f5c79a6
2022-03-01 06:21:46.153 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@52d10fb8
2022-03-01 06:21:46.153 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@52d10fb8
2022-03-01 06:21:46.153 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@22680f52
2022-03-01 06:21:46.161 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@2575f671
2022-03-01 06:21:46.161 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@2575f671
2022-03-01 06:21:46.161 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@2575f671
2022-03-01 06:21:46.161 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@30c0ccff
2022-03-01 06:21:46.161 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@30c0ccff
2022-03-01 06:21:46.161 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@30c0ccff
2022-03-01 06:21:46.161 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5851bd4f
2022-03-01 06:21:46.161 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@547e29a4
2022-03-01 06:21:46.161 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@547e29a4
2022-03-01 06:21:46.161 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@547e29a4
2022-03-01 06:21:46.161 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@c8b96ec
2022-03-01 06:21:46.161 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@c8b96ec
2022-03-01 06:21:46.161 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@c8b96ec
2022-03-01 06:21:46.161 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@5949eba8
2022-03-01 06:21:46.161 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@7728643a
2022-03-01 06:21:46.169 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@3704122f
2022-03-01 06:21:46.169 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3704122f
2022-03-01 06:21:46.169 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3f2049b6
2022-03-01 06:21:46.177 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@3bb9efbc
2022-03-01 06:21:46.177 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3bb9efbc
2022-03-01 06:21:46.177 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@7692cd34
2022-03-01 06:21:46.177 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7692cd34
2022-03-01 06:21:46.177 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@70f43b45
2022-03-01 06:21:46.177 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2c282004
2022-03-01 06:21:46.177 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@78e16155
2022-03-01 06:21:46.177 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@4102b1b1
2022-03-01 06:21:46.177 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4102b1b1
2022-03-01 06:21:46.177 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@f325091
2022-03-01 06:21:46.185 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@437e951d
2022-03-01 06:21:46.185 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@77b325b3
2022-03-01 06:21:46.186 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@63a5e46c
2022-03-01 06:21:46.186 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7e8e8651
2022-03-01 06:21:46.186 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@49ef32e0
2022-03-01 06:21:46.186 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@271f18d3
2022-03-01 06:21:46.186 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bd51ed8
2022-03-01 06:21:46.187 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-01 06:21:46.187 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-01 06:21:46.187 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {password=root, user=root}
2022-03-01 06:21:46.187 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-01 06:21:46.187 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-01 06:21:46.187 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-01 06:21:46.283 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.ClientDaoImpl.<init>(ClientDaoImpl.java:11) ~[classes/:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:11) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:115) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:101) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Client does not support authentication protocol requested by server; consider upgrading MySQL client
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.Util.getInstance(Util.java:381) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:984) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:956) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3491) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3423) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:910) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:3923) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1273) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2031) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46) ~[mysql-connector-java-5.1.6.jar:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282) ~[mysql-connector-java-5.1.6.jar:?]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-03-01 06:21:46.298 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'service' while setting bean property 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'service' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'daoId' while setting bean property 'dao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'daoId' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.ClientDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-03-01 06:22:46.355 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@14dd7b39
2022-03-01 06:22:46.474 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-01 06:22:46.490 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-01 06:22:46.490 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-03-01 06:22:46.507 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'daoId'
2022-03-01 06:22:46.518 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-01 06:22:46.538 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-01 06:22:46.554 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-01 06:22:46.554 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-03-01 06:22:46.554 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-01 06:22:46.569 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP7/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-03-01 06:22:46.575 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-01 06:22:46.580 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-01 06:22:46.580 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-01 06:22:46.580 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-01 06:22:46.616 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-01 06:22:46.616 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-01 06:22:46.616 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-01 06:22:46.616 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-01 06:22:46.650 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-01 06:22:46.650 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-01 06:22:46.682 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@52350abb
2022-03-01 06:22:46.682 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@52350abb
2022-03-01 06:22:46.682 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@52350abb
2022-03-01 06:22:46.682 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1b58ff9e
2022-03-01 06:22:46.682 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5400db36
2022-03-01 06:22:46.682 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@5aa0dbf4
2022-03-01 06:22:46.682 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1051817b
2022-03-01 06:22:46.682 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1051817b
2022-03-01 06:22:46.682 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1051817b
2022-03-01 06:22:46.682 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@41beb473
2022-03-01 06:22:46.682 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@41beb473
2022-03-01 06:22:46.682 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@41beb473
2022-03-01 06:22:46.682 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@677dbd89
2022-03-01 06:22:46.682 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@677dbd89
2022-03-01 06:22:46.682 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@677dbd89
2022-03-01 06:22:46.695 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@f31c0c6
2022-03-01 06:22:46.695 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@f31c0c6
2022-03-01 06:22:46.695 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@f31c0c6
2022-03-01 06:22:46.695 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@5769e7ae
2022-03-01 06:22:46.695 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@5769e7ae
2022-03-01 06:22:46.695 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5769e7ae
2022-03-01 06:22:46.695 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@2ca65ce4
2022-03-01 06:22:46.695 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@2ca65ce4
2022-03-01 06:22:46.695 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ca65ce4
2022-03-01 06:22:46.695 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6d511b5f
2022-03-01 06:22:46.695 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6d511b5f
2022-03-01 06:22:46.695 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6d511b5f
2022-03-01 06:22:46.695 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@120f38e6
2022-03-01 06:22:46.695 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@120f38e6
2022-03-01 06:22:46.695 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3b1bb3ab
2022-03-01 06:22:46.695 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3b1bb3ab
2022-03-01 06:22:46.695 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@37d80fe7
2022-03-01 06:22:46.695 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@37d80fe7
2022-03-01 06:22:46.695 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@15bcf458
2022-03-01 06:22:46.695 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@69adf72c
2022-03-01 06:22:46.695 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@30c31dd7
2022-03-01 06:22:46.695 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@30c31dd7
2022-03-01 06:22:46.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@7249dadf
2022-03-01 06:22:46.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7249dadf
2022-03-01 06:22:46.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@1e11bc55
2022-03-01 06:22:46.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1e11bc55
2022-03-01 06:22:46.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@5ea502e0
2022-03-01 06:22:46.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5ea502e0
2022-03-01 06:22:46.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5ea502e0
2022-03-01 06:22:46.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@77b7ffa4
2022-03-01 06:22:46.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@2102a4d5
2022-03-01 06:22:46.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2102a4d5
2022-03-01 06:22:46.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2102a4d5
2022-03-01 06:22:46.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6ce1f601
2022-03-01 06:22:46.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@372b0d86
2022-03-01 06:22:46.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@372b0d86
2022-03-01 06:22:46.711 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@70eecdc2
2022-03-01 06:22:46.711 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70eecdc2
2022-03-01 06:22:46.711 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1a6f5124
2022-03-01 06:22:46.711 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1a6f5124
2022-03-01 06:22:46.711 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@f5c79a6
2022-03-01 06:22:46.711 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f5c79a6
2022-03-01 06:22:46.711 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@52d10fb8
2022-03-01 06:22:46.711 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@52d10fb8
2022-03-01 06:22:46.711 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@22680f52
2022-03-01 06:22:46.711 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@2575f671
2022-03-01 06:22:46.711 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@2575f671
2022-03-01 06:22:46.711 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@2575f671
2022-03-01 06:22:46.711 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@30c0ccff
2022-03-01 06:22:46.711 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@30c0ccff
2022-03-01 06:22:46.711 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@30c0ccff
2022-03-01 06:22:46.711 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5851bd4f
2022-03-01 06:22:46.711 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@547e29a4
2022-03-01 06:22:46.711 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@547e29a4
2022-03-01 06:22:46.711 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@547e29a4
2022-03-01 06:22:46.711 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@c8b96ec
2022-03-01 06:22:46.711 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@c8b96ec
2022-03-01 06:22:46.711 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@c8b96ec
2022-03-01 06:22:46.711 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@5949eba8
2022-03-01 06:22:46.719 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@7728643a
2022-03-01 06:22:46.720 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@3704122f
2022-03-01 06:22:46.720 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3704122f
2022-03-01 06:22:46.720 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3f2049b6
2022-03-01 06:22:46.720 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@3bb9efbc
2022-03-01 06:22:46.720 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3bb9efbc
2022-03-01 06:22:46.720 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@7692cd34
2022-03-01 06:22:46.720 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7692cd34
2022-03-01 06:22:46.720 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@70f43b45
2022-03-01 06:22:46.720 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2c282004
2022-03-01 06:22:46.720 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@78e16155
2022-03-01 06:22:46.720 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@4102b1b1
2022-03-01 06:22:46.728 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4102b1b1
2022-03-01 06:22:46.728 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@f325091
2022-03-01 06:22:46.728 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@437e951d
2022-03-01 06:22:46.728 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@77b325b3
2022-03-01 06:22:46.728 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@63a5e46c
2022-03-01 06:22:46.728 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7e8e8651
2022-03-01 06:22:46.728 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@49ef32e0
2022-03-01 06:22:46.728 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@271f18d3
2022-03-01 06:22:46.728 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bd51ed8
2022-03-01 06:22:46.728 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-01 06:22:46.728 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-01 06:22:46.728 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {password=root, user=root}
2022-03-01 06:22:46.728 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-01 06:22:46.728 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-01 06:22:46.728 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-01 06:22:46.824 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.ClientDaoImpl.<init>(ClientDaoImpl.java:11) ~[classes/:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:11) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:115) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:101) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Client does not support authentication protocol requested by server; consider upgrading MySQL client
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.Util.getInstance(Util.java:381) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:984) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:956) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3491) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3423) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:910) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:3923) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1273) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2031) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46) ~[mysql-connector-java-5.1.6.jar:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282) ~[mysql-connector-java-5.1.6.jar:?]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-03-01 06:22:46.824 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'service' while setting bean property 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'service' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'daoId' while setting bean property 'dao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'daoId' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.ClientDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-03-01 06:23:42.576 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@14dd7b39
2022-03-01 06:23:42.699 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-01 06:23:42.716 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-01 06:23:42.716 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-03-01 06:23:42.716 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'daoId'
2022-03-01 06:23:42.733 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-01 06:23:42.749 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-01 06:23:42.765 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-01 06:23:42.765 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-03-01 06:23:42.765 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-01 06:23:42.783 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP7/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-03-01 06:23:42.783 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-01 06:23:42.791 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-01 06:23:42.791 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-01 06:23:42.791 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-01 06:23:42.831 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-01 06:23:42.833 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-01 06:23:42.833 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-01 06:23:42.846 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-01 06:23:42.869 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-01 06:23:42.877 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-01 06:23:42.907 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@52350abb
2022-03-01 06:23:42.907 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@52350abb
2022-03-01 06:23:42.907 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@52350abb
2022-03-01 06:23:42.907 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1b58ff9e
2022-03-01 06:23:42.907 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5400db36
2022-03-01 06:23:42.907 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@5aa0dbf4
2022-03-01 06:23:42.907 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1051817b
2022-03-01 06:23:42.907 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1051817b
2022-03-01 06:23:42.907 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1051817b
2022-03-01 06:23:42.907 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@41beb473
2022-03-01 06:23:42.907 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@41beb473
2022-03-01 06:23:42.907 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@41beb473
2022-03-01 06:23:42.907 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@677dbd89
2022-03-01 06:23:42.907 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@677dbd89
2022-03-01 06:23:42.907 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@677dbd89
2022-03-01 06:23:42.907 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@f31c0c6
2022-03-01 06:23:42.907 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@f31c0c6
2022-03-01 06:23:42.907 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@f31c0c6
2022-03-01 06:23:42.907 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@5769e7ae
2022-03-01 06:23:42.907 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@5769e7ae
2022-03-01 06:23:42.907 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5769e7ae
2022-03-01 06:23:42.907 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@2ca65ce4
2022-03-01 06:23:42.907 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@2ca65ce4
2022-03-01 06:23:42.923 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ca65ce4
2022-03-01 06:23:42.923 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6d511b5f
2022-03-01 06:23:42.923 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6d511b5f
2022-03-01 06:23:42.923 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6d511b5f
2022-03-01 06:23:42.923 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@120f38e6
2022-03-01 06:23:42.923 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@120f38e6
2022-03-01 06:23:42.923 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3b1bb3ab
2022-03-01 06:23:42.923 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3b1bb3ab
2022-03-01 06:23:42.923 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@37d80fe7
2022-03-01 06:23:42.923 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@37d80fe7
2022-03-01 06:23:42.923 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@15bcf458
2022-03-01 06:23:42.923 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@69adf72c
2022-03-01 06:23:42.923 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@30c31dd7
2022-03-01 06:23:42.923 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@30c31dd7
2022-03-01 06:23:42.923 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@7249dadf
2022-03-01 06:23:42.923 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7249dadf
2022-03-01 06:23:42.923 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@1e11bc55
2022-03-01 06:23:42.923 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1e11bc55
2022-03-01 06:23:42.923 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@5ea502e0
2022-03-01 06:23:42.923 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5ea502e0
2022-03-01 06:23:42.923 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5ea502e0
2022-03-01 06:23:42.923 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@77b7ffa4
2022-03-01 06:23:42.923 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@2102a4d5
2022-03-01 06:23:42.923 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2102a4d5
2022-03-01 06:23:42.923 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2102a4d5
2022-03-01 06:23:42.923 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6ce1f601
2022-03-01 06:23:42.923 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@372b0d86
2022-03-01 06:23:42.923 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@372b0d86
2022-03-01 06:23:42.923 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@70eecdc2
2022-03-01 06:23:42.923 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70eecdc2
2022-03-01 06:23:42.939 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1a6f5124
2022-03-01 06:23:42.939 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1a6f5124
2022-03-01 06:23:42.939 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@f5c79a6
2022-03-01 06:23:42.939 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f5c79a6
2022-03-01 06:23:42.939 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@52d10fb8
2022-03-01 06:23:42.939 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@52d10fb8
2022-03-01 06:23:42.939 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@22680f52
2022-03-01 06:23:42.939 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@2575f671
2022-03-01 06:23:42.939 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@2575f671
2022-03-01 06:23:42.939 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@2575f671
2022-03-01 06:23:42.939 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@30c0ccff
2022-03-01 06:23:42.939 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@30c0ccff
2022-03-01 06:23:42.939 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@30c0ccff
2022-03-01 06:23:42.939 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5851bd4f
2022-03-01 06:23:42.939 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@547e29a4
2022-03-01 06:23:42.939 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@547e29a4
2022-03-01 06:23:42.939 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@547e29a4
2022-03-01 06:23:42.939 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@c8b96ec
2022-03-01 06:23:42.939 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@c8b96ec
2022-03-01 06:23:42.939 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@c8b96ec
2022-03-01 06:23:42.939 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@5949eba8
2022-03-01 06:23:42.939 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@7728643a
2022-03-01 06:23:42.939 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@3704122f
2022-03-01 06:23:42.939 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3704122f
2022-03-01 06:23:42.949 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3f2049b6
2022-03-01 06:23:42.949 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@3bb9efbc
2022-03-01 06:23:42.949 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3bb9efbc
2022-03-01 06:23:42.949 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@7692cd34
2022-03-01 06:23:42.949 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7692cd34
2022-03-01 06:23:42.949 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@70f43b45
2022-03-01 06:23:42.949 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2c282004
2022-03-01 06:23:42.949 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@78e16155
2022-03-01 06:23:42.949 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@4102b1b1
2022-03-01 06:23:42.949 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4102b1b1
2022-03-01 06:23:42.949 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@f325091
2022-03-01 06:23:42.949 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@437e951d
2022-03-01 06:23:42.949 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@77b325b3
2022-03-01 06:23:42.949 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@63a5e46c
2022-03-01 06:23:42.949 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7e8e8651
2022-03-01 06:23:42.949 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@49ef32e0
2022-03-01 06:23:42.949 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@271f18d3
2022-03-01 06:23:42.949 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bd51ed8
2022-03-01 06:23:42.949 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-01 06:23:42.964 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-01 06:23:42.964 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {password=root, user=root}
2022-03-01 06:23:42.964 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-01 06:23:42.964 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-01 06:23:42.964 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-01 06:23:43.081 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.ClientDaoImpl.<init>(ClientDaoImpl.java:11) ~[classes/:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:11) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:115) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:101) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Client does not support authentication protocol requested by server; consider upgrading MySQL client
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.Util.getInstance(Util.java:381) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:984) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:956) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3491) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3423) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:910) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:3923) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1273) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2031) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46) ~[mysql-connector-java-5.1.6.jar:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282) ~[mysql-connector-java-5.1.6.jar:?]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-03-01 06:23:43.081 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'service' while setting bean property 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'service' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'daoId' while setting bean property 'dao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'daoId' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.ClientDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-03-01 06:24:34.340 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@29f7cefd
2022-03-01 06:24:34.484 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-01 06:24:34.502 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-01 06:24:34.508 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-03-01 06:24:34.508 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'daoId'
2022-03-01 06:24:34.523 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-01 06:24:34.539 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-01 06:24:34.567 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-01 06:24:34.567 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-03-01 06:24:34.567 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-01 06:24:34.571 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP7/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-03-01 06:24:34.571 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-01 06:24:34.571 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-01 06:24:34.571 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-01 06:24:34.571 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-01 06:24:34.607 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-01 06:24:34.613 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-01 06:24:34.613 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-01 06:24:34.620 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-01 06:24:34.645 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-01 06:24:34.653 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-01 06:24:34.689 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@41beb473
2022-03-01 06:24:34.689 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@41beb473
2022-03-01 06:24:34.689 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@41beb473
2022-03-01 06:24:34.689 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5dda6f9
2022-03-01 06:24:34.689 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@f31c0c6
2022-03-01 06:24:34.689 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@2e8ab815
2022-03-01 06:24:34.689 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@5489c777
2022-03-01 06:24:34.689 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@5489c777
2022-03-01 06:24:34.689 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5489c777
2022-03-01 06:24:34.689 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@158d255c
2022-03-01 06:24:34.689 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@158d255c
2022-03-01 06:24:34.689 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@158d255c
2022-03-01 06:24:34.689 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@72efb5c1
2022-03-01 06:24:34.689 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@72efb5c1
2022-03-01 06:24:34.689 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@72efb5c1
2022-03-01 06:24:34.689 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@324c64cd
2022-03-01 06:24:34.689 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@324c64cd
2022-03-01 06:24:34.689 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@324c64cd
2022-03-01 06:24:34.689 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@173b9122
2022-03-01 06:24:34.689 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@173b9122
2022-03-01 06:24:34.689 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@173b9122
2022-03-01 06:24:34.689 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@e3cee7b
2022-03-01 06:24:34.689 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@e3cee7b
2022-03-01 06:24:34.689 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@e3cee7b
2022-03-01 06:24:34.700 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@649f2009
2022-03-01 06:24:34.700 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@649f2009
2022-03-01 06:24:34.700 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@649f2009
2022-03-01 06:24:34.700 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@241a53ef
2022-03-01 06:24:34.700 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@241a53ef
2022-03-01 06:24:34.700 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@31500940
2022-03-01 06:24:34.700 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@31500940
2022-03-01 06:24:34.700 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@200606de
2022-03-01 06:24:34.700 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@200606de
2022-03-01 06:24:34.700 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1e11bc55
2022-03-01 06:24:34.706 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@82c57b3
2022-03-01 06:24:34.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@1734f68
2022-03-01 06:24:34.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1734f68
2022-03-01 06:24:34.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@6ce1f601
2022-03-01 06:24:34.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6ce1f601
2022-03-01 06:24:34.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@4e9658b5
2022-03-01 06:24:34.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4e9658b5
2022-03-01 06:24:34.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@1edb61b1
2022-03-01 06:24:34.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1edb61b1
2022-03-01 06:24:34.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1edb61b1
2022-03-01 06:24:34.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@29539e36
2022-03-01 06:24:34.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@344561e0
2022-03-01 06:24:34.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@344561e0
2022-03-01 06:24:34.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@344561e0
2022-03-01 06:24:34.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@251f7d26
2022-03-01 06:24:34.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@60d84f61
2022-03-01 06:24:34.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@60d84f61
2022-03-01 06:24:34.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@2575f671
2022-03-01 06:24:34.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2575f671
2022-03-01 06:24:34.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@30c0ccff
2022-03-01 06:24:34.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@30c0ccff
2022-03-01 06:24:34.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@5851bd4f
2022-03-01 06:24:34.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5851bd4f
2022-03-01 06:24:34.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@588ab592
2022-03-01 06:24:34.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@588ab592
2022-03-01 06:24:34.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2024293c
2022-03-01 06:24:34.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@3c291aad
2022-03-01 06:24:34.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@3c291aad
2022-03-01 06:24:34.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@3c291aad
2022-03-01 06:24:34.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@28c0b664
2022-03-01 06:24:34.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@28c0b664
2022-03-01 06:24:34.722 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@28c0b664
2022-03-01 06:24:34.723 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@6d1310f6
2022-03-01 06:24:34.723 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@29d2d081
2022-03-01 06:24:34.723 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@29d2d081
2022-03-01 06:24:34.723 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@29d2d081
2022-03-01 06:24:34.723 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1bc53649
2022-03-01 06:24:34.723 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1bc53649
2022-03-01 06:24:34.723 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1bc53649
2022-03-01 06:24:34.726 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@4d0402b
2022-03-01 06:24:34.727 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@3f2049b6
2022-03-01 06:24:34.728 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@2b27cc70
2022-03-01 06:24:34.728 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2b27cc70
2022-03-01 06:24:34.728 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6ca320ab
2022-03-01 06:24:34.728 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@3e792ce3
2022-03-01 06:24:34.728 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3e792ce3
2022-03-01 06:24:34.728 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@5b69fd74
2022-03-01 06:24:34.728 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5b69fd74
2022-03-01 06:24:34.728 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@63a5e46c
2022-03-01 06:24:34.728 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6bd51ed8
2022-03-01 06:24:34.728 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@7b02e036
2022-03-01 06:24:34.728 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@65ef722a
2022-03-01 06:24:34.728 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@65ef722a
2022-03-01 06:24:34.728 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@e362c57
2022-03-01 06:24:34.728 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1c4ee95c
2022-03-01 06:24:34.728 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@79c4715d
2022-03-01 06:24:34.728 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5aa360ea
2022-03-01 06:24:34.739 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6548bb7d
2022-03-01 06:24:34.740 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@e27ba81
2022-03-01 06:24:34.740 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@54336c81
2022-03-01 06:24:34.740 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1556f2dd
2022-03-01 06:24:34.740 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-01 06:24:34.740 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-01 06:24:34.740 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {password=root, user=root}
2022-03-01 06:24:34.740 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-01 06:24:34.754 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-01 06:24:34.754 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-01 06:24:34.875 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.ClientDaoImpl.<init>(ClientDaoImpl.java:11) ~[classes/:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:11) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:115) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:101) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Client does not support authentication protocol requested by server; consider upgrading MySQL client
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.Util.getInstance(Util.java:381) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:984) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:956) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3491) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3423) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:910) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:3923) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1273) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2031) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46) ~[mysql-connector-java-5.1.6.jar:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282) ~[mysql-connector-java-5.1.6.jar:?]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-03-01 06:24:34.888 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'service' while setting bean property 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'service' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'daoId' while setting bean property 'dao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'daoId' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.ClientDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-03-03 12:12:24.523 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@14dd7b39
2022-03-03 12:12:24.706 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-03 12:12:24.722 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-03 12:12:24.722 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-03-03 12:12:24.722 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'daoId'
2022-03-03 12:12:24.753 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-03 12:12:24.777 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-03 12:12:24.796 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-03 12:12:24.796 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-03-03 12:12:24.796 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-03 12:12:24.796 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP7/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-03-03 12:12:24.809 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-03 12:12:24.809 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-03 12:12:24.809 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-03 12:12:24.809 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-03 12:12:24.856 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-03 12:12:24.856 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-03 12:12:24.872 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-03 12:12:24.872 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-03 12:12:24.903 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-03 12:12:24.919 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-03 12:12:24.954 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@52350abb
2022-03-03 12:12:24.954 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@52350abb
2022-03-03 12:12:24.954 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@52350abb
2022-03-03 12:12:24.954 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1b58ff9e
2022-03-03 12:12:24.954 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5400db36
2022-03-03 12:12:24.954 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@5aa0dbf4
2022-03-03 12:12:24.954 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1051817b
2022-03-03 12:12:24.954 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1051817b
2022-03-03 12:12:24.954 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1051817b
2022-03-03 12:12:24.954 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@41beb473
2022-03-03 12:12:24.954 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@41beb473
2022-03-03 12:12:24.954 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@41beb473
2022-03-03 12:12:24.954 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@677dbd89
2022-03-03 12:12:24.954 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@677dbd89
2022-03-03 12:12:24.954 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@677dbd89
2022-03-03 12:12:24.954 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@f31c0c6
2022-03-03 12:12:24.954 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@f31c0c6
2022-03-03 12:12:24.962 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@f31c0c6
2022-03-03 12:12:24.962 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@5769e7ae
2022-03-03 12:12:24.962 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@5769e7ae
2022-03-03 12:12:24.962 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5769e7ae
2022-03-03 12:12:24.962 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@2ca65ce4
2022-03-03 12:12:24.962 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@2ca65ce4
2022-03-03 12:12:24.962 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ca65ce4
2022-03-03 12:12:24.962 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6d511b5f
2022-03-03 12:12:24.962 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6d511b5f
2022-03-03 12:12:24.962 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6d511b5f
2022-03-03 12:12:24.962 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@120f38e6
2022-03-03 12:12:24.962 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@120f38e6
2022-03-03 12:12:24.962 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3b1bb3ab
2022-03-03 12:12:24.962 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3b1bb3ab
2022-03-03 12:12:24.970 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@37d80fe7
2022-03-03 12:12:24.970 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@37d80fe7
2022-03-03 12:12:24.970 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@15bcf458
2022-03-03 12:12:24.970 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@69adf72c
2022-03-03 12:12:24.970 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@30c31dd7
2022-03-03 12:12:24.970 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@30c31dd7
2022-03-03 12:12:24.970 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@7249dadf
2022-03-03 12:12:24.970 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7249dadf
2022-03-03 12:12:24.970 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@1e11bc55
2022-03-03 12:12:24.978 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1e11bc55
2022-03-03 12:12:24.978 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@5ea502e0
2022-03-03 12:12:24.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5ea502e0
2022-03-03 12:12:24.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5ea502e0
2022-03-03 12:12:24.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@77b7ffa4
2022-03-03 12:12:24.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@2102a4d5
2022-03-03 12:12:24.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2102a4d5
2022-03-03 12:12:24.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2102a4d5
2022-03-03 12:12:24.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6ce1f601
2022-03-03 12:12:24.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@372b0d86
2022-03-03 12:12:24.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@372b0d86
2022-03-03 12:12:24.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@70eecdc2
2022-03-03 12:12:24.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70eecdc2
2022-03-03 12:12:24.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1a6f5124
2022-03-03 12:12:24.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1a6f5124
2022-03-03 12:12:24.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@f5c79a6
2022-03-03 12:12:24.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f5c79a6
2022-03-03 12:12:24.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@52d10fb8
2022-03-03 12:12:24.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@52d10fb8
2022-03-03 12:12:24.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@22680f52
2022-03-03 12:12:24.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@2575f671
2022-03-03 12:12:24.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@2575f671
2022-03-03 12:12:24.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@2575f671
2022-03-03 12:12:24.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@30c0ccff
2022-03-03 12:12:24.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@30c0ccff
2022-03-03 12:12:24.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@30c0ccff
2022-03-03 12:12:24.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5851bd4f
2022-03-03 12:12:24.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@547e29a4
2022-03-03 12:12:24.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@547e29a4
2022-03-03 12:12:24.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@547e29a4
2022-03-03 12:12:24.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@c8b96ec
2022-03-03 12:12:24.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@c8b96ec
2022-03-03 12:12:24.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@c8b96ec
2022-03-03 12:12:24.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@5949eba8
2022-03-03 12:12:24.996 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@7728643a
2022-03-03 12:12:24.996 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@3704122f
2022-03-03 12:12:24.996 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3704122f
2022-03-03 12:12:24.996 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3f2049b6
2022-03-03 12:12:24.996 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@3bb9efbc
2022-03-03 12:12:24.996 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3bb9efbc
2022-03-03 12:12:24.996 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@7692cd34
2022-03-03 12:12:24.996 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7692cd34
2022-03-03 12:12:24.996 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@70f43b45
2022-03-03 12:12:24.996 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2c282004
2022-03-03 12:12:24.996 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@78e16155
2022-03-03 12:12:24.996 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@4102b1b1
2022-03-03 12:12:24.996 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4102b1b1
2022-03-03 12:12:24.996 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@f325091
2022-03-03 12:12:24.996 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@437e951d
2022-03-03 12:12:24.996 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@77b325b3
2022-03-03 12:12:24.996 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@63a5e46c
2022-03-03 12:12:24.996 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7e8e8651
2022-03-03 12:12:24.996 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@49ef32e0
2022-03-03 12:12:24.996 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@271f18d3
2022-03-03 12:12:24.996 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bd51ed8
2022-03-03 12:12:25.012 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-03 12:12:25.012 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-03 12:12:25.012 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {password=root, user=root}
2022-03-03 12:12:25.012 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-03 12:12:25.012 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-03 12:12:25.012 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-03 12:12:25.128 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.ClientDaoImpl.<init>(ClientDaoImpl.java:11) ~[classes/:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:11) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:115) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:101) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Client does not support authentication protocol requested by server; consider upgrading MySQL client
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.Util.getInstance(Util.java:381) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:984) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:956) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3491) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3423) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:910) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:3923) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1273) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2031) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46) ~[mysql-connector-java-5.1.6.jar:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282) ~[mysql-connector-java-5.1.6.jar:?]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-03-03 12:12:25.136 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'service' while setting bean property 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'service' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'daoId' while setting bean property 'dao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'daoId' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.ClientDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-03-03 12:14:55.621 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@14dd7b39
2022-03-03 12:14:55.756 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-03 12:14:55.777 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-03 12:14:55.786 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-03-03 12:14:55.787 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'daoId'
2022-03-03 12:14:55.799 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-03 12:14:55.821 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-03 12:14:55.842 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-03 12:14:55.842 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-03-03 12:14:55.844 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-03 12:14:55.848 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP7/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-03-03 12:14:55.853 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-03 12:14:55.855 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-03 12:14:55.857 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-03 12:14:55.857 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-03 12:14:55.901 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-03 12:14:55.902 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-03 12:14:55.905 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-03 12:14:55.912 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-03 12:14:55.939 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-03 12:14:55.946 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-03 12:14:55.986 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@52350abb
2022-03-03 12:14:55.987 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@52350abb
2022-03-03 12:14:55.987 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@52350abb
2022-03-03 12:14:55.988 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1b58ff9e
2022-03-03 12:14:55.989 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5400db36
2022-03-03 12:14:55.991 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@5aa0dbf4
2022-03-03 12:14:55.993 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1051817b
2022-03-03 12:14:55.994 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1051817b
2022-03-03 12:14:55.994 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1051817b
2022-03-03 12:14:55.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@41beb473
2022-03-03 12:14:55.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@41beb473
2022-03-03 12:14:55.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@41beb473
2022-03-03 12:14:55.996 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@677dbd89
2022-03-03 12:14:55.997 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@677dbd89
2022-03-03 12:14:55.998 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@677dbd89
2022-03-03 12:14:55.998 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@f31c0c6
2022-03-03 12:14:55.998 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@f31c0c6
2022-03-03 12:14:55.998 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@f31c0c6
2022-03-03 12:14:55.999 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@5769e7ae
2022-03-03 12:14:55.999 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@5769e7ae
2022-03-03 12:14:56.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5769e7ae
2022-03-03 12:14:56.001 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@2ca65ce4
2022-03-03 12:14:56.001 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@2ca65ce4
2022-03-03 12:14:56.002 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ca65ce4
2022-03-03 12:14:56.004 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6d511b5f
2022-03-03 12:14:56.004 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6d511b5f
2022-03-03 12:14:56.005 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6d511b5f
2022-03-03 12:14:56.005 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@120f38e6
2022-03-03 12:14:56.005 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@120f38e6
2022-03-03 12:14:56.006 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3b1bb3ab
2022-03-03 12:14:56.006 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3b1bb3ab
2022-03-03 12:14:56.007 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@37d80fe7
2022-03-03 12:14:56.007 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@37d80fe7
2022-03-03 12:14:56.008 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@15bcf458
2022-03-03 12:14:56.009 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@69adf72c
2022-03-03 12:14:56.009 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@30c31dd7
2022-03-03 12:14:56.010 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@30c31dd7
2022-03-03 12:14:56.011 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@7249dadf
2022-03-03 12:14:56.011 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7249dadf
2022-03-03 12:14:56.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@1e11bc55
2022-03-03 12:14:56.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1e11bc55
2022-03-03 12:14:56.015 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@5ea502e0
2022-03-03 12:14:56.015 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5ea502e0
2022-03-03 12:14:56.015 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5ea502e0
2022-03-03 12:14:56.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@77b7ffa4
2022-03-03 12:14:56.018 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@2102a4d5
2022-03-03 12:14:56.018 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2102a4d5
2022-03-03 12:14:56.018 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2102a4d5
2022-03-03 12:14:56.018 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6ce1f601
2022-03-03 12:14:56.019 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@372b0d86
2022-03-03 12:14:56.019 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@372b0d86
2022-03-03 12:14:56.021 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@70eecdc2
2022-03-03 12:14:56.021 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70eecdc2
2022-03-03 12:14:56.021 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1a6f5124
2022-03-03 12:14:56.021 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1a6f5124
2022-03-03 12:14:56.022 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@f5c79a6
2022-03-03 12:14:56.022 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f5c79a6
2022-03-03 12:14:56.023 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@52d10fb8
2022-03-03 12:14:56.023 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@52d10fb8
2022-03-03 12:14:56.024 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@22680f52
2022-03-03 12:14:56.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@2575f671
2022-03-03 12:14:56.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@2575f671
2022-03-03 12:14:56.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@2575f671
2022-03-03 12:14:56.026 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@30c0ccff
2022-03-03 12:14:56.026 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@30c0ccff
2022-03-03 12:14:56.026 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@30c0ccff
2022-03-03 12:14:56.027 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5851bd4f
2022-03-03 12:14:56.027 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@547e29a4
2022-03-03 12:14:56.027 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@547e29a4
2022-03-03 12:14:56.028 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@547e29a4
2022-03-03 12:14:56.029 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@c8b96ec
2022-03-03 12:14:56.029 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@c8b96ec
2022-03-03 12:14:56.029 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@c8b96ec
2022-03-03 12:14:56.029 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@5949eba8
2022-03-03 12:14:56.030 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@7728643a
2022-03-03 12:14:56.032 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@3704122f
2022-03-03 12:14:56.032 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3704122f
2022-03-03 12:14:56.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3f2049b6
2022-03-03 12:14:56.034 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@3bb9efbc
2022-03-03 12:14:56.035 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3bb9efbc
2022-03-03 12:14:56.036 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@7692cd34
2022-03-03 12:14:56.037 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7692cd34
2022-03-03 12:14:56.037 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@70f43b45
2022-03-03 12:14:56.037 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2c282004
2022-03-03 12:14:56.038 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@78e16155
2022-03-03 12:14:56.039 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@4102b1b1
2022-03-03 12:14:56.039 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4102b1b1
2022-03-03 12:14:56.040 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@f325091
2022-03-03 12:14:56.040 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@437e951d
2022-03-03 12:14:56.040 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@77b325b3
2022-03-03 12:14:56.040 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@63a5e46c
2022-03-03 12:14:56.040 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7e8e8651
2022-03-03 12:14:56.040 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@49ef32e0
2022-03-03 12:14:56.040 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@271f18d3
2022-03-03 12:14:56.040 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bd51ed8
2022-03-03 12:14:56.045 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-03 12:14:56.049 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-03 12:14:56.050 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {password=root, user=root}
2022-03-03 12:14:56.050 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-03 12:14:56.052 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-03 12:14:56.053 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-03 12:14:56.174 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.ClientDaoImpl.<init>(ClientDaoImpl.java:11) ~[classes/:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:11) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:115) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:101) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Client does not support authentication protocol requested by server; consider upgrading MySQL client
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.Util.getInstance(Util.java:381) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:984) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:956) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3491) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3423) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:910) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:3923) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1273) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2031) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46) ~[mysql-connector-java-5.1.6.jar:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282) ~[mysql-connector-java-5.1.6.jar:?]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-03-03 12:14:56.179 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'service' while setting bean property 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'service' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'daoId' while setting bean property 'dao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'daoId' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.ClientDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-03-03 12:39:18.925 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@14dd7b39
2022-03-03 12:39:19.055 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-03 12:39:19.074 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-03 12:39:19.083 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'serviceID'
2022-03-03 12:39:19.083 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'daoID'
2022-03-03 12:39:19.095 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-03 12:39:19.117 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-03 12:39:19.138 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-03 12:39:19.138 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-03-03 12:39:19.140 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-03 12:39:19.144 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP7/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-03-03 12:39:19.148 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-03 12:39:19.149 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-03 12:39:19.151 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-03 12:39:19.151 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-03 12:39:19.190 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-03 12:39:19.191 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-03 12:39:19.193 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-03 12:39:19.201 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-03 12:39:19.222 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-03 12:39:19.229 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-03 12:39:19.262 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@52350abb
2022-03-03 12:39:19.262 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@52350abb
2022-03-03 12:39:19.263 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@52350abb
2022-03-03 12:39:19.263 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1b58ff9e
2022-03-03 12:39:19.264 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5400db36
2022-03-03 12:39:19.264 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@5aa0dbf4
2022-03-03 12:39:19.265 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1051817b
2022-03-03 12:39:19.265 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1051817b
2022-03-03 12:39:19.265 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1051817b
2022-03-03 12:39:19.266 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@41beb473
2022-03-03 12:39:19.266 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@41beb473
2022-03-03 12:39:19.266 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@41beb473
2022-03-03 12:39:19.267 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@677dbd89
2022-03-03 12:39:19.268 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@677dbd89
2022-03-03 12:39:19.268 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@677dbd89
2022-03-03 12:39:19.269 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@f31c0c6
2022-03-03 12:39:19.269 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@f31c0c6
2022-03-03 12:39:19.269 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@f31c0c6
2022-03-03 12:39:19.270 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@5769e7ae
2022-03-03 12:39:19.270 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@5769e7ae
2022-03-03 12:39:19.270 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5769e7ae
2022-03-03 12:39:19.271 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@2ca65ce4
2022-03-03 12:39:19.271 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@2ca65ce4
2022-03-03 12:39:19.272 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ca65ce4
2022-03-03 12:39:19.274 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6d511b5f
2022-03-03 12:39:19.274 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6d511b5f
2022-03-03 12:39:19.274 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6d511b5f
2022-03-03 12:39:19.275 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@120f38e6
2022-03-03 12:39:19.275 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@120f38e6
2022-03-03 12:39:19.276 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3b1bb3ab
2022-03-03 12:39:19.276 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3b1bb3ab
2022-03-03 12:39:19.276 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@37d80fe7
2022-03-03 12:39:19.277 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@37d80fe7
2022-03-03 12:39:19.278 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@15bcf458
2022-03-03 12:39:19.278 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@69adf72c
2022-03-03 12:39:19.279 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@30c31dd7
2022-03-03 12:39:19.279 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@30c31dd7
2022-03-03 12:39:19.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@7249dadf
2022-03-03 12:39:19.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7249dadf
2022-03-03 12:39:19.283 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@1e11bc55
2022-03-03 12:39:19.283 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1e11bc55
2022-03-03 12:39:19.284 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@5ea502e0
2022-03-03 12:39:19.285 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5ea502e0
2022-03-03 12:39:19.285 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5ea502e0
2022-03-03 12:39:19.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@77b7ffa4
2022-03-03 12:39:19.287 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@2102a4d5
2022-03-03 12:39:19.287 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2102a4d5
2022-03-03 12:39:19.287 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2102a4d5
2022-03-03 12:39:19.288 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6ce1f601
2022-03-03 12:39:19.288 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@372b0d86
2022-03-03 12:39:19.289 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@372b0d86
2022-03-03 12:39:19.290 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@70eecdc2
2022-03-03 12:39:19.290 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70eecdc2
2022-03-03 12:39:19.291 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1a6f5124
2022-03-03 12:39:19.291 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1a6f5124
2022-03-03 12:39:19.291 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@f5c79a6
2022-03-03 12:39:19.291 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f5c79a6
2022-03-03 12:39:19.292 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@52d10fb8
2022-03-03 12:39:19.292 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@52d10fb8
2022-03-03 12:39:19.293 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@22680f52
2022-03-03 12:39:19.294 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@2575f671
2022-03-03 12:39:19.294 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@2575f671
2022-03-03 12:39:19.294 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@2575f671
2022-03-03 12:39:19.295 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@30c0ccff
2022-03-03 12:39:19.295 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@30c0ccff
2022-03-03 12:39:19.296 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@30c0ccff
2022-03-03 12:39:19.296 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5851bd4f
2022-03-03 12:39:19.297 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@547e29a4
2022-03-03 12:39:19.297 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@547e29a4
2022-03-03 12:39:19.297 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@547e29a4
2022-03-03 12:39:19.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@c8b96ec
2022-03-03 12:39:19.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@c8b96ec
2022-03-03 12:39:19.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@c8b96ec
2022-03-03 12:39:19.299 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@5949eba8
2022-03-03 12:39:19.299 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@7728643a
2022-03-03 12:39:19.302 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@3704122f
2022-03-03 12:39:19.302 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3704122f
2022-03-03 12:39:19.302 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3f2049b6
2022-03-03 12:39:19.304 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@3bb9efbc
2022-03-03 12:39:19.305 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3bb9efbc
2022-03-03 12:39:19.306 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@7692cd34
2022-03-03 12:39:19.306 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7692cd34
2022-03-03 12:39:19.306 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@70f43b45
2022-03-03 12:39:19.307 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2c282004
2022-03-03 12:39:19.307 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@78e16155
2022-03-03 12:39:19.309 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@4102b1b1
2022-03-03 12:39:19.309 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4102b1b1
2022-03-03 12:39:19.309 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@f325091
2022-03-03 12:39:19.309 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@437e951d
2022-03-03 12:39:19.309 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@77b325b3
2022-03-03 12:39:19.309 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@63a5e46c
2022-03-03 12:39:19.309 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7e8e8651
2022-03-03 12:39:19.310 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@49ef32e0
2022-03-03 12:39:19.310 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@271f18d3
2022-03-03 12:39:19.310 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bd51ed8
2022-03-03 12:39:19.314 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-03 12:39:19.318 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-03 12:39:19.319 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {password=root, user=root}
2022-03-03 12:39:19.319 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-03 12:39:19.321 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-03 12:39:19.321 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-03 12:39:19.423 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.ClientDaoImpl.<init>(ClientDaoImpl.java:11) ~[classes/:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:11) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:115) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:101) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Client does not support authentication protocol requested by server; consider upgrading MySQL client
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.Util.getInstance(Util.java:381) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:984) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:956) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3491) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3423) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:910) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:3923) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1273) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2031) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46) ~[mysql-connector-java-5.1.6.jar:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282) ~[mysql-connector-java-5.1.6.jar:?]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-03-03 12:39:19.429 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'serviceID' while setting bean property 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'serviceID' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'daoID' while setting bean property 'dao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'daoID' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.ClientDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-03-03 13:21:23.754 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@481a15ff
2022-03-03 13:21:23.901 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-03 13:21:23.935 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-03 13:21:23.950 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'serviceID'
2022-03-03 13:21:23.951 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'daoID'
2022-03-03 13:21:23.971 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-03 13:21:24.015 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-03 13:21:24.044 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-03 13:21:24.045 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-03-03 13:21:24.047 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-03 13:21:24.055 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP7/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-03-03 13:21:24.061 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-03 13:21:24.063 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-03 13:21:24.064 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-03 13:21:24.066 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-03 13:21:24.127 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-03 13:21:24.128 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-03 13:21:24.129 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-03 13:21:24.144 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-03 13:21:24.169 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-03 13:21:24.177 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-03 13:21:24.271 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@6d60fe40
2022-03-03 13:21:24.272 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@6d60fe40
2022-03-03 13:21:24.272 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6d60fe40
2022-03-03 13:21:24.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@514646ef
2022-03-03 13:21:24.274 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6f10d5b6
2022-03-03 13:21:24.275 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@433defed
2022-03-03 13:21:24.278 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@25be7b63
2022-03-03 13:21:24.280 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@25be7b63
2022-03-03 13:21:24.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@25be7b63
2022-03-03 13:21:24.285 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@4a8355dd
2022-03-03 13:21:24.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@4a8355dd
2022-03-03 13:21:24.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4a8355dd
2022-03-03 13:21:24.288 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@70cf32e3
2022-03-03 13:21:24.289 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@70cf32e3
2022-03-03 13:21:24.289 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@70cf32e3
2022-03-03 13:21:24.290 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@71075444
2022-03-03 13:21:24.290 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@71075444
2022-03-03 13:21:24.290 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@71075444
2022-03-03 13:21:24.292 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@6f01b95f
2022-03-03 13:21:24.292 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@6f01b95f
2022-03-03 13:21:24.293 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6f01b95f
2022-03-03 13:21:24.294 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@710636b0
2022-03-03 13:21:24.295 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@710636b0
2022-03-03 13:21:24.295 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@710636b0
2022-03-03 13:21:24.297 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@43f02ef2
2022-03-03 13:21:24.297 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@43f02ef2
2022-03-03 13:21:24.297 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@43f02ef2
2022-03-03 13:21:24.299 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@17bffc17
2022-03-03 13:21:24.300 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@17bffc17
2022-03-03 13:21:24.303 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4722ef0c
2022-03-03 13:21:24.303 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4722ef0c
2022-03-03 13:21:24.305 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@f1da57d
2022-03-03 13:21:24.305 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@f1da57d
2022-03-03 13:21:24.306 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@431cd9b2
2022-03-03 13:21:24.307 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@57bc27f5
2022-03-03 13:21:24.309 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@d554c5f
2022-03-03 13:21:24.309 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@d554c5f
2022-03-03 13:21:24.311 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@333d4a8c
2022-03-03 13:21:24.312 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@333d4a8c
2022-03-03 13:21:24.313 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@c05fddc
2022-03-03 13:21:24.313 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@c05fddc
2022-03-03 13:21:24.315 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@79207381
2022-03-03 13:21:24.316 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@79207381
2022-03-03 13:21:24.317 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@79207381
2022-03-03 13:21:24.320 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7a6d7e92
2022-03-03 13:21:24.321 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@16150369
2022-03-03 13:21:24.322 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@16150369
2022-03-03 13:21:24.322 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@16150369
2022-03-03 13:21:24.323 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3932c79a
2022-03-03 13:21:24.324 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@821330f
2022-03-03 13:21:24.324 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@821330f
2022-03-03 13:21:24.326 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@7857fe2
2022-03-03 13:21:24.326 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7857fe2
2022-03-03 13:21:24.327 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@446a1e84
2022-03-03 13:21:24.328 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@446a1e84
2022-03-03 13:21:24.329 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@7139992f
2022-03-03 13:21:24.329 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7139992f
2022-03-03 13:21:24.330 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5c86a017
2022-03-03 13:21:24.330 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5c86a017
2022-03-03 13:21:24.332 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@71687585
2022-03-03 13:21:24.332 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@6a4f1a55
2022-03-03 13:21:24.333 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@6a4f1a55
2022-03-03 13:21:24.333 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@6a4f1a55
2022-03-03 13:21:24.334 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7d3e8655
2022-03-03 13:21:24.334 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7d3e8655
2022-03-03 13:21:24.334 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7d3e8655
2022-03-03 13:21:24.335 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@3aa078fd
2022-03-03 13:21:24.335 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@66ea810
2022-03-03 13:21:24.336 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@66ea810
2022-03-03 13:21:24.336 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@66ea810
2022-03-03 13:21:24.336 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2f953efd
2022-03-03 13:21:24.336 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2f953efd
2022-03-03 13:21:24.337 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2f953efd
2022-03-03 13:21:24.337 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@5a7fe64f
2022-03-03 13:21:24.338 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@24c1b2d2
2022-03-03 13:21:24.340 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@1e16c0aa
2022-03-03 13:21:24.340 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1e16c0aa
2022-03-03 13:21:24.340 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7dc3712
2022-03-03 13:21:24.342 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@36804139
2022-03-03 13:21:24.342 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@36804139
2022-03-03 13:21:24.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@50029372
2022-03-03 13:21:24.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@50029372
2022-03-03 13:21:24.345 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6cc4cdb9
2022-03-03 13:21:24.345 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1a5b6f42
2022-03-03 13:21:24.346 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@7d9f158f
2022-03-03 13:21:24.348 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@a8ef162
2022-03-03 13:21:24.349 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@a8ef162
2022-03-03 13:21:24.349 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7fd7a283
2022-03-03 13:21:24.350 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@22f59fa
2022-03-03 13:21:24.350 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@78fa769e
2022-03-03 13:21:24.350 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@16612a51
2022-03-03 13:21:24.350 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@54e041a4
2022-03-03 13:21:24.350 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2c78324b
2022-03-03 13:21:24.351 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@79defdc
2022-03-03 13:21:24.351 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@18317edc
2022-03-03 13:21:24.356 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-03 13:21:24.360 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-03 13:21:24.360 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-03-03 13:21:24.360 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-03 13:21:24.362 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-03 13:21:24.362 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-03 13:21:24.535 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.ClientDaoImpl.<init>(ClientDaoImpl.java:11) ~[classes/:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_202]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_202]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_202]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_202]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:11) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:115) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:101) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Client does not support authentication protocol requested by server; consider upgrading MySQL client
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_202]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_202]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_202]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_202]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.Util.getInstance(Util.java:381) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:984) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:956) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3491) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3423) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:910) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:3923) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1273) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2031) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46) ~[mysql-connector-java-5.1.6.jar:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_202]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_202]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_202]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_202]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282) ~[mysql-connector-java-5.1.6.jar:?]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-03-03 13:21:24.545 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'serviceID' while setting bean property 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'serviceID' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'daoID' while setting bean property 'dao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'daoID' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.ClientDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-03-03 13:21:24.591 INFO [Finalizer][org.hibernate.orm.connections] [stop] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.stop(DriverManagerConnectionProviderImpl.java:235)] - HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-03 13:22:26.711 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@545997b1
2022-03-03 13:22:26.904 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-03 13:22:26.951 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-03 13:22:26.971 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'serviceID'
2022-03-03 13:22:26.972 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'daoID'
2022-03-03 13:22:26.999 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-03 13:22:27.075 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-03 13:22:27.103 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-03 13:22:27.104 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-03-03 13:22:27.106 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-03 13:22:27.111 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP7/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-03-03 13:22:27.120 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-03 13:22:27.121 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-03 13:22:27.123 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-03 13:22:27.124 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-03 13:22:27.210 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-03 13:22:27.212 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-03 13:22:27.214 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-03 13:22:27.228 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-03 13:22:27.270 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-03 13:22:27.281 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-03 13:22:27.362 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@19932c16
2022-03-03 13:22:27.363 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@19932c16
2022-03-03 13:22:27.364 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@19932c16
2022-03-03 13:22:27.366 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1972e513
2022-03-03 13:22:27.367 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@433defed
2022-03-03 13:22:27.368 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@7fd50002
2022-03-03 13:22:27.370 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@52f27fbd
2022-03-03 13:22:27.371 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@52f27fbd
2022-03-03 13:22:27.371 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52f27fbd
2022-03-03 13:22:27.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@312aa7c
2022-03-03 13:22:27.374 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@312aa7c
2022-03-03 13:22:27.374 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@312aa7c
2022-03-03 13:22:27.376 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@6c4906d3
2022-03-03 13:22:27.376 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@6c4906d3
2022-03-03 13:22:27.377 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6c4906d3
2022-03-03 13:22:27.379 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@4d1bf319
2022-03-03 13:22:27.379 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@4d1bf319
2022-03-03 13:22:27.380 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4d1bf319
2022-03-03 13:22:27.381 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@673fdbce
2022-03-03 13:22:27.382 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@673fdbce
2022-03-03 13:22:27.382 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@673fdbce
2022-03-03 13:22:27.385 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@4e5ed836
2022-03-03 13:22:27.385 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@4e5ed836
2022-03-03 13:22:27.386 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4e5ed836
2022-03-03 13:22:27.387 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f204a1a
2022-03-03 13:22:27.388 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f204a1a
2022-03-03 13:22:27.388 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6f204a1a
2022-03-03 13:22:27.390 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5b38c1ec
2022-03-03 13:22:27.391 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5b38c1ec
2022-03-03 13:22:27.393 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1807e3f6
2022-03-03 13:22:27.393 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1807e3f6
2022-03-03 13:22:27.395 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@72c8e7b
2022-03-03 13:22:27.396 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@72c8e7b
2022-03-03 13:22:27.397 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@790da477
2022-03-03 13:22:27.398 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5e7cd6cc
2022-03-03 13:22:27.400 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@33ecda92
2022-03-03 13:22:27.401 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@33ecda92
2022-03-03 13:22:27.403 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@30f842ca
2022-03-03 13:22:27.403 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@30f842ca
2022-03-03 13:22:27.406 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@7b4c50bc
2022-03-03 13:22:27.406 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7b4c50bc
2022-03-03 13:22:27.407 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@7a6d7e92
2022-03-03 13:22:27.408 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7a6d7e92
2022-03-03 13:22:27.408 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7a6d7e92
2022-03-03 13:22:27.411 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5a5a729f
2022-03-03 13:22:27.413 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@3932c79a
2022-03-03 13:22:27.414 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3932c79a
2022-03-03 13:22:27.414 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3932c79a
2022-03-03 13:22:27.416 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@34bde49d
2022-03-03 13:22:27.419 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@210ab13f
2022-03-03 13:22:27.419 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@210ab13f
2022-03-03 13:22:27.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@29d80d2b
2022-03-03 13:22:27.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@29d80d2b
2022-03-03 13:22:27.422 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5340477f
2022-03-03 13:22:27.423 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5340477f
2022-03-03 13:22:27.424 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@28cda624
2022-03-03 13:22:27.425 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@28cda624
2022-03-03 13:22:27.427 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@71687585
2022-03-03 13:22:27.429 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@71687585
2022-03-03 13:22:27.430 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7fb4f2a9
2022-03-03 13:22:27.432 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@7bbc8656
2022-03-03 13:22:27.433 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@7bbc8656
2022-03-03 13:22:27.433 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@7bbc8656
2022-03-03 13:22:27.435 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@169bb4dd
2022-03-03 13:22:27.436 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@169bb4dd
2022-03-03 13:22:27.436 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@169bb4dd
2022-03-03 13:22:27.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@2d0399f4
2022-03-03 13:22:27.439 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@2254127a
2022-03-03 13:22:27.440 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@2254127a
2022-03-03 13:22:27.440 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@2254127a
2022-03-03 13:22:27.442 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@14bdbc74
2022-03-03 13:22:27.443 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@14bdbc74
2022-03-03 13:22:27.443 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@14bdbc74
2022-03-03 13:22:27.445 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@1b66c0fb
2022-03-03 13:22:27.446 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@1e4f4a5c
2022-03-03 13:22:27.451 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@7dc3712
2022-03-03 13:22:27.452 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7dc3712
2022-03-03 13:22:27.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2fb0623e
2022-03-03 13:22:27.459 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@24959ca4
2022-03-03 13:22:27.460 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@24959ca4
2022-03-03 13:22:27.466 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@6cc4cdb9
2022-03-03 13:22:27.467 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6cc4cdb9
2022-03-03 13:22:27.468 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1a5b6f42
2022-03-03 13:22:27.468 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2ad48653
2022-03-03 13:22:27.470 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@61710c6
2022-03-03 13:22:27.474 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@7fd7a283
2022-03-03 13:22:27.475 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7fd7a283
2022-03-03 13:22:27.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@16612a51
2022-03-03 13:22:27.477 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@54e041a4
2022-03-03 13:22:27.477 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2c78324b
2022-03-03 13:22:27.478 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@79defdc
2022-03-03 13:22:27.478 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@18317edc
2022-03-03 13:22:27.479 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4e0ae11f
2022-03-03 13:22:27.479 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@238d68ff
2022-03-03 13:22:27.479 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4b86805d
2022-03-03 13:22:27.495 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-03 13:22:27.502 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-03 13:22:27.503 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-03-03 13:22:27.503 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-03 13:22:27.508 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-03 13:22:27.511 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-03 13:22:27.783 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.ClientDaoImpl.<init>(ClientDaoImpl.java:11) ~[classes/:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_202]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_202]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_202]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_202]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:11) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:115) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:101) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Client does not support authentication protocol requested by server; consider upgrading MySQL client
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_202]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_202]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_202]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_202]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.Util.getInstance(Util.java:381) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:984) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:956) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3491) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3423) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:910) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:3923) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1273) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2031) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46) ~[mysql-connector-java-5.1.6.jar:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_202]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_202]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_202]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_202]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282) ~[mysql-connector-java-5.1.6.jar:?]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-03-03 13:22:27.801 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'serviceID' while setting bean property 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'serviceID' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'daoID' while setting bean property 'dao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'daoID' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.ClientDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-03-03 13:22:27.860 INFO [Finalizer][org.hibernate.orm.connections] [stop] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.stop(DriverManagerConnectionProviderImpl.java:235)] - HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-03 13:22:39.578 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@545997b1
2022-03-03 13:22:39.728 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-03 13:22:39.758 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-03 13:22:39.768 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'serviceID'
2022-03-03 13:22:39.769 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'daoID'
2022-03-03 13:22:39.778 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-03 13:22:39.811 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-03 13:22:39.829 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-03 13:22:39.829 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-03-03 13:22:39.830 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-03 13:22:39.836 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP7/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-03-03 13:22:39.844 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-03 13:22:39.846 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-03 13:22:39.848 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-03 13:22:39.848 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-03 13:22:39.901 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-03 13:22:39.902 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-03 13:22:39.903 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-03 13:22:39.911 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-03 13:22:39.931 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-03 13:22:39.940 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-03 13:22:39.998 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@19932c16
2022-03-03 13:22:39.999 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@19932c16
2022-03-03 13:22:39.999 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@19932c16
2022-03-03 13:22:40.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1972e513
2022-03-03 13:22:40.001 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@433defed
2022-03-03 13:22:40.001 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@7fd50002
2022-03-03 13:22:40.002 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@52f27fbd
2022-03-03 13:22:40.002 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@52f27fbd
2022-03-03 13:22:40.002 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52f27fbd
2022-03-03 13:22:40.003 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@312aa7c
2022-03-03 13:22:40.004 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@312aa7c
2022-03-03 13:22:40.004 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@312aa7c
2022-03-03 13:22:40.006 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@6c4906d3
2022-03-03 13:22:40.006 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@6c4906d3
2022-03-03 13:22:40.006 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6c4906d3
2022-03-03 13:22:40.007 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@4d1bf319
2022-03-03 13:22:40.007 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@4d1bf319
2022-03-03 13:22:40.007 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4d1bf319
2022-03-03 13:22:40.008 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@673fdbce
2022-03-03 13:22:40.008 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@673fdbce
2022-03-03 13:22:40.008 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@673fdbce
2022-03-03 13:22:40.009 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@4e5ed836
2022-03-03 13:22:40.009 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@4e5ed836
2022-03-03 13:22:40.010 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4e5ed836
2022-03-03 13:22:40.010 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f204a1a
2022-03-03 13:22:40.011 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f204a1a
2022-03-03 13:22:40.011 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6f204a1a
2022-03-03 13:22:40.012 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5b38c1ec
2022-03-03 13:22:40.012 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5b38c1ec
2022-03-03 13:22:40.012 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1807e3f6
2022-03-03 13:22:40.013 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1807e3f6
2022-03-03 13:22:40.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@72c8e7b
2022-03-03 13:22:40.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@72c8e7b
2022-03-03 13:22:40.015 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@790da477
2022-03-03 13:22:40.016 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5e7cd6cc
2022-03-03 13:22:40.016 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@33ecda92
2022-03-03 13:22:40.016 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@33ecda92
2022-03-03 13:22:40.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@30f842ca
2022-03-03 13:22:40.018 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@30f842ca
2022-03-03 13:22:40.019 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@7b4c50bc
2022-03-03 13:22:40.019 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7b4c50bc
2022-03-03 13:22:40.020 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@7a6d7e92
2022-03-03 13:22:40.021 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7a6d7e92
2022-03-03 13:22:40.021 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7a6d7e92
2022-03-03 13:22:40.023 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5a5a729f
2022-03-03 13:22:40.026 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@3932c79a
2022-03-03 13:22:40.026 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3932c79a
2022-03-03 13:22:40.026 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3932c79a
2022-03-03 13:22:40.027 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@34bde49d
2022-03-03 13:22:40.027 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@210ab13f
2022-03-03 13:22:40.027 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@210ab13f
2022-03-03 13:22:40.029 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@29d80d2b
2022-03-03 13:22:40.029 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@29d80d2b
2022-03-03 13:22:40.029 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5340477f
2022-03-03 13:22:40.030 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5340477f
2022-03-03 13:22:40.030 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@28cda624
2022-03-03 13:22:40.030 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@28cda624
2022-03-03 13:22:40.032 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@71687585
2022-03-03 13:22:40.032 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@71687585
2022-03-03 13:22:40.032 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7fb4f2a9
2022-03-03 13:22:40.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@7bbc8656
2022-03-03 13:22:40.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@7bbc8656
2022-03-03 13:22:40.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@7bbc8656
2022-03-03 13:22:40.034 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@169bb4dd
2022-03-03 13:22:40.034 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@169bb4dd
2022-03-03 13:22:40.035 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@169bb4dd
2022-03-03 13:22:40.036 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@2d0399f4
2022-03-03 13:22:40.037 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@2254127a
2022-03-03 13:22:40.037 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@2254127a
2022-03-03 13:22:40.037 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@2254127a
2022-03-03 13:22:40.038 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@14bdbc74
2022-03-03 13:22:40.038 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@14bdbc74
2022-03-03 13:22:40.038 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@14bdbc74
2022-03-03 13:22:40.039 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@1b66c0fb
2022-03-03 13:22:40.039 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@1e4f4a5c
2022-03-03 13:22:40.045 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@7dc3712
2022-03-03 13:22:40.046 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7dc3712
2022-03-03 13:22:40.047 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2fb0623e
2022-03-03 13:22:40.049 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@24959ca4
2022-03-03 13:22:40.050 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@24959ca4
2022-03-03 13:22:40.054 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@6cc4cdb9
2022-03-03 13:22:40.054 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6cc4cdb9
2022-03-03 13:22:40.055 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1a5b6f42
2022-03-03 13:22:40.056 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2ad48653
2022-03-03 13:22:40.056 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@61710c6
2022-03-03 13:22:40.059 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@7fd7a283
2022-03-03 13:22:40.059 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7fd7a283
2022-03-03 13:22:40.060 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@16612a51
2022-03-03 13:22:40.060 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@54e041a4
2022-03-03 13:22:40.060 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2c78324b
2022-03-03 13:22:40.060 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@79defdc
2022-03-03 13:22:40.061 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@18317edc
2022-03-03 13:22:40.061 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4e0ae11f
2022-03-03 13:22:40.061 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@238d68ff
2022-03-03 13:22:40.061 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4b86805d
2022-03-03 13:22:40.069 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-03 13:22:40.078 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-03 13:22:40.079 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-03-03 13:22:40.080 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-03 13:22:40.082 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-03 13:22:40.083 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-03 13:22:40.246 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.ClientDaoImpl.<init>(ClientDaoImpl.java:11) ~[classes/:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_202]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_202]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_202]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_202]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:11) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:115) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:101) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Client does not support authentication protocol requested by server; consider upgrading MySQL client
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_202]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_202]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_202]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_202]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.Util.getInstance(Util.java:381) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:984) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:956) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3491) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3423) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:910) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:3923) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1273) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2031) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46) ~[mysql-connector-java-5.1.6.jar:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_202]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_202]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_202]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_202]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282) ~[mysql-connector-java-5.1.6.jar:?]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-03-03 13:22:40.255 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'serviceID' while setting bean property 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'serviceID' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'daoID' while setting bean property 'dao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'daoID' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.ClientDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-03-03 13:22:40.322 INFO [Finalizer][org.hibernate.orm.connections] [stop] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.stop(DriverManagerConnectionProviderImpl.java:235)] - HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-03 13:22:50.491 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@77846d2c
2022-03-03 13:22:50.617 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-03 13:22:50.637 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-03 13:22:50.647 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'serviceID'
2022-03-03 13:22:50.648 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'daoID'
2022-03-03 13:22:50.658 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-03 13:22:50.690 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-03 13:22:50.708 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-03 13:22:50.708 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-03-03 13:22:50.710 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-03 13:22:50.715 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP7/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-03-03 13:22:50.720 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-03 13:22:50.721 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-03 13:22:50.723 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-03 13:22:50.723 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-03 13:22:50.769 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-03 13:22:50.771 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-03 13:22:50.772 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-03 13:22:50.784 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-03 13:22:50.805 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-03 13:22:50.812 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-03 13:22:50.855 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@514646ef
2022-03-03 13:22:50.855 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@514646ef
2022-03-03 13:22:50.855 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@514646ef
2022-03-03 13:22:50.856 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@35841320
2022-03-03 13:22:50.857 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3f4faf53
2022-03-03 13:22:50.859 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@304bb45b
2022-03-03 13:22:50.859 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@4a8355dd
2022-03-03 13:22:50.860 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@4a8355dd
2022-03-03 13:22:50.860 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4a8355dd
2022-03-03 13:22:50.862 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@72bc6553
2022-03-03 13:22:50.862 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@72bc6553
2022-03-03 13:22:50.862 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@72bc6553
2022-03-03 13:22:50.864 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@71075444
2022-03-03 13:22:50.865 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@71075444
2022-03-03 13:22:50.865 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@71075444
2022-03-03 13:22:50.866 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@5c80cf32
2022-03-03 13:22:50.866 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@5c80cf32
2022-03-03 13:22:50.867 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5c80cf32
2022-03-03 13:22:50.868 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@7a5ceedd
2022-03-03 13:22:50.868 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@7a5ceedd
2022-03-03 13:22:50.868 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7a5ceedd
2022-03-03 13:22:50.870 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@740fb309
2022-03-03 13:22:50.870 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@740fb309
2022-03-03 13:22:50.870 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@740fb309
2022-03-03 13:22:50.871 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@5f8e8a9d
2022-03-03 13:22:50.871 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@5f8e8a9d
2022-03-03 13:22:50.872 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5f8e8a9d
2022-03-03 13:22:50.873 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4722ef0c
2022-03-03 13:22:50.873 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4722ef0c
2022-03-03 13:22:50.874 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@f1da57d
2022-03-03 13:22:50.874 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@f1da57d
2022-03-03 13:22:50.876 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@431cd9b2
2022-03-03 13:22:50.876 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@431cd9b2
2022-03-03 13:22:50.877 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@57bc27f5
2022-03-03 13:22:50.878 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@d554c5f
2022-03-03 13:22:50.878 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@6e2829c7
2022-03-03 13:22:50.879 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6e2829c7
2022-03-03 13:22:50.880 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@4d14b6c2
2022-03-03 13:22:50.880 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4d14b6c2
2022-03-03 13:22:50.882 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@50378a4
2022-03-03 13:22:50.882 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@50378a4
2022-03-03 13:22:50.883 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@97e93f1
2022-03-03 13:22:50.883 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@97e93f1
2022-03-03 13:22:50.884 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@97e93f1
2022-03-03 13:22:50.885 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@16150369
2022-03-03 13:22:50.887 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@23f5b5dc
2022-03-03 13:22:50.887 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@23f5b5dc
2022-03-03 13:22:50.888 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@23f5b5dc
2022-03-03 13:22:50.889 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@821330f
2022-03-03 13:22:50.889 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@7857fe2
2022-03-03 13:22:50.889 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7857fe2
2022-03-03 13:22:50.890 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@446a1e84
2022-03-03 13:22:50.890 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@446a1e84
2022-03-03 13:22:50.892 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7139992f
2022-03-03 13:22:50.892 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7139992f
2022-03-03 13:22:50.893 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@7eecb5b8
2022-03-03 13:22:50.893 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7eecb5b8
2022-03-03 13:22:50.895 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1b919693
2022-03-03 13:22:50.895 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1b919693
2022-03-03 13:22:50.896 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6a4f1a55
2022-03-03 13:22:50.897 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@7d3e8655
2022-03-03 13:22:50.897 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@7d3e8655
2022-03-03 13:22:50.897 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@7d3e8655
2022-03-03 13:22:50.897 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3aa078fd
2022-03-03 13:22:50.898 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3aa078fd
2022-03-03 13:22:50.898 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3aa078fd
2022-03-03 13:22:50.898 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@66ea810
2022-03-03 13:22:50.899 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@2f953efd
2022-03-03 13:22:50.899 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@2f953efd
2022-03-03 13:22:50.900 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@2f953efd
2022-03-03 13:22:50.900 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5a7fe64f
2022-03-03 13:22:50.903 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5a7fe64f
2022-03-03 13:22:50.904 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5a7fe64f
2022-03-03 13:22:50.905 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@24c1b2d2
2022-03-03 13:22:50.905 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@465232e9
2022-03-03 13:22:50.908 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@5e3f861
2022-03-03 13:22:50.909 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5e3f861
2022-03-03 13:22:50.909 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5be1d0a4
2022-03-03 13:22:50.911 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@5c86dbc5
2022-03-03 13:22:50.911 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5c86dbc5
2022-03-03 13:22:50.913 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@7f2cfe3f
2022-03-03 13:22:50.914 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7f2cfe3f
2022-03-03 13:22:50.914 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@32115b28
2022-03-03 13:22:50.915 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d9f158f
2022-03-03 13:22:50.916 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@383dc82c
2022-03-03 13:22:50.918 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@78fa769e
2022-03-03 13:22:50.918 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@78fa769e
2022-03-03 13:22:50.918 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2c78324b
2022-03-03 13:22:50.918 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@79defdc
2022-03-03 13:22:50.919 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@18317edc
2022-03-03 13:22:50.919 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4e0ae11f
2022-03-03 13:22:50.919 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@238d68ff
2022-03-03 13:22:50.919 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4b86805d
2022-03-03 13:22:50.919 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5852c06f
2022-03-03 13:22:50.920 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4149c063
2022-03-03 13:22:50.927 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-03 13:22:50.931 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-03 13:22:50.931 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-03-03 13:22:50.932 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-03 13:22:50.933 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-03 13:22:50.933 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-03 13:22:51.077 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.ClientDaoImpl.<init>(ClientDaoImpl.java:11) ~[classes/:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_202]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_202]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_202]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_202]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:11) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:115) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:101) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Client does not support authentication protocol requested by server; consider upgrading MySQL client
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_202]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_202]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_202]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_202]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.Util.getInstance(Util.java:381) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:984) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:956) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3491) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3423) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:910) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:3923) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1273) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2031) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46) ~[mysql-connector-java-5.1.6.jar:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_202]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_202]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_202]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_202]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282) ~[mysql-connector-java-5.1.6.jar:?]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-03-03 13:22:51.086 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'serviceID' while setting bean property 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'serviceID' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'daoID' while setting bean property 'dao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'daoID' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.ClientDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-03-03 13:22:51.123 INFO [Finalizer][org.hibernate.orm.connections] [stop] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.stop(DriverManagerConnectionProviderImpl.java:235)] - HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-03 13:32:52.723 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@77846d2c
2022-03-03 13:32:52.795 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-03 13:32:52.816 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-03 13:32:52.826 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'ServiceID'
2022-03-03 13:32:52.826 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'DaoID'
2022-03-03 13:32:52.835 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-03 13:32:52.868 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-03 13:32:52.908 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-03 13:32:52.908 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-03-03 13:32:52.910 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-03 13:32:52.914 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP7/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-03-03 13:32:52.919 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-03 13:32:52.920 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-03 13:32:52.921 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-03 13:32:52.922 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-03 13:32:52.960 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-03 13:32:52.962 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-03 13:32:52.965 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-03 13:32:52.975 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-03 13:32:53.002 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-03 13:32:53.010 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-03 13:32:53.072 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@5ddeb7cb
2022-03-03 13:32:53.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@5ddeb7cb
2022-03-03 13:32:53.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5ddeb7cb
2022-03-03 13:32:53.074 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6be968ce
2022-03-03 13:32:53.076 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4082ba93
2022-03-03 13:32:53.077 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@609e8838
2022-03-03 13:32:53.078 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@73eb439a
2022-03-03 13:32:53.078 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@73eb439a
2022-03-03 13:32:53.078 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@73eb439a
2022-03-03 13:32:53.079 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@7ae0a9ec
2022-03-03 13:32:53.079 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@7ae0a9ec
2022-03-03 13:32:53.080 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7ae0a9ec
2022-03-03 13:32:53.081 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@2a693f59
2022-03-03 13:32:53.082 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@2a693f59
2022-03-03 13:32:53.082 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2a693f59
2022-03-03 13:32:53.083 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@723ca036
2022-03-03 13:32:53.083 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@723ca036
2022-03-03 13:32:53.084 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@723ca036
2022-03-03 13:32:53.085 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4d0d9fe7
2022-03-03 13:32:53.085 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4d0d9fe7
2022-03-03 13:32:53.085 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4d0d9fe7
2022-03-03 13:32:53.086 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6c4906d3
2022-03-03 13:32:53.087 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6c4906d3
2022-03-03 13:32:53.087 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6c4906d3
2022-03-03 13:32:53.088 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@5c80cf32
2022-03-03 13:32:53.088 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@5c80cf32
2022-03-03 13:32:53.088 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5c80cf32
2022-03-03 13:32:53.089 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5b799640
2022-03-03 13:32:53.089 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5b799640
2022-03-03 13:32:53.090 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4e5ed836
2022-03-03 13:32:53.090 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4e5ed836
2022-03-03 13:32:53.091 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@239a307b
2022-03-03 13:32:53.091 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@239a307b
2022-03-03 13:32:53.092 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5745ca0e
2022-03-03 13:32:53.093 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@15a34df2
2022-03-03 13:32:53.093 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@55cb6996
2022-03-03 13:32:53.094 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@55cb6996
2022-03-03 13:32:53.095 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@38467116
2022-03-03 13:32:53.096 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@38467116
2022-03-03 13:32:53.097 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@5e7cd6cc
2022-03-03 13:32:53.097 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5e7cd6cc
2022-03-03 13:32:53.099 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@6e2829c7
2022-03-03 13:32:53.100 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6e2829c7
2022-03-03 13:32:53.100 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6e2829c7
2022-03-03 13:32:53.102 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1c742ed4
2022-03-03 13:32:53.105 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@69c81773
2022-03-03 13:32:53.105 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@69c81773
2022-03-03 13:32:53.105 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@69c81773
2022-03-03 13:32:53.106 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@c05fddc
2022-03-03 13:32:53.107 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@50378a4
2022-03-03 13:32:53.107 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@50378a4
2022-03-03 13:32:53.108 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@7a6d7e92
2022-03-03 13:32:53.108 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7a6d7e92
2022-03-03 13:32:53.109 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@16150369
2022-03-03 13:32:53.109 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@16150369
2022-03-03 13:32:53.110 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@23f5b5dc
2022-03-03 13:32:53.110 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@23f5b5dc
2022-03-03 13:32:53.111 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6f15d60e
2022-03-03 13:32:53.112 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6f15d60e
2022-03-03 13:32:53.112 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@58e1d9d
2022-03-03 13:32:53.113 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@47caedad
2022-03-03 13:32:53.114 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@47caedad
2022-03-03 13:32:53.114 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@47caedad
2022-03-03 13:32:53.115 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1500b2f3
2022-03-03 13:32:53.115 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1500b2f3
2022-03-03 13:32:53.116 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1500b2f3
2022-03-03 13:32:53.116 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5c86a017
2022-03-03 13:32:53.118 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@1b919693
2022-03-03 13:32:53.118 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@1b919693
2022-03-03 13:32:53.118 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@1b919693
2022-03-03 13:32:53.120 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2584b82d
2022-03-03 13:32:53.120 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2584b82d
2022-03-03 13:32:53.120 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2584b82d
2022-03-03 13:32:53.121 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@626abbd0
2022-03-03 13:32:53.121 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@46d59067
2022-03-03 13:32:53.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@7486b455
2022-03-03 13:32:53.125 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7486b455
2022-03-03 13:32:53.125 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5efa40fe
2022-03-03 13:32:53.127 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@6d5620ce
2022-03-03 13:32:53.128 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d5620ce
2022-03-03 13:32:53.130 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@24959ca4
2022-03-03 13:32:53.130 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@24959ca4
2022-03-03 13:32:53.131 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@461ad730
2022-03-03 13:32:53.131 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7068e664
2022-03-03 13:32:53.132 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@7975d1d8
2022-03-03 13:32:53.133 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@32115b28
2022-03-03 13:32:53.134 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@32115b28
2022-03-03 13:32:53.135 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7d9f158f
2022-03-03 13:32:53.135 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@45efd90f
2022-03-03 13:32:53.135 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4b8729ff
2022-03-03 13:32:53.135 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@61710c6
2022-03-03 13:32:53.135 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-03-03 13:32:53.135 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-03-03 13:32:53.136 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-03-03 13:32:53.136 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-03-03 13:32:53.141 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-03 13:32:53.143 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-03 13:32:53.145 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-03-03 13:32:53.145 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-03 13:32:53.146 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-03 13:32:53.146 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-03 13:32:53.284 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.ClientDaoImpl.<init>(ClientDaoImpl.java:11) ~[classes/:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_202]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_202]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_202]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_202]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:11) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:115) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:101) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Client does not support authentication protocol requested by server; consider upgrading MySQL client
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_202]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_202]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_202]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_202]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.Util.getInstance(Util.java:381) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:984) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:956) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3491) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3423) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:910) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:3923) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1273) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2031) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46) ~[mysql-connector-java-5.1.6.jar:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_202]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_202]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_202]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_202]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282) ~[mysql-connector-java-5.1.6.jar:?]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-03-03 13:32:53.293 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'ServiceID' while setting bean property 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ServiceID' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'DaoID' while setting bean property 'dao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'DaoID' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.ClientDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-03-03 13:32:53.334 INFO [Finalizer][org.hibernate.orm.connections] [stop] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.stop(DriverManagerConnectionProviderImpl.java:235)] - HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-03 13:33:48.103 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@545997b1
2022-03-03 13:33:48.177 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-03 13:33:48.203 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-03 13:33:48.212 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'ServiceID'
2022-03-03 13:33:48.213 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'DaoID'
2022-03-03 13:33:48.223 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-03 13:33:48.256 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-03 13:33:48.291 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-03 13:33:48.293 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-03-03 13:33:48.295 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-03 13:33:48.300 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP7/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-03-03 13:33:48.306 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-03 13:33:48.307 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-03 13:33:48.309 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-03 13:33:48.309 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-03 13:33:48.362 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-03 13:33:48.364 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-03 13:33:48.366 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-03 13:33:48.376 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-03 13:33:48.405 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-03 13:33:48.413 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-03 13:33:48.471 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@8462f31
2022-03-03 13:33:48.473 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@8462f31
2022-03-03 13:33:48.473 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@8462f31
2022-03-03 13:33:48.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@59402b8f
2022-03-03 13:33:48.478 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@76494737
2022-03-03 13:33:48.478 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@17fc391b
2022-03-03 13:33:48.480 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@23e84203
2022-03-03 13:33:48.481 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@23e84203
2022-03-03 13:33:48.481 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@23e84203
2022-03-03 13:33:48.481 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@302c971f
2022-03-03 13:33:48.482 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@302c971f
2022-03-03 13:33:48.482 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@302c971f
2022-03-03 13:33:48.483 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@548a24a
2022-03-03 13:33:48.485 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@548a24a
2022-03-03 13:33:48.485 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@548a24a
2022-03-03 13:33:48.486 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@533bda92
2022-03-03 13:33:48.486 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@533bda92
2022-03-03 13:33:48.486 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@533bda92
2022-03-03 13:33:48.487 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4c163e3
2022-03-03 13:33:48.487 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4c163e3
2022-03-03 13:33:48.488 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4c163e3
2022-03-03 13:33:48.489 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@5a59ca5e
2022-03-03 13:33:48.489 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@5a59ca5e
2022-03-03 13:33:48.489 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5a59ca5e
2022-03-03 13:33:48.490 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@4d1bf319
2022-03-03 13:33:48.491 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@4d1bf319
2022-03-03 13:33:48.491 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4d1bf319
2022-03-03 13:33:48.492 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7a5ceedd
2022-03-03 13:33:48.492 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7a5ceedd
2022-03-03 13:33:48.496 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3de8f619
2022-03-03 13:33:48.496 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3de8f619
2022-03-03 13:33:48.497 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@7bd7d6d6
2022-03-03 13:33:48.497 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@7bd7d6d6
2022-03-03 13:33:48.498 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2de56eb2
2022-03-03 13:33:48.499 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@17bffc17
2022-03-03 13:33:48.500 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@4722ef0c
2022-03-03 13:33:48.501 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4722ef0c
2022-03-03 13:33:48.502 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@65f8f5ae
2022-03-03 13:33:48.502 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@65f8f5ae
2022-03-03 13:33:48.503 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@5fb759d6
2022-03-03 13:33:48.504 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5fb759d6
2022-03-03 13:33:48.505 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@33ecda92
2022-03-03 13:33:48.506 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@33ecda92
2022-03-03 13:33:48.506 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@33ecda92
2022-03-03 13:33:48.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3feb2dda
2022-03-03 13:33:48.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@dc7df28
2022-03-03 13:33:48.509 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@dc7df28
2022-03-03 13:33:48.509 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@dc7df28
2022-03-03 13:33:48.509 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4d14b6c2
2022-03-03 13:33:48.510 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@7b4c50bc
2022-03-03 13:33:48.510 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b4c50bc
2022-03-03 13:33:48.511 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@491b9b8
2022-03-03 13:33:48.511 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@491b9b8
2022-03-03 13:33:48.512 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5a5a729f
2022-03-03 13:33:48.512 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5a5a729f
2022-03-03 13:33:48.513 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@3932c79a
2022-03-03 13:33:48.513 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3932c79a
2022-03-03 13:33:48.515 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@20b2475a
2022-03-03 13:33:48.515 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@20b2475a
2022-03-03 13:33:48.515 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1be2019a
2022-03-03 13:33:48.516 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@2657d4dd
2022-03-03 13:33:48.516 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@2657d4dd
2022-03-03 13:33:48.517 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@2657d4dd
2022-03-03 13:33:48.518 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@387a8303
2022-03-03 13:33:48.518 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@387a8303
2022-03-03 13:33:48.518 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@387a8303
2022-03-03 13:33:48.519 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@57db2b13
2022-03-03 13:33:48.520 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@71687585
2022-03-03 13:33:48.520 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@71687585
2022-03-03 13:33:48.520 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@71687585
2022-03-03 13:33:48.521 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6a4f1a55
2022-03-03 13:33:48.521 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6a4f1a55
2022-03-03 13:33:48.522 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6a4f1a55
2022-03-03 13:33:48.523 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@7d3e8655
2022-03-03 13:33:48.523 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@3aa078fd
2022-03-03 13:33:48.527 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@1df8da7a
2022-03-03 13:33:48.527 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1df8da7a
2022-03-03 13:33:48.527 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@660acfb
2022-03-03 13:33:48.530 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@5be1d0a4
2022-03-03 13:33:48.531 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5be1d0a4
2022-03-03 13:33:48.533 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@20bd8be5
2022-03-03 13:33:48.533 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@20bd8be5
2022-03-03 13:33:48.533 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@10289886
2022-03-03 13:33:48.534 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4ee203eb
2022-03-03 13:33:48.535 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@769a1df5
2022-03-03 13:33:48.537 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@1a5b6f42
2022-03-03 13:33:48.537 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1a5b6f42
2022-03-03 13:33:48.537 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2ad48653
2022-03-03 13:33:48.537 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6bb4dd34
2022-03-03 13:33:48.538 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7d9f158f
2022-03-03 13:33:48.538 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@45efd90f
2022-03-03 13:33:48.538 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4b8729ff
2022-03-03 13:33:48.538 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@61710c6
2022-03-03 13:33:48.538 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-03-03 13:33:48.538 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-03-03 13:33:48.546 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-03 13:33:48.550 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-03 13:33:48.551 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-03-03 13:33:48.552 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-03 13:33:48.554 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-03 13:33:48.554 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-03 13:33:48.700 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.ClientDaoImpl.<init>(ClientDaoImpl.java:11) ~[classes/:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_202]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_202]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_202]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_202]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:11) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:115) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:101) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Client does not support authentication protocol requested by server; consider upgrading MySQL client
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_202]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_202]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_202]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_202]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.Util.getInstance(Util.java:381) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:984) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:956) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3491) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3423) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:910) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:3923) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1273) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2031) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46) ~[mysql-connector-java-5.1.6.jar:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_202]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_202]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_202]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_202]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282) ~[mysql-connector-java-5.1.6.jar:?]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-03-03 13:33:48.708 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'ServiceID' while setting bean property 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ServiceID' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'DaoID' while setting bean property 'dao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'DaoID' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.ClientDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-03-03 13:33:48.746 INFO [Finalizer][org.hibernate.orm.connections] [stop] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.stop(DriverManagerConnectionProviderImpl.java:235)] - HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-03 13:35:15.935 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@545997b1
2022-03-03 13:35:16.009 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-03 13:35:16.030 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-03 13:35:16.040 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'ServiceID'
2022-03-03 13:35:16.040 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'DaoID'
2022-03-03 13:35:16.052 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-03 13:35:16.082 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-03 13:35:16.122 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-03 13:35:16.123 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-03-03 13:35:16.124 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-03 13:35:16.128 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP7/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-03-03 13:35:16.132 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-03 13:35:16.134 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-03 13:35:16.135 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-03 13:35:16.135 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-03 13:35:16.181 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-03 13:35:16.182 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-03 13:35:16.185 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-03 13:35:16.196 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-03 13:35:16.216 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-03 13:35:16.226 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-03 13:35:16.292 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@8462f31
2022-03-03 13:35:16.295 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@8462f31
2022-03-03 13:35:16.297 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@8462f31
2022-03-03 13:35:16.300 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@59402b8f
2022-03-03 13:35:16.301 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@76494737
2022-03-03 13:35:16.301 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@17fc391b
2022-03-03 13:35:16.303 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@23e84203
2022-03-03 13:35:16.303 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@23e84203
2022-03-03 13:35:16.303 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@23e84203
2022-03-03 13:35:16.303 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@302c971f
2022-03-03 13:35:16.303 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@302c971f
2022-03-03 13:35:16.303 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@302c971f
2022-03-03 13:35:16.304 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@548a24a
2022-03-03 13:35:16.305 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@548a24a
2022-03-03 13:35:16.305 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@548a24a
2022-03-03 13:35:16.305 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@533bda92
2022-03-03 13:35:16.306 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@533bda92
2022-03-03 13:35:16.306 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@533bda92
2022-03-03 13:35:16.307 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4c163e3
2022-03-03 13:35:16.307 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4c163e3
2022-03-03 13:35:16.308 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4c163e3
2022-03-03 13:35:16.308 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@5a59ca5e
2022-03-03 13:35:16.310 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@5a59ca5e
2022-03-03 13:35:16.310 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5a59ca5e
2022-03-03 13:35:16.310 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@4d1bf319
2022-03-03 13:35:16.311 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@4d1bf319
2022-03-03 13:35:16.311 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4d1bf319
2022-03-03 13:35:16.312 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7a5ceedd
2022-03-03 13:35:16.312 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7a5ceedd
2022-03-03 13:35:16.312 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3de8f619
2022-03-03 13:35:16.313 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3de8f619
2022-03-03 13:35:16.315 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@7bd7d6d6
2022-03-03 13:35:16.316 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@7bd7d6d6
2022-03-03 13:35:16.317 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2de56eb2
2022-03-03 13:35:16.318 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@17bffc17
2022-03-03 13:35:16.319 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@4722ef0c
2022-03-03 13:35:16.319 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4722ef0c
2022-03-03 13:35:16.320 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@65f8f5ae
2022-03-03 13:35:16.322 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@65f8f5ae
2022-03-03 13:35:16.323 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@5fb759d6
2022-03-03 13:35:16.324 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5fb759d6
2022-03-03 13:35:16.325 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@33ecda92
2022-03-03 13:35:16.325 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@33ecda92
2022-03-03 13:35:16.326 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@33ecda92
2022-03-03 13:35:16.327 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3feb2dda
2022-03-03 13:35:16.329 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@dc7df28
2022-03-03 13:35:16.329 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@dc7df28
2022-03-03 13:35:16.329 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@dc7df28
2022-03-03 13:35:16.330 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4d14b6c2
2022-03-03 13:35:16.330 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@7b4c50bc
2022-03-03 13:35:16.331 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b4c50bc
2022-03-03 13:35:16.331 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@491b9b8
2022-03-03 13:35:16.331 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@491b9b8
2022-03-03 13:35:16.332 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5a5a729f
2022-03-03 13:35:16.332 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5a5a729f
2022-03-03 13:35:16.333 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@3932c79a
2022-03-03 13:35:16.333 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3932c79a
2022-03-03 13:35:16.334 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@20b2475a
2022-03-03 13:35:16.334 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@20b2475a
2022-03-03 13:35:16.335 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1be2019a
2022-03-03 13:35:16.335 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@2657d4dd
2022-03-03 13:35:16.335 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@2657d4dd
2022-03-03 13:35:16.335 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@2657d4dd
2022-03-03 13:35:16.336 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@387a8303
2022-03-03 13:35:16.336 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@387a8303
2022-03-03 13:35:16.336 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@387a8303
2022-03-03 13:35:16.337 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@57db2b13
2022-03-03 13:35:16.337 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@71687585
2022-03-03 13:35:16.338 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@71687585
2022-03-03 13:35:16.338 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@71687585
2022-03-03 13:35:16.339 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6a4f1a55
2022-03-03 13:35:16.339 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6a4f1a55
2022-03-03 13:35:16.340 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6a4f1a55
2022-03-03 13:35:16.340 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@7d3e8655
2022-03-03 13:35:16.341 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@3aa078fd
2022-03-03 13:35:16.345 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@1df8da7a
2022-03-03 13:35:16.345 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1df8da7a
2022-03-03 13:35:16.346 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@660acfb
2022-03-03 13:35:16.349 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@5be1d0a4
2022-03-03 13:35:16.350 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5be1d0a4
2022-03-03 13:35:16.352 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@20bd8be5
2022-03-03 13:35:16.352 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@20bd8be5
2022-03-03 13:35:16.353 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@10289886
2022-03-03 13:35:16.353 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4ee203eb
2022-03-03 13:35:16.355 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@769a1df5
2022-03-03 13:35:16.357 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@1a5b6f42
2022-03-03 13:35:16.358 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1a5b6f42
2022-03-03 13:35:16.358 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2ad48653
2022-03-03 13:35:16.358 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6bb4dd34
2022-03-03 13:35:16.358 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7d9f158f
2022-03-03 13:35:16.358 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@45efd90f
2022-03-03 13:35:16.359 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4b8729ff
2022-03-03 13:35:16.359 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@61710c6
2022-03-03 13:35:16.359 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-03-03 13:35:16.359 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-03-03 13:35:16.366 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-03 13:35:16.373 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-03 13:35:16.373 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-03-03 13:35:16.373 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-03 13:35:16.376 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-03 13:35:16.376 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-03 13:35:16.507 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.ClientDaoImpl.<init>(ClientDaoImpl.java:11) ~[classes/:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_202]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_202]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_202]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_202]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:11) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:115) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:101) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Client does not support authentication protocol requested by server; consider upgrading MySQL client
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_202]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_202]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_202]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_202]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.Util.getInstance(Util.java:381) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:984) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:956) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3491) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3423) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:910) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:3923) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1273) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2031) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46) ~[mysql-connector-java-5.1.6.jar:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_202]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_202]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_202]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_202]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282) ~[mysql-connector-java-5.1.6.jar:?]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-03-03 13:35:16.518 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'ServiceID' while setting bean property 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ServiceID' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'DaoID' while setting bean property 'dao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'DaoID' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.ClientDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-03-03 13:35:16.551 INFO [Finalizer][org.hibernate.orm.connections] [stop] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.stop(DriverManagerConnectionProviderImpl.java:235)] - HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-03 13:36:34.425 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@545997b1
2022-03-03 13:36:34.494 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-03 13:36:34.521 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-03 13:36:34.531 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'ServiceID'
2022-03-03 13:36:34.532 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'DaoID'
2022-03-03 13:36:34.549 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-03 13:36:34.592 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-03 13:36:34.646 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-03 13:36:34.648 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unitClients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unitClients]
2022-03-03 13:36:34.649 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unitClients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-03 13:36:34.652 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unitClients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP7/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-03-03 13:36:34.656 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-03 13:36:34.657 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-03 13:36:34.659 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-03 13:36:34.659 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-03 13:36:34.721 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-03 13:36:34.722 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-03 13:36:34.723 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-03 13:36:34.731 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-03 13:36:34.759 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-03 13:36:34.766 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-03 13:36:34.819 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@8462f31
2022-03-03 13:36:34.819 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@8462f31
2022-03-03 13:36:34.820 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@8462f31
2022-03-03 13:36:34.821 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@59402b8f
2022-03-03 13:36:34.822 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@76494737
2022-03-03 13:36:34.822 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@17fc391b
2022-03-03 13:36:34.823 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@23e84203
2022-03-03 13:36:34.824 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@23e84203
2022-03-03 13:36:34.824 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@23e84203
2022-03-03 13:36:34.824 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@302c971f
2022-03-03 13:36:34.825 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@302c971f
2022-03-03 13:36:34.825 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@302c971f
2022-03-03 13:36:34.826 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@548a24a
2022-03-03 13:36:34.827 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@548a24a
2022-03-03 13:36:34.827 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@548a24a
2022-03-03 13:36:34.828 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@533bda92
2022-03-03 13:36:34.828 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@533bda92
2022-03-03 13:36:34.828 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@533bda92
2022-03-03 13:36:34.829 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4c163e3
2022-03-03 13:36:34.830 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4c163e3
2022-03-03 13:36:34.830 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4c163e3
2022-03-03 13:36:34.833 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@5a59ca5e
2022-03-03 13:36:34.834 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@5a59ca5e
2022-03-03 13:36:34.834 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5a59ca5e
2022-03-03 13:36:34.836 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@4d1bf319
2022-03-03 13:36:34.836 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@4d1bf319
2022-03-03 13:36:34.837 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4d1bf319
2022-03-03 13:36:34.838 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7a5ceedd
2022-03-03 13:36:34.838 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7a5ceedd
2022-03-03 13:36:34.840 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3de8f619
2022-03-03 13:36:34.840 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3de8f619
2022-03-03 13:36:34.841 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@7bd7d6d6
2022-03-03 13:36:34.841 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@7bd7d6d6
2022-03-03 13:36:34.841 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2de56eb2
2022-03-03 13:36:34.842 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@17bffc17
2022-03-03 13:36:34.843 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@4722ef0c
2022-03-03 13:36:34.843 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4722ef0c
2022-03-03 13:36:34.845 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@65f8f5ae
2022-03-03 13:36:34.845 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@65f8f5ae
2022-03-03 13:36:34.846 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@5fb759d6
2022-03-03 13:36:34.846 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5fb759d6
2022-03-03 13:36:34.848 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@33ecda92
2022-03-03 13:36:34.849 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@33ecda92
2022-03-03 13:36:34.850 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@33ecda92
2022-03-03 13:36:34.852 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3feb2dda
2022-03-03 13:36:34.853 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@dc7df28
2022-03-03 13:36:34.853 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@dc7df28
2022-03-03 13:36:34.854 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@dc7df28
2022-03-03 13:36:34.855 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4d14b6c2
2022-03-03 13:36:34.856 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@7b4c50bc
2022-03-03 13:36:34.856 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b4c50bc
2022-03-03 13:36:34.857 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@491b9b8
2022-03-03 13:36:34.857 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@491b9b8
2022-03-03 13:36:34.858 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5a5a729f
2022-03-03 13:36:34.858 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5a5a729f
2022-03-03 13:36:34.858 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@3932c79a
2022-03-03 13:36:34.858 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3932c79a
2022-03-03 13:36:34.859 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@20b2475a
2022-03-03 13:36:34.860 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@20b2475a
2022-03-03 13:36:34.860 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1be2019a
2022-03-03 13:36:34.861 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@2657d4dd
2022-03-03 13:36:34.861 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@2657d4dd
2022-03-03 13:36:34.861 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@2657d4dd
2022-03-03 13:36:34.862 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@387a8303
2022-03-03 13:36:34.862 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@387a8303
2022-03-03 13:36:34.862 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@387a8303
2022-03-03 13:36:34.863 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@57db2b13
2022-03-03 13:36:34.863 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@71687585
2022-03-03 13:36:34.863 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@71687585
2022-03-03 13:36:34.863 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@71687585
2022-03-03 13:36:34.865 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6a4f1a55
2022-03-03 13:36:34.865 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6a4f1a55
2022-03-03 13:36:34.866 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6a4f1a55
2022-03-03 13:36:34.868 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@7d3e8655
2022-03-03 13:36:34.869 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@3aa078fd
2022-03-03 13:36:34.872 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@1df8da7a
2022-03-03 13:36:34.873 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1df8da7a
2022-03-03 13:36:34.874 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@660acfb
2022-03-03 13:36:34.876 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@5be1d0a4
2022-03-03 13:36:34.876 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5be1d0a4
2022-03-03 13:36:34.879 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@20bd8be5
2022-03-03 13:36:34.879 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@20bd8be5
2022-03-03 13:36:34.880 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@10289886
2022-03-03 13:36:34.880 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4ee203eb
2022-03-03 13:36:34.881 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@769a1df5
2022-03-03 13:36:34.886 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@1a5b6f42
2022-03-03 13:36:34.887 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1a5b6f42
2022-03-03 13:36:34.887 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2ad48653
2022-03-03 13:36:34.888 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6bb4dd34
2022-03-03 13:36:34.888 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7d9f158f
2022-03-03 13:36:34.888 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@45efd90f
2022-03-03 13:36:34.888 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4b8729ff
2022-03-03 13:36:34.888 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@61710c6
2022-03-03 13:36:34.888 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-03-03 13:36:34.888 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-03-03 13:36:34.905 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-03 13:36:34.908 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-03 13:36:34.909 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-03-03 13:36:34.909 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-03 13:36:34.912 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-03 13:36:34.913 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-03 13:36:35.078 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.ClientDaoImpl.<init>(ClientDaoImpl.java:11) ~[classes/:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_202]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_202]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_202]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_202]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:11) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:115) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:101) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Client does not support authentication protocol requested by server; consider upgrading MySQL client
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_202]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_202]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_202]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_202]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.Util.getInstance(Util.java:381) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:984) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:956) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3491) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3423) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:910) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:3923) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1273) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2031) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46) ~[mysql-connector-java-5.1.6.jar:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_202]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_202]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_202]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_202]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282) ~[mysql-connector-java-5.1.6.jar:?]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-03-03 13:36:35.091 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'ServiceID' while setting bean property 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ServiceID' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'DaoID' while setting bean property 'dao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'DaoID' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.ClientDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-03-03 13:36:35.141 INFO [Finalizer][org.hibernate.orm.connections] [stop] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.stop(DriverManagerConnectionProviderImpl.java:235)] - HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-03 13:36:56.295 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@545997b1
2022-03-03 13:36:56.374 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-03 13:36:56.408 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-03 13:36:56.422 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'ServiceID'
2022-03-03 13:36:56.423 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'DaoID'
2022-03-03 13:36:56.437 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-03 13:36:56.472 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-03 13:36:56.528 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-03 13:36:56.528 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unitClients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unitClients]
2022-03-03 13:36:56.529 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unitClients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-03 13:36:56.532 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unitClients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP7/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-03-03 13:36:56.535 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-03 13:36:56.536 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-03 13:36:56.538 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-03 13:36:56.538 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-03 13:36:56.591 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-03 13:36:56.592 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-03 13:36:56.595 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-03 13:36:56.602 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-03 13:36:56.621 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-03 13:36:56.628 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-03 13:36:56.674 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@8462f31
2022-03-03 13:36:56.675 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@8462f31
2022-03-03 13:36:56.675 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@8462f31
2022-03-03 13:36:56.676 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@59402b8f
2022-03-03 13:36:56.676 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@76494737
2022-03-03 13:36:56.677 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@17fc391b
2022-03-03 13:36:56.678 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@23e84203
2022-03-03 13:36:56.678 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@23e84203
2022-03-03 13:36:56.678 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@23e84203
2022-03-03 13:36:56.679 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@302c971f
2022-03-03 13:36:56.680 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@302c971f
2022-03-03 13:36:56.680 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@302c971f
2022-03-03 13:36:56.681 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@548a24a
2022-03-03 13:36:56.681 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@548a24a
2022-03-03 13:36:56.681 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@548a24a
2022-03-03 13:36:56.682 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@533bda92
2022-03-03 13:36:56.682 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@533bda92
2022-03-03 13:36:56.682 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@533bda92
2022-03-03 13:36:56.683 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4c163e3
2022-03-03 13:36:56.684 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4c163e3
2022-03-03 13:36:56.684 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4c163e3
2022-03-03 13:36:56.685 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@5a59ca5e
2022-03-03 13:36:56.685 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@5a59ca5e
2022-03-03 13:36:56.686 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5a59ca5e
2022-03-03 13:36:56.687 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@4d1bf319
2022-03-03 13:36:56.687 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@4d1bf319
2022-03-03 13:36:56.687 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4d1bf319
2022-03-03 13:36:56.688 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7a5ceedd
2022-03-03 13:36:56.688 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7a5ceedd
2022-03-03 13:36:56.689 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3de8f619
2022-03-03 13:36:56.690 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3de8f619
2022-03-03 13:36:56.690 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@7bd7d6d6
2022-03-03 13:36:56.691 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@7bd7d6d6
2022-03-03 13:36:56.691 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2de56eb2
2022-03-03 13:36:56.692 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@17bffc17
2022-03-03 13:36:56.692 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@4722ef0c
2022-03-03 13:36:56.693 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4722ef0c
2022-03-03 13:36:56.694 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@65f8f5ae
2022-03-03 13:36:56.695 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@65f8f5ae
2022-03-03 13:36:56.696 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@5fb759d6
2022-03-03 13:36:56.696 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5fb759d6
2022-03-03 13:36:56.697 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@33ecda92
2022-03-03 13:36:56.698 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@33ecda92
2022-03-03 13:36:56.698 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@33ecda92
2022-03-03 13:36:56.700 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3feb2dda
2022-03-03 13:36:56.701 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@dc7df28
2022-03-03 13:36:56.701 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@dc7df28
2022-03-03 13:36:56.701 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@dc7df28
2022-03-03 13:36:56.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4d14b6c2
2022-03-03 13:36:56.704 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@7b4c50bc
2022-03-03 13:36:56.705 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b4c50bc
2022-03-03 13:36:56.705 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@491b9b8
2022-03-03 13:36:56.705 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@491b9b8
2022-03-03 13:36:56.706 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5a5a729f
2022-03-03 13:36:56.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5a5a729f
2022-03-03 13:36:56.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@3932c79a
2022-03-03 13:36:56.708 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3932c79a
2022-03-03 13:36:56.709 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@20b2475a
2022-03-03 13:36:56.709 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@20b2475a
2022-03-03 13:36:56.710 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1be2019a
2022-03-03 13:36:56.711 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@2657d4dd
2022-03-03 13:36:56.711 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@2657d4dd
2022-03-03 13:36:56.712 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@2657d4dd
2022-03-03 13:36:56.712 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@387a8303
2022-03-03 13:36:56.713 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@387a8303
2022-03-03 13:36:56.713 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@387a8303
2022-03-03 13:36:56.714 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@57db2b13
2022-03-03 13:36:56.715 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@71687585
2022-03-03 13:36:56.715 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@71687585
2022-03-03 13:36:56.715 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@71687585
2022-03-03 13:36:56.716 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6a4f1a55
2022-03-03 13:36:56.716 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6a4f1a55
2022-03-03 13:36:56.717 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6a4f1a55
2022-03-03 13:36:56.717 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@7d3e8655
2022-03-03 13:36:56.718 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@3aa078fd
2022-03-03 13:36:56.720 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@1df8da7a
2022-03-03 13:36:56.721 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1df8da7a
2022-03-03 13:36:56.721 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@660acfb
2022-03-03 13:36:56.723 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@5be1d0a4
2022-03-03 13:36:56.723 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5be1d0a4
2022-03-03 13:36:56.725 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@20bd8be5
2022-03-03 13:36:56.725 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@20bd8be5
2022-03-03 13:36:56.725 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@10289886
2022-03-03 13:36:56.725 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4ee203eb
2022-03-03 13:36:56.726 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@769a1df5
2022-03-03 13:36:56.727 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@1a5b6f42
2022-03-03 13:36:56.727 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1a5b6f42
2022-03-03 13:36:56.728 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2ad48653
2022-03-03 13:36:56.728 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6bb4dd34
2022-03-03 13:36:56.729 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7d9f158f
2022-03-03 13:36:56.729 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@45efd90f
2022-03-03 13:36:56.729 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4b8729ff
2022-03-03 13:36:56.729 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@61710c6
2022-03-03 13:36:56.729 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-03-03 13:36:56.729 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-03-03 13:36:56.735 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-03 13:36:56.739 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-03 13:36:56.739 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-03-03 13:36:56.740 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-03 13:36:56.742 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-03 13:36:56.742 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-03 13:36:56.883 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.ClientDaoImpl.<init>(ClientDaoImpl.java:11) ~[classes/:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_202]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_202]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_202]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_202]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:11) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:115) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:101) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Client does not support authentication protocol requested by server; consider upgrading MySQL client
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_202]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_202]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_202]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_202]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.Util.getInstance(Util.java:381) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:984) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:956) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3491) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3423) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:910) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:3923) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1273) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2031) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46) ~[mysql-connector-java-5.1.6.jar:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_202]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_202]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_202]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_202]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282) ~[mysql-connector-java-5.1.6.jar:?]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-03-03 13:36:56.891 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'ServiceID' while setting bean property 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ServiceID' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'DaoID' while setting bean property 'dao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'DaoID' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.ClientDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-03-03 13:36:56.930 INFO [Finalizer][org.hibernate.orm.connections] [stop] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.stop(DriverManagerConnectionProviderImpl.java:235)] - HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-03 14:06:56.820 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@545997b1
2022-03-03 14:06:56.891 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-03 14:06:56.907 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-03 14:06:56.923 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'ServiceID'
2022-03-03 14:06:56.923 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'DaoID'
2022-03-03 14:06:56.923 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-03 14:06:56.955 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-03 14:06:56.986 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-03 14:06:56.986 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unitClients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unitClients]
2022-03-03 14:06:56.986 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unitClients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-03 14:06:56.986 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unitClients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP7/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-03-03 14:06:57.002 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-03 14:06:57.002 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-03 14:06:57.002 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-03 14:06:57.002 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-03 14:06:57.043 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-03 14:06:57.044 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-03 14:06:57.045 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-03 14:06:57.051 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-03 14:06:57.059 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-03 14:06:57.075 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-03 14:06:57.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@8462f31
2022-03-03 14:06:57.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@8462f31
2022-03-03 14:06:57.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@8462f31
2022-03-03 14:06:57.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@59402b8f
2022-03-03 14:06:57.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@76494737
2022-03-03 14:06:57.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@17fc391b
2022-03-03 14:06:57.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@23e84203
2022-03-03 14:06:57.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@23e84203
2022-03-03 14:06:57.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@23e84203
2022-03-03 14:06:57.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@302c971f
2022-03-03 14:06:57.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@302c971f
2022-03-03 14:06:57.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@302c971f
2022-03-03 14:06:57.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@548a24a
2022-03-03 14:06:57.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@548a24a
2022-03-03 14:06:57.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@548a24a
2022-03-03 14:06:57.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@533bda92
2022-03-03 14:06:57.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@533bda92
2022-03-03 14:06:57.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@533bda92
2022-03-03 14:06:57.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4c163e3
2022-03-03 14:06:57.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4c163e3
2022-03-03 14:06:57.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4c163e3
2022-03-03 14:06:57.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@5a59ca5e
2022-03-03 14:06:57.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@5a59ca5e
2022-03-03 14:06:57.138 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5a59ca5e
2022-03-03 14:06:57.138 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@4d1bf319
2022-03-03 14:06:57.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@4d1bf319
2022-03-03 14:06:57.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4d1bf319
2022-03-03 14:06:57.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7a5ceedd
2022-03-03 14:06:57.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7a5ceedd
2022-03-03 14:06:57.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3de8f619
2022-03-03 14:06:57.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3de8f619
2022-03-03 14:06:57.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@7bd7d6d6
2022-03-03 14:06:57.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@7bd7d6d6
2022-03-03 14:06:57.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2de56eb2
2022-03-03 14:06:57.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@17bffc17
2022-03-03 14:06:57.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@4722ef0c
2022-03-03 14:06:57.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4722ef0c
2022-03-03 14:06:57.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@65f8f5ae
2022-03-03 14:06:57.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@65f8f5ae
2022-03-03 14:06:57.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@5fb759d6
2022-03-03 14:06:57.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5fb759d6
2022-03-03 14:06:57.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@33ecda92
2022-03-03 14:06:57.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@33ecda92
2022-03-03 14:06:57.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@33ecda92
2022-03-03 14:06:57.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3feb2dda
2022-03-03 14:06:57.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@dc7df28
2022-03-03 14:06:57.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@dc7df28
2022-03-03 14:06:57.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@dc7df28
2022-03-03 14:06:57.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4d14b6c2
2022-03-03 14:06:57.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@7b4c50bc
2022-03-03 14:06:57.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b4c50bc
2022-03-03 14:06:57.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@491b9b8
2022-03-03 14:06:57.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@491b9b8
2022-03-03 14:06:57.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5a5a729f
2022-03-03 14:06:57.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5a5a729f
2022-03-03 14:06:57.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@3932c79a
2022-03-03 14:06:57.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3932c79a
2022-03-03 14:06:57.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@20b2475a
2022-03-03 14:06:57.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@20b2475a
2022-03-03 14:06:57.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1be2019a
2022-03-03 14:06:57.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@2657d4dd
2022-03-03 14:06:57.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@2657d4dd
2022-03-03 14:06:57.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@2657d4dd
2022-03-03 14:06:57.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@387a8303
2022-03-03 14:06:57.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@387a8303
2022-03-03 14:06:57.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@387a8303
2022-03-03 14:06:57.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@57db2b13
2022-03-03 14:06:57.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@71687585
2022-03-03 14:06:57.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@71687585
2022-03-03 14:06:57.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@71687585
2022-03-03 14:06:57.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6a4f1a55
2022-03-03 14:06:57.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6a4f1a55
2022-03-03 14:06:57.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6a4f1a55
2022-03-03 14:06:57.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@7d3e8655
2022-03-03 14:06:57.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@3aa078fd
2022-03-03 14:06:57.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@1df8da7a
2022-03-03 14:06:57.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1df8da7a
2022-03-03 14:06:57.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@660acfb
2022-03-03 14:06:57.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@5be1d0a4
2022-03-03 14:06:57.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5be1d0a4
2022-03-03 14:06:57.171 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@20bd8be5
2022-03-03 14:06:57.171 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@20bd8be5
2022-03-03 14:06:57.171 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@10289886
2022-03-03 14:06:57.171 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4ee203eb
2022-03-03 14:06:57.171 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@769a1df5
2022-03-03 14:06:57.171 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@1a5b6f42
2022-03-03 14:06:57.171 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1a5b6f42
2022-03-03 14:06:57.171 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2ad48653
2022-03-03 14:06:57.171 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6bb4dd34
2022-03-03 14:06:57.171 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7d9f158f
2022-03-03 14:06:57.171 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@45efd90f
2022-03-03 14:06:57.171 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4b8729ff
2022-03-03 14:06:57.171 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@61710c6
2022-03-03 14:06:57.171 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-03-03 14:06:57.171 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-03-03 14:06:57.171 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-03 14:06:57.186 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-03 14:06:57.186 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-03-03 14:06:57.186 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-03 14:06:57.186 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-03 14:06:57.186 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-03 14:06:57.299 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.ClientDaoImpl.<init>(ClientDaoImpl.java:11) ~[classes/:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_202]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_202]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_202]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_202]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:11) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:115) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:101) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Client does not support authentication protocol requested by server; consider upgrading MySQL client
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_202]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_202]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_202]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_202]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.Util.getInstance(Util.java:381) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:984) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:956) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3491) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3423) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:910) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:3923) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1273) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2031) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46) ~[mysql-connector-java-5.1.6.jar:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_202]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_202]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_202]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_202]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282) ~[mysql-connector-java-5.1.6.jar:?]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-03-03 14:06:57.304 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'ServiceID' while setting bean property 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ServiceID' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'DaoID' while setting bean property 'dao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'DaoID' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.ClientDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-03-03 14:06:57.336 INFO [Finalizer][org.hibernate.orm.connections] [stop] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.stop(DriverManagerConnectionProviderImpl.java:235)] - HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-03 14:08:04.665 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@545997b1
2022-03-03 14:08:04.739 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-03 14:08:04.758 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-03 14:08:04.766 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'ServiceID'
2022-03-03 14:08:04.767 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'DaoID'
2022-03-03 14:08:04.770 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-03 14:08:04.803 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-03 14:08:04.831 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-03 14:08:04.831 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unitClients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unitClients]
2022-03-03 14:08:04.847 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unitClients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-03 14:08:04.847 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unitClients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP7/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-03-03 14:08:04.847 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-03 14:08:04.847 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-03 14:08:04.847 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-03 14:08:04.847 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-03 14:08:04.887 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-03 14:08:04.903 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-03 14:08:04.903 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-03 14:08:04.903 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-03 14:08:04.930 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-03 14:08:04.940 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-03 14:08:04.969 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@8462f31
2022-03-03 14:08:04.969 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@8462f31
2022-03-03 14:08:04.969 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@8462f31
2022-03-03 14:08:04.969 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@59402b8f
2022-03-03 14:08:04.969 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@76494737
2022-03-03 14:08:04.969 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@17fc391b
2022-03-03 14:08:04.969 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@23e84203
2022-03-03 14:08:04.969 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@23e84203
2022-03-03 14:08:04.969 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@23e84203
2022-03-03 14:08:04.969 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@302c971f
2022-03-03 14:08:04.969 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@302c971f
2022-03-03 14:08:04.969 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@302c971f
2022-03-03 14:08:04.985 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@548a24a
2022-03-03 14:08:04.985 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@548a24a
2022-03-03 14:08:04.985 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@548a24a
2022-03-03 14:08:04.985 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@533bda92
2022-03-03 14:08:04.985 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@533bda92
2022-03-03 14:08:04.985 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@533bda92
2022-03-03 14:08:04.985 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4c163e3
2022-03-03 14:08:04.985 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4c163e3
2022-03-03 14:08:04.985 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4c163e3
2022-03-03 14:08:04.985 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@5a59ca5e
2022-03-03 14:08:04.985 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@5a59ca5e
2022-03-03 14:08:04.985 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5a59ca5e
2022-03-03 14:08:04.985 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@4d1bf319
2022-03-03 14:08:04.985 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@4d1bf319
2022-03-03 14:08:04.985 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4d1bf319
2022-03-03 14:08:04.985 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7a5ceedd
2022-03-03 14:08:04.985 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7a5ceedd
2022-03-03 14:08:04.985 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3de8f619
2022-03-03 14:08:04.985 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3de8f619
2022-03-03 14:08:04.985 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@7bd7d6d6
2022-03-03 14:08:04.985 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@7bd7d6d6
2022-03-03 14:08:04.985 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2de56eb2
2022-03-03 14:08:04.985 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@17bffc17
2022-03-03 14:08:04.985 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@4722ef0c
2022-03-03 14:08:04.985 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4722ef0c
2022-03-03 14:08:04.985 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@65f8f5ae
2022-03-03 14:08:04.985 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@65f8f5ae
2022-03-03 14:08:04.985 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@5fb759d6
2022-03-03 14:08:04.985 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5fb759d6
2022-03-03 14:08:04.985 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@33ecda92
2022-03-03 14:08:04.985 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@33ecda92
2022-03-03 14:08:04.985 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@33ecda92
2022-03-03 14:08:05.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3feb2dda
2022-03-03 14:08:05.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@dc7df28
2022-03-03 14:08:05.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@dc7df28
2022-03-03 14:08:05.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@dc7df28
2022-03-03 14:08:05.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4d14b6c2
2022-03-03 14:08:05.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@7b4c50bc
2022-03-03 14:08:05.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b4c50bc
2022-03-03 14:08:05.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@491b9b8
2022-03-03 14:08:05.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@491b9b8
2022-03-03 14:08:05.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5a5a729f
2022-03-03 14:08:05.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5a5a729f
2022-03-03 14:08:05.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@3932c79a
2022-03-03 14:08:05.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3932c79a
2022-03-03 14:08:05.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@20b2475a
2022-03-03 14:08:05.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@20b2475a
2022-03-03 14:08:05.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1be2019a
2022-03-03 14:08:05.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@2657d4dd
2022-03-03 14:08:05.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@2657d4dd
2022-03-03 14:08:05.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@2657d4dd
2022-03-03 14:08:05.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@387a8303
2022-03-03 14:08:05.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@387a8303
2022-03-03 14:08:05.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@387a8303
2022-03-03 14:08:05.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@57db2b13
2022-03-03 14:08:05.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@71687585
2022-03-03 14:08:05.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@71687585
2022-03-03 14:08:05.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@71687585
2022-03-03 14:08:05.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6a4f1a55
2022-03-03 14:08:05.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6a4f1a55
2022-03-03 14:08:05.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6a4f1a55
2022-03-03 14:08:05.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@7d3e8655
2022-03-03 14:08:05.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@3aa078fd
2022-03-03 14:08:05.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@1df8da7a
2022-03-03 14:08:05.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1df8da7a
2022-03-03 14:08:05.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@660acfb
2022-03-03 14:08:05.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@5be1d0a4
2022-03-03 14:08:05.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5be1d0a4
2022-03-03 14:08:05.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@20bd8be5
2022-03-03 14:08:05.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@20bd8be5
2022-03-03 14:08:05.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@10289886
2022-03-03 14:08:05.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4ee203eb
2022-03-03 14:08:05.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@769a1df5
2022-03-03 14:08:05.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@1a5b6f42
2022-03-03 14:08:05.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1a5b6f42
2022-03-03 14:08:05.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2ad48653
2022-03-03 14:08:05.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6bb4dd34
2022-03-03 14:08:05.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7d9f158f
2022-03-03 14:08:05.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@45efd90f
2022-03-03 14:08:05.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4b8729ff
2022-03-03 14:08:05.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@61710c6
2022-03-03 14:08:05.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-03-03 14:08:05.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-03-03 14:08:05.030 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-03 14:08:05.030 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-03 14:08:05.030 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-03-03 14:08:05.030 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-03 14:08:05.030 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-03 14:08:05.030 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-03 14:08:05.142 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.ClientDaoImpl.<init>(ClientDaoImpl.java:11) ~[classes/:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_202]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_202]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_202]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_202]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:11) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:115) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:101) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Client does not support authentication protocol requested by server; consider upgrading MySQL client
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_202]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_202]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_202]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_202]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.Util.getInstance(Util.java:381) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:984) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:956) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3491) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3423) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:910) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:3923) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1273) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2031) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46) ~[mysql-connector-java-5.1.6.jar:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_202]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_202]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_202]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_202]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282) ~[mysql-connector-java-5.1.6.jar:?]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-03-03 14:08:05.144 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'ServiceID' while setting bean property 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ServiceID' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'DaoID' while setting bean property 'dao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'DaoID' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.ClientDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-03-03 14:08:05.168 INFO [Finalizer][org.hibernate.orm.connections] [stop] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.stop(DriverManagerConnectionProviderImpl.java:235)] - HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-03 14:08:32.246 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@77846d2c
2022-03-03 14:08:32.318 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-03 14:08:32.325 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-03 14:08:32.342 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'ServiceID'
2022-03-03 14:08:32.342 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'DaoID'
2022-03-03 14:08:32.357 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-03 14:08:32.373 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-03 14:08:32.423 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-03 14:08:32.424 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unitClients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unitClients]
2022-03-03 14:08:32.424 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unitClients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-03 14:08:32.427 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unitClients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP7/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-03-03 14:08:32.430 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-03 14:08:32.430 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-03 14:08:32.430 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-03 14:08:32.430 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-03 14:08:32.462 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-03 14:08:32.462 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-03 14:08:32.462 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-03 14:08:32.462 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-03 14:08:32.493 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-03 14:08:32.493 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-03 14:08:32.542 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@5ddeb7cb
2022-03-03 14:08:32.546 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@5ddeb7cb
2022-03-03 14:08:32.546 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5ddeb7cb
2022-03-03 14:08:32.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6be968ce
2022-03-03 14:08:32.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4082ba93
2022-03-03 14:08:32.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@609e8838
2022-03-03 14:08:32.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@73eb439a
2022-03-03 14:08:32.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@73eb439a
2022-03-03 14:08:32.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@73eb439a
2022-03-03 14:08:32.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@7ae0a9ec
2022-03-03 14:08:32.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@7ae0a9ec
2022-03-03 14:08:32.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7ae0a9ec
2022-03-03 14:08:32.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@2a693f59
2022-03-03 14:08:32.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@2a693f59
2022-03-03 14:08:32.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2a693f59
2022-03-03 14:08:32.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@723ca036
2022-03-03 14:08:32.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@723ca036
2022-03-03 14:08:32.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@723ca036
2022-03-03 14:08:32.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4d0d9fe7
2022-03-03 14:08:32.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4d0d9fe7
2022-03-03 14:08:32.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4d0d9fe7
2022-03-03 14:08:32.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6c4906d3
2022-03-03 14:08:32.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6c4906d3
2022-03-03 14:08:32.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6c4906d3
2022-03-03 14:08:32.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@5c80cf32
2022-03-03 14:08:32.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@5c80cf32
2022-03-03 14:08:32.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5c80cf32
2022-03-03 14:08:32.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5b799640
2022-03-03 14:08:32.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5b799640
2022-03-03 14:08:32.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4e5ed836
2022-03-03 14:08:32.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4e5ed836
2022-03-03 14:08:32.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@239a307b
2022-03-03 14:08:32.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@239a307b
2022-03-03 14:08:32.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5745ca0e
2022-03-03 14:08:32.564 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@15a34df2
2022-03-03 14:08:32.565 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@55cb6996
2022-03-03 14:08:32.566 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@55cb6996
2022-03-03 14:08:32.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@38467116
2022-03-03 14:08:32.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@38467116
2022-03-03 14:08:32.569 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@5e7cd6cc
2022-03-03 14:08:32.569 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5e7cd6cc
2022-03-03 14:08:32.570 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@6e2829c7
2022-03-03 14:08:32.570 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6e2829c7
2022-03-03 14:08:32.571 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6e2829c7
2022-03-03 14:08:32.572 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1c742ed4
2022-03-03 14:08:32.573 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@69c81773
2022-03-03 14:08:32.573 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@69c81773
2022-03-03 14:08:32.573 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@69c81773
2022-03-03 14:08:32.574 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@c05fddc
2022-03-03 14:08:32.574 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@50378a4
2022-03-03 14:08:32.575 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@50378a4
2022-03-03 14:08:32.576 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@7a6d7e92
2022-03-03 14:08:32.576 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7a6d7e92
2022-03-03 14:08:32.576 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@16150369
2022-03-03 14:08:32.576 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@16150369
2022-03-03 14:08:32.577 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@23f5b5dc
2022-03-03 14:08:32.577 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@23f5b5dc
2022-03-03 14:08:32.578 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6f15d60e
2022-03-03 14:08:32.579 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6f15d60e
2022-03-03 14:08:32.579 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@58e1d9d
2022-03-03 14:08:32.580 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@47caedad
2022-03-03 14:08:32.580 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@47caedad
2022-03-03 14:08:32.580 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@47caedad
2022-03-03 14:08:32.581 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1500b2f3
2022-03-03 14:08:32.581 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1500b2f3
2022-03-03 14:08:32.581 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1500b2f3
2022-03-03 14:08:32.581 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5c86a017
2022-03-03 14:08:32.582 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@1b919693
2022-03-03 14:08:32.582 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@1b919693
2022-03-03 14:08:32.582 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@1b919693
2022-03-03 14:08:32.583 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2584b82d
2022-03-03 14:08:32.583 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2584b82d
2022-03-03 14:08:32.583 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2584b82d
2022-03-03 14:08:32.584 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@626abbd0
2022-03-03 14:08:32.584 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@46d59067
2022-03-03 14:08:32.586 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@7486b455
2022-03-03 14:08:32.586 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7486b455
2022-03-03 14:08:32.587 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5efa40fe
2022-03-03 14:08:32.589 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@6d5620ce
2022-03-03 14:08:32.589 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d5620ce
2022-03-03 14:08:32.590 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@24959ca4
2022-03-03 14:08:32.591 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@24959ca4
2022-03-03 14:08:32.591 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@461ad730
2022-03-03 14:08:32.591 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7068e664
2022-03-03 14:08:32.592 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@7975d1d8
2022-03-03 14:08:32.593 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@32115b28
2022-03-03 14:08:32.594 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@32115b28
2022-03-03 14:08:32.594 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7d9f158f
2022-03-03 14:08:32.595 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@45efd90f
2022-03-03 14:08:32.595 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4b8729ff
2022-03-03 14:08:32.595 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@61710c6
2022-03-03 14:08:32.595 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-03-03 14:08:32.595 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-03-03 14:08:32.595 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-03-03 14:08:32.595 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-03-03 14:08:32.597 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-03 14:08:32.597 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-03 14:08:32.597 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-03-03 14:08:32.597 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-03 14:08:32.597 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-03 14:08:32.597 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-03 14:08:33.117 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.28
      major : 8
      minor : 0
2022-03-03 14:08:33.117 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.18 (Revision: fef2894d751d47223192b706977b4a5bc41e6be4)
      major : 8
      minor : 0
2022-03-03 14:08:33.117 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-03-03 14:08:33.122 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-03-03 14:08:33.129 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-03-03 14:08:33.146 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-03-03 14:08:33.146 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-03-03 14:08:33.161 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-03-03 14:08:33.161 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-03-03 14:08:33.161 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-03 14:08:33.161 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-03 14:08:33.161 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-03-03 14:08:33.161 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-03-03 14:08:33.161 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-03-03 14:08:33.161 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-03 14:08:33.161 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-03-03 14:08:33.161 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-03-03 14:08:33.161 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-03-03 14:08:33.161 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-03-03 14:08:33.161 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-03 14:08:33.161 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-03-03 14:08:33.177 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-03-03 14:08:33.177 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-03-03 14:08:33.193 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-03-03 14:08:33.193 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name TClients
2022-03-03 14:08:33.193 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-03-03 14:08:33.209 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-03-03 14:08:33.209 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-03-03 14:08:33.209 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-03-03 14:08:33.220 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-03-03 14:08:33.220 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-03-03 14:08:33.220 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-03-03 14:08:33.220 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property name with lazy=false
2022-03-03 14:08:33.220 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-03-03 14:08:33.220 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for name
2022-03-03 14:08:33.220 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property name
2022-03-03 14:08:33.224 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-03-03 14:08:33.224 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for name
2022-03-03 14:08:33.225 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-03-03 14:08:33.225 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-03-03 14:08:33.241 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-03-03 14:08:33.241 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-03-03 14:08:33.241 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-03-03 14:08:33.241 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-03-03 14:08:33.241 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-03-03 14:08:33.241 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-03-03 14:08:33.241 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-03-03 14:08:33.241 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-03-03 14:08:33.241 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-03-03 14:08:33.241 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-03-03 14:08:33.241 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-03-03 14:08:33.241 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-03-03 14:08:33.241 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-03-03 14:08:33.241 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-03-03 14:08:33.241 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-03-03 14:08:33.241 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-03-03 14:08:33.241 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-03-03 14:08:33.241 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-03-03 14:08:33.241 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-03-03 14:08:33.241 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-03-03 14:08:33.241 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-03-03 14:08:33.241 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7889a1ac
2022-03-03 14:08:33.241 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-03-03 14:08:33.241 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-03-03 14:08:33.241 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-03-03 14:08:33.241 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-03-03 14:08:33.241 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-03-03 14:08:33.241 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-03-03 14:08:33.241 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-03-03 14:08:33.241 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-03-03 14:08:33.241 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-03-03 14:08:33.241 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-03-03 14:08:33.241 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-03-03 14:08:33.241 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-03-03 14:08:33.241 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-03-03 14:08:33.264 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-03-03 14:08:33.266 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-03-03 14:08:33.266 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.202-b08, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_202\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1fe8d51b, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=AE, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Studies\JEEProjects\TP7, java.runtime.version=1.8.0_202-b08, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\endorsed, java.io.tmpdir=C:\Users\toubk\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_202\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\toubk\AppData\Local\Microsoft\WindowsApps;;., javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unitClients, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\toubk, user.timezone=America/Los_Angeles, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, user.name=toubk, java.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;D:\Studies\JEEProjects\TP7\target\classes;C:\Users\toubk\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\toubk\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\toubk\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\toubk\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\toubk\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\toubk\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\toubk\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\toubk\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\toubk\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\toubk\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.2\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ma.cigma.pfe.ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_202\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_202, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-03-03 14:08:33.271 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-03-03 14:08:33.272 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-03-03 14:08:33.293 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-03 14:08:33.294 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-03 14:08:33.296 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-03 14:08:33.296 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-03 14:08:33.320 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-03-03 14:08:33.320 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TClients where id =?
2022-03-03 14:08:33.320 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select client_.id, client_.name as name2_0_ from TClients client_ where client_.id=?
2022-03-03 14:08:33.320 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-03-03 14:08:33.320 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-03-03 14:08:33.320 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-03-03 14:08:33.320 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TClients (name) values (?)
2022-03-03 14:08:33.328 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c4bc9fc]
2022-03-03 14:08:33.328 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:08:33.328 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:08:33.328 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@81ff872]
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [READ]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e598df9]
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@99a65d3]
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_NOWAIT]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42cc13a0]
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_SKIPLOCKED]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6813a331]
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [FORCE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39ab59f8]
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_READ]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? lock in share mode
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@111610e6]
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_WRITE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29d37757]
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25cc7470]
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79b663b3]
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:08:33.344 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-03 14:08:33.360 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Client: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-03 14:08:33.360 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Client: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-03 14:08:33.360 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-03-03 14:08:33.376 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:400)] - HHH000227: Running hbm2ddl schema export
2022-03-03 14:08:33.376 DEBUG [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:408)] - Import file not found: /import.sql
2022-03-03 14:08:33.376 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    drop table if exists TClients
2022-03-03 14:08:33.376 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    create table TClients (
        id bigint not null auto_increment,
        name varchar(255),
        primary key (id)
    )
2022-03-03 14:08:33.408 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:463)] - HHH000230: Schema export complete
2022-03-03 14:08:33.408 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-03-03 14:08:33.408 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-03-03 14:08:33.408 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-03-03 14:08:33.408 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-03-03 14:08:33.408 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-03-03 14:08:33.408 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@62515a47
2022-03-03 14:08:33.408 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: bfb8041b-9b1b-4aca-876b-a73c80fdd674 (<unnamed>)
2022-03-03 14:08:33.408 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-03-03 14:08:33.408 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-03-03 14:08:33.424 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@7b60c3e
2022-03-03 14:08:33.424 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unitClients 
2022-03-03 14:08:33.469 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-03-03 14:09:33.225 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c762604
2022-03-03 14:09:33.296 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-03 14:09:33.324 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-03 14:09:33.330 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'ServiceID'
2022-03-03 14:09:33.330 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'DaoID'
2022-03-03 14:09:33.344 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-03 14:09:33.360 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-03 14:09:33.408 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-03 14:09:33.408 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unitClients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unitClients]
2022-03-03 14:09:33.419 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unitClients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-03 14:09:33.419 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unitClients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP7/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-03-03 14:09:33.424 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-03 14:09:33.424 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-03 14:09:33.424 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-03 14:09:33.424 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-03 14:09:33.475 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-03 14:09:33.476 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-03 14:09:33.477 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-03 14:09:33.485 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-03 14:09:33.497 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-03 14:09:33.497 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-03 14:09:33.545 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-03-03 14:09:33.547 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-03-03 14:09:33.547 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@496bc455
2022-03-03 14:09:33.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@247310d0
2022-03-03 14:09:33.549 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2b30a42c
2022-03-03 14:09:33.549 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@43df23d3
2022-03-03 14:09:33.549 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-03-03 14:09:33.549 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-03-03 14:09:33.549 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@305ffe9e
2022-03-03 14:09:33.549 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@61c4eee0
2022-03-03 14:09:33.549 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@61c4eee0
2022-03-03 14:09:33.549 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@61c4eee0
2022-03-03 14:09:33.549 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-03-03 14:09:33.549 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-03-03 14:09:33.549 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7fd50002
2022-03-03 14:09:33.549 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@28dcca0c
2022-03-03 14:09:33.549 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@28dcca0c
2022-03-03 14:09:33.549 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@28dcca0c
2022-03-03 14:09:33.549 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-03-03 14:09:33.549 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-03-03 14:09:33.549 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@312aa7c
2022-03-03 14:09:33.549 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-03-03 14:09:33.549 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-03-03 14:09:33.549 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@71075444
2022-03-03 14:09:33.549 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-03-03 14:09:33.558 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-03-03 14:09:33.559 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6f01b95f
2022-03-03 14:09:33.559 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@710636b0
2022-03-03 14:09:33.559 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@710636b0
2022-03-03 14:09:33.559 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@740fb309
2022-03-03 14:09:33.559 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@740fb309
2022-03-03 14:09:33.559 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@6f204a1a
2022-03-03 14:09:33.559 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@6f204a1a
2022-03-03 14:09:33.559 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3cce5371
2022-03-03 14:09:33.559 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@338fc1d8
2022-03-03 14:09:33.559 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@480d3575
2022-03-03 14:09:33.559 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@480d3575
2022-03-03 14:09:33.559 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@790da477
2022-03-03 14:09:33.559 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@790da477
2022-03-03 14:09:33.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@d554c5f
2022-03-03 14:09:33.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@d554c5f
2022-03-03 14:09:33.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-03-03 14:09:33.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-03-03 14:09:33.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6a8658ff
2022-03-03 14:09:33.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55de24cc
2022-03-03 14:09:33.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-03-03 14:09:33.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-03-03 14:09:33.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7e990ed7
2022-03-03 14:09:33.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4d15107f
2022-03-03 14:09:33.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@79207381
2022-03-03 14:09:33.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79207381
2022-03-03 14:09:33.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@97e93f1
2022-03-03 14:09:33.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@97e93f1
2022-03-03 14:09:33.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@624ea235
2022-03-03 14:09:33.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@624ea235
2022-03-03 14:09:33.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@1b1cfb87
2022-03-03 14:09:33.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1b1cfb87
2022-03-03 14:09:33.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-03-03 14:09:33.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-03-03 14:09:33.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f0f2942
2022-03-03 14:09:33.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@69504ae9
2022-03-03 14:09:33.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@69504ae9
2022-03-03 14:09:33.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@69504ae9
2022-03-03 14:09:33.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@126253fd
2022-03-03 14:09:33.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@126253fd
2022-03-03 14:09:33.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@126253fd
2022-03-03 14:09:33.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5276d6ee
2022-03-03 14:09:33.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@4dc27487
2022-03-03 14:09:33.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@4dc27487
2022-03-03 14:09:33.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@4dc27487
2022-03-03 14:09:33.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-03-03 14:09:33.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-03-03 14:09:33.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-03-03 14:09:33.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@1f9e9475
2022-03-03 14:09:33.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@14dd7b39
2022-03-03 14:09:33.583 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@5d908d47
2022-03-03 14:09:33.583 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5d908d47
2022-03-03 14:09:33.583 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1c9b0314
2022-03-03 14:09:33.583 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@642a7222
2022-03-03 14:09:33.583 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@642a7222
2022-03-03 14:09:33.583 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@5c86dbc5
2022-03-03 14:09:33.583 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c86dbc5
2022-03-03 14:09:33.583 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1a5a4e19
2022-03-03 14:09:33.583 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3e78b6a5
2022-03-03 14:09:33.583 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@24105dc5
2022-03-03 14:09:33.583 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@6bb4dd34
2022-03-03 14:09:33.583 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6bb4dd34
2022-03-03 14:09:33.583 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4b8729ff
2022-03-03 14:09:33.583 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@61710c6
2022-03-03 14:09:33.583 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-03-03 14:09:33.583 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-03-03 14:09:33.583 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-03-03 14:09:33.583 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-03-03 14:09:33.583 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7d7758be
2022-03-03 14:09:33.583 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2bdd8394
2022-03-03 14:09:33.583 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-03 14:09:33.598 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-03 14:09:33.598 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-03-03 14:09:33.598 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-03 14:09:33.598 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-03 14:09:33.598 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-03 14:09:34.125 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.28
      major : 8
      minor : 0
2022-03-03 14:09:34.125 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.18 (Revision: fef2894d751d47223192b706977b4a5bc41e6be4)
      major : 8
      minor : 0
2022-03-03 14:09:34.125 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-03-03 14:09:34.125 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-03-03 14:09:34.125 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-03-03 14:09:34.156 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-03-03 14:09:34.156 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-03-03 14:09:34.171 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-03-03 14:09:34.171 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-03-03 14:09:34.172 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-03 14:09:34.172 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-03 14:09:34.173 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-03-03 14:09:34.174 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-03-03 14:09:34.174 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-03-03 14:09:34.175 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-03 14:09:34.175 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-03-03 14:09:34.176 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-03-03 14:09:34.176 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-03-03 14:09:34.176 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-03-03 14:09:34.177 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-03 14:09:34.177 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-03-03 14:09:34.191 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-03-03 14:09:34.196 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-03-03 14:09:34.196 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-03-03 14:09:34.212 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name TClients
2022-03-03 14:09:34.212 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-03-03 14:09:34.220 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-03-03 14:09:34.228 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-03-03 14:09:34.228 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-03-03 14:09:34.228 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-03-03 14:09:34.228 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-03-03 14:09:34.228 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-03-03 14:09:34.228 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property name with lazy=false
2022-03-03 14:09:34.228 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-03-03 14:09:34.228 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for name
2022-03-03 14:09:34.228 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property name
2022-03-03 14:09:34.228 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-03-03 14:09:34.228 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for name
2022-03-03 14:09:34.228 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-03-03 14:09:34.244 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-03-03 14:09:34.244 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-03-03 14:09:34.244 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-03-03 14:09:34.244 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-03-03 14:09:34.244 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-03-03 14:09:34.244 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-03-03 14:09:34.244 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-03-03 14:09:34.244 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-03-03 14:09:34.244 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-03-03 14:09:34.244 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-03-03 14:09:34.244 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-03-03 14:09:34.244 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-03-03 14:09:34.244 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-03-03 14:09:34.244 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-03-03 14:09:34.244 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-03-03 14:09:34.244 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-03-03 14:09:34.244 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-03-03 14:09:34.244 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-03-03 14:09:34.244 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-03-03 14:09:34.244 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-03-03 14:09:34.244 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-03-03 14:09:34.244 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-03-03 14:09:34.244 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@5ef8df1e
2022-03-03 14:09:34.244 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-03-03 14:09:34.244 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-03-03 14:09:34.244 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-03-03 14:09:34.244 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-03-03 14:09:34.244 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-03-03 14:09:34.244 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-03-03 14:09:34.244 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-03-03 14:09:34.244 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-03-03 14:09:34.244 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-03-03 14:09:34.244 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-03-03 14:09:34.244 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-03-03 14:09:34.244 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-03-03 14:09:34.244 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-03-03 14:09:34.259 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-03-03 14:09:34.259 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-03-03 14:09:34.259 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.202-b08, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_202\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@22680f52, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=AE, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Studies\JEEProjects\TP7, java.runtime.version=1.8.0_202-b08, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\endorsed, java.io.tmpdir=C:\Users\toubk\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_202\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\toubk\AppData\Local\Microsoft\WindowsApps;;., javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unitClients, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\toubk, user.timezone=America/Los_Angeles, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, user.name=toubk, java.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;D:\Studies\JEEProjects\TP7\target\classes;C:\Users\toubk\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\toubk\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\toubk\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\toubk\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\toubk\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\toubk\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\toubk\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\toubk\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\toubk\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\toubk\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.2\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ma.cigma.pfe.ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_202\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_202, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-03-03 14:09:34.275 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-03-03 14:09:34.275 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-03-03 14:09:34.290 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-03 14:09:34.290 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-03 14:09:34.306 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-03 14:09:34.306 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-03 14:09:34.322 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-03-03 14:09:34.322 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TClients where id =?
2022-03-03 14:09:34.322 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select client_.id, client_.name as name2_0_ from TClients client_ where client_.id=?
2022-03-03 14:09:34.322 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-03-03 14:09:34.322 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-03-03 14:09:34.322 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-03-03 14:09:34.322 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TClients (name) values (?)
2022-03-03 14:09:34.347 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3569edd5]
2022-03-03 14:09:34.348 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:09:34.349 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:09:34.357 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:09:34.360 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:09:34.361 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-03 14:09:34.362 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e598df9]
2022-03-03 14:09:34.362 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:09:34.362 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:09:34.362 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:09:34.363 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:09:34.363 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [READ]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-03 14:09:34.363 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@99a65d3]
2022-03-03 14:09:34.363 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:09:34.363 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:09:34.363 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:09:34.364 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:09:34.364 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-03 14:09:34.364 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42cc13a0]
2022-03-03 14:09:34.364 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:09:34.364 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:09:34.364 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:09:34.364 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:09:34.365 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_NOWAIT]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-03 14:09:34.365 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6813a331]
2022-03-03 14:09:34.365 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:09:34.365 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:09:34.365 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:09:34.365 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:09:34.366 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_SKIPLOCKED]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-03 14:09:34.366 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39ab59f8]
2022-03-03 14:09:34.366 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:09:34.366 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:09:34.366 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:09:34.366 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:09:34.366 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [FORCE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-03 14:09:34.367 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@111610e6]
2022-03-03 14:09:34.367 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:09:34.367 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:09:34.367 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:09:34.367 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:09:34.367 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_READ]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? lock in share mode
2022-03-03 14:09:34.367 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29d37757]
2022-03-03 14:09:34.368 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:09:34.368 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:09:34.368 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:09:34.368 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:09:34.368 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_WRITE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-03 14:09:34.370 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25cc7470]
2022-03-03 14:09:34.370 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:09:34.370 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:09:34.370 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:09:34.371 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:09:34.371 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-03 14:09:34.371 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79b663b3]
2022-03-03 14:09:34.371 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:09:34.371 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:09:34.371 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:09:34.372 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:09:34.372 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-03 14:09:34.372 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d28bcd5]
2022-03-03 14:09:34.372 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:09:34.372 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:09:34.373 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:09:34.373 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:09:34.373 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-03 14:09:34.379 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Client: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-03 14:09:34.379 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Client: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-03 14:09:34.379 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-03-03 14:09:34.396 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:400)] - HHH000227: Running hbm2ddl schema export
2022-03-03 14:09:34.396 DEBUG [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:408)] - Import file not found: /import.sql
2022-03-03 14:09:34.396 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    drop table if exists TClients
2022-03-03 14:09:34.423 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    create table TClients (
        id bigint not null auto_increment,
        name varchar(255),
        primary key (id)
    )
2022-03-03 14:09:34.446 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:463)] - HHH000230: Schema export complete
2022-03-03 14:09:34.446 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-03-03 14:09:34.446 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-03-03 14:09:34.446 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-03-03 14:09:34.446 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-03-03 14:09:34.446 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-03-03 14:09:34.446 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@988246e
2022-03-03 14:09:34.446 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: 9305fd95-c886-40cb-919e-601ad5c7e932 (<unnamed>)
2022-03-03 14:09:34.446 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-03-03 14:09:34.446 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-03-03 14:09:34.467 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@599f571f
2022-03-03 14:09:34.467 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unitClients 
2022-03-03 14:09:34.509 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-03-03 14:10:01.626 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@77846d2c
2022-03-03 14:10:01.691 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-03 14:10:01.706 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-03 14:10:01.722 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'ServiceID'
2022-03-03 14:10:01.722 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'DaoID'
2022-03-03 14:10:01.722 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-03 14:10:01.754 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-03 14:10:01.786 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-03 14:10:01.786 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unitClients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unitClients]
2022-03-03 14:10:01.786 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unitClients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-03 14:10:01.786 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unitClients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP7/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-03-03 14:10:01.801 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-03 14:10:01.801 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-03 14:10:01.801 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-03 14:10:01.801 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-03 14:10:01.840 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-03 14:10:01.842 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-03 14:10:01.843 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-03 14:10:01.851 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-03 14:10:01.861 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-03 14:10:01.877 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-03 14:10:01.916 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@5ddeb7cb
2022-03-03 14:10:01.916 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@5ddeb7cb
2022-03-03 14:10:01.916 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5ddeb7cb
2022-03-03 14:10:01.916 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6be968ce
2022-03-03 14:10:01.916 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4082ba93
2022-03-03 14:10:01.916 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@609e8838
2022-03-03 14:10:01.916 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@73eb439a
2022-03-03 14:10:01.916 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@73eb439a
2022-03-03 14:10:01.916 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@73eb439a
2022-03-03 14:10:01.916 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@7ae0a9ec
2022-03-03 14:10:01.916 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@7ae0a9ec
2022-03-03 14:10:01.916 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7ae0a9ec
2022-03-03 14:10:01.932 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@2a693f59
2022-03-03 14:10:01.932 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@2a693f59
2022-03-03 14:10:01.932 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2a693f59
2022-03-03 14:10:01.932 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@723ca036
2022-03-03 14:10:01.932 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@723ca036
2022-03-03 14:10:01.932 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@723ca036
2022-03-03 14:10:01.932 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4d0d9fe7
2022-03-03 14:10:01.932 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4d0d9fe7
2022-03-03 14:10:01.932 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4d0d9fe7
2022-03-03 14:10:01.932 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6c4906d3
2022-03-03 14:10:01.932 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6c4906d3
2022-03-03 14:10:01.932 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6c4906d3
2022-03-03 14:10:01.932 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@5c80cf32
2022-03-03 14:10:01.932 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@5c80cf32
2022-03-03 14:10:01.932 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5c80cf32
2022-03-03 14:10:01.932 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5b799640
2022-03-03 14:10:01.932 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5b799640
2022-03-03 14:10:01.932 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4e5ed836
2022-03-03 14:10:01.932 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4e5ed836
2022-03-03 14:10:01.932 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@239a307b
2022-03-03 14:10:01.932 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@239a307b
2022-03-03 14:10:01.932 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5745ca0e
2022-03-03 14:10:01.932 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@15a34df2
2022-03-03 14:10:01.932 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@55cb6996
2022-03-03 14:10:01.932 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@55cb6996
2022-03-03 14:10:01.932 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@38467116
2022-03-03 14:10:01.932 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@38467116
2022-03-03 14:10:01.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@5e7cd6cc
2022-03-03 14:10:01.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5e7cd6cc
2022-03-03 14:10:01.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@6e2829c7
2022-03-03 14:10:01.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6e2829c7
2022-03-03 14:10:01.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6e2829c7
2022-03-03 14:10:01.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1c742ed4
2022-03-03 14:10:01.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@69c81773
2022-03-03 14:10:01.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@69c81773
2022-03-03 14:10:01.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@69c81773
2022-03-03 14:10:01.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@c05fddc
2022-03-03 14:10:01.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@50378a4
2022-03-03 14:10:01.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@50378a4
2022-03-03 14:10:01.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@7a6d7e92
2022-03-03 14:10:01.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7a6d7e92
2022-03-03 14:10:01.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@16150369
2022-03-03 14:10:01.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@16150369
2022-03-03 14:10:01.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@23f5b5dc
2022-03-03 14:10:01.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@23f5b5dc
2022-03-03 14:10:01.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6f15d60e
2022-03-03 14:10:01.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6f15d60e
2022-03-03 14:10:01.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@58e1d9d
2022-03-03 14:10:01.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@47caedad
2022-03-03 14:10:01.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@47caedad
2022-03-03 14:10:01.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@47caedad
2022-03-03 14:10:01.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1500b2f3
2022-03-03 14:10:01.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1500b2f3
2022-03-03 14:10:01.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1500b2f3
2022-03-03 14:10:01.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5c86a017
2022-03-03 14:10:01.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@1b919693
2022-03-03 14:10:01.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@1b919693
2022-03-03 14:10:01.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@1b919693
2022-03-03 14:10:01.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2584b82d
2022-03-03 14:10:01.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2584b82d
2022-03-03 14:10:01.964 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2584b82d
2022-03-03 14:10:01.964 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@626abbd0
2022-03-03 14:10:01.964 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@46d59067
2022-03-03 14:10:01.964 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@7486b455
2022-03-03 14:10:01.964 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7486b455
2022-03-03 14:10:01.964 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5efa40fe
2022-03-03 14:10:01.964 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@6d5620ce
2022-03-03 14:10:01.964 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d5620ce
2022-03-03 14:10:01.964 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@24959ca4
2022-03-03 14:10:01.964 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@24959ca4
2022-03-03 14:10:01.964 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@461ad730
2022-03-03 14:10:01.964 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7068e664
2022-03-03 14:10:01.964 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@7975d1d8
2022-03-03 14:10:01.975 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@32115b28
2022-03-03 14:10:01.975 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@32115b28
2022-03-03 14:10:01.975 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7d9f158f
2022-03-03 14:10:01.975 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@45efd90f
2022-03-03 14:10:01.975 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4b8729ff
2022-03-03 14:10:01.975 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@61710c6
2022-03-03 14:10:01.975 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-03-03 14:10:01.975 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-03-03 14:10:01.975 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-03-03 14:10:01.975 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-03-03 14:10:01.980 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-03 14:10:01.980 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-03 14:10:01.980 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-03-03 14:10:01.980 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-03 14:10:01.990 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-03 14:10:01.990 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-03 14:10:02.511 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.28
      major : 8
      minor : 0
2022-03-03 14:10:02.511 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.18 (Revision: fef2894d751d47223192b706977b4a5bc41e6be4)
      major : 8
      minor : 0
2022-03-03 14:10:02.511 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-03-03 14:10:02.511 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-03-03 14:10:02.529 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-03-03 14:10:02.547 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-03-03 14:10:02.549 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-03-03 14:10:02.556 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-03-03 14:10:02.556 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-03-03 14:10:02.556 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-03 14:10:02.556 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-03 14:10:02.556 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-03-03 14:10:02.556 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-03-03 14:10:02.556 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-03-03 14:10:02.556 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-03 14:10:02.556 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-03-03 14:10:02.556 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-03-03 14:10:02.556 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-03-03 14:10:02.556 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-03-03 14:10:02.556 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-03 14:10:02.556 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-03-03 14:10:02.576 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-03-03 14:10:02.587 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-03-03 14:10:02.587 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-03-03 14:10:02.587 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name TClients
2022-03-03 14:10:02.603 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-03-03 14:10:02.603 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-03-03 14:10:02.603 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-03-03 14:10:02.603 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-03-03 14:10:02.619 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-03-03 14:10:02.619 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-03-03 14:10:02.619 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-03-03 14:10:02.619 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property name with lazy=false
2022-03-03 14:10:02.619 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-03-03 14:10:02.619 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for name
2022-03-03 14:10:02.619 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property name
2022-03-03 14:10:02.619 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-03-03 14:10:02.619 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for name
2022-03-03 14:10:02.619 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-03-03 14:10:02.635 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-03-03 14:10:02.635 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-03-03 14:10:02.635 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-03-03 14:10:02.635 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-03-03 14:10:02.635 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-03-03 14:10:02.635 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-03-03 14:10:02.635 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-03-03 14:10:02.635 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-03-03 14:10:02.635 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-03-03 14:10:02.635 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-03-03 14:10:02.635 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-03-03 14:10:02.635 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-03-03 14:10:02.635 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-03-03 14:10:02.635 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-03-03 14:10:02.635 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-03-03 14:10:02.635 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-03-03 14:10:02.635 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-03-03 14:10:02.635 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-03-03 14:10:02.635 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-03-03 14:10:02.635 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-03-03 14:10:02.635 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-03-03 14:10:02.635 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-03-03 14:10:02.635 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7889a1ac
2022-03-03 14:10:02.635 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-03-03 14:10:02.635 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-03-03 14:10:02.635 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-03-03 14:10:02.635 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-03-03 14:10:02.635 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-03-03 14:10:02.635 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-03-03 14:10:02.635 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-03-03 14:10:02.635 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-03-03 14:10:02.635 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-03-03 14:10:02.635 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-03-03 14:10:02.635 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-03-03 14:10:02.635 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-03-03 14:10:02.635 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-03-03 14:10:02.651 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-03-03 14:10:02.651 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-03-03 14:10:02.651 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.202-b08, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_202\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1fe8d51b, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=AE, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Studies\JEEProjects\TP7, java.runtime.version=1.8.0_202-b08, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\endorsed, java.io.tmpdir=C:\Users\toubk\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_202\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\toubk\AppData\Local\Microsoft\WindowsApps;;., javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unitClients, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\toubk, user.timezone=America/Los_Angeles, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, user.name=toubk, java.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;D:\Studies\JEEProjects\TP7\target\classes;C:\Users\toubk\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\toubk\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\toubk\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\toubk\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\toubk\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\toubk\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\toubk\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\toubk\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\toubk\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\toubk\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.2\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ma.cigma.pfe.ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_202\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_202, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-03-03 14:10:02.666 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-03-03 14:10:02.666 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-03-03 14:10:02.694 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-03 14:10:02.694 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-03 14:10:02.700 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-03 14:10:02.700 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-03 14:10:02.721 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-03-03 14:10:02.721 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TClients where id =?
2022-03-03 14:10:02.721 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select client_.id, client_.name as name2_0_ from TClients client_ where client_.id=?
2022-03-03 14:10:02.722 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-03-03 14:10:02.722 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-03-03 14:10:02.722 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-03-03 14:10:02.722 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TClients (name) values (?)
2022-03-03 14:10:02.739 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c4bc9fc]
2022-03-03 14:10:02.739 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:10:02.741 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:10:02.754 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:10:02.757 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:10:02.757 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-03 14:10:02.757 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@81ff872]
2022-03-03 14:10:02.757 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:10:02.757 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:10:02.757 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:10:02.757 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:10:02.757 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [READ]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-03 14:10:02.757 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e598df9]
2022-03-03 14:10:02.757 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:10:02.757 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:10:02.757 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:10:02.757 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:10:02.757 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-03 14:10:02.757 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@99a65d3]
2022-03-03 14:10:02.757 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:10:02.757 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:10:02.764 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:10:02.764 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:10:02.765 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_NOWAIT]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-03 14:10:02.765 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42cc13a0]
2022-03-03 14:10:02.765 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:10:02.765 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:10:02.765 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:10:02.765 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:10:02.765 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_SKIPLOCKED]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-03 14:10:02.765 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6813a331]
2022-03-03 14:10:02.765 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:10:02.766 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:10:02.766 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:10:02.767 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:10:02.767 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [FORCE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-03 14:10:02.767 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39ab59f8]
2022-03-03 14:10:02.767 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:10:02.767 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:10:02.768 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:10:02.768 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:10:02.768 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_READ]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? lock in share mode
2022-03-03 14:10:02.768 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@111610e6]
2022-03-03 14:10:02.769 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:10:02.769 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:10:02.770 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:10:02.770 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:10:02.770 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_WRITE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-03 14:10:02.771 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29d37757]
2022-03-03 14:10:02.771 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:10:02.771 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:10:02.771 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:10:02.772 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:10:02.772 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-03 14:10:02.772 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25cc7470]
2022-03-03 14:10:02.772 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:10:02.772 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:10:02.773 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:10:02.773 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:10:02.773 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-03 14:10:02.774 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79b663b3]
2022-03-03 14:10:02.774 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:10:02.774 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:10:02.774 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:10:02.774 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:10:02.775 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-03 14:10:02.795 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Client: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-03 14:10:02.796 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Client: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-03 14:10:02.796 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-03-03 14:10:02.796 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:400)] - HHH000227: Running hbm2ddl schema export
2022-03-03 14:10:02.796 DEBUG [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:408)] - Import file not found: /import.sql
2022-03-03 14:10:02.805 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    drop table if exists TClients
2022-03-03 14:10:02.820 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    create table TClients (
        id bigint not null auto_increment,
        name varchar(255),
        primary key (id)
    )
2022-03-03 14:10:02.836 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:463)] - HHH000230: Schema export complete
2022-03-03 14:10:02.836 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-03-03 14:10:02.837 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-03-03 14:10:02.839 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-03-03 14:10:02.840 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-03-03 14:10:02.840 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-03-03 14:10:02.842 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@faa3fed
2022-03-03 14:10:02.844 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: f75fd488-7693-41b9-a84f-d223aa09bbb1 (<unnamed>)
2022-03-03 14:10:02.844 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-03-03 14:10:02.844 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-03-03 14:10:02.872 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@15723761
2022-03-03 14:10:02.872 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unitClients 
2022-03-03 14:10:02.907 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-03-03 14:10:32.529 DEBUG [pool-2-thread-1][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [validate] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.validate(PooledConnections.java:49)] - Connection pool now considered primed; min-size will be maintained
2022-03-03 14:16:34.665 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@77846d2c
2022-03-03 14:16:34.732 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-03 14:16:34.748 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-03 14:16:34.764 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'ServiceID'
2022-03-03 14:16:34.764 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'DaoID'
2022-03-03 14:16:34.778 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-03 14:16:34.795 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-03 14:16:34.843 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-03 14:16:34.843 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unitClients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unitClients]
2022-03-03 14:16:34.843 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unitClients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-03 14:16:34.843 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unitClients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP7/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-03-03 14:16:34.843 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-03 14:16:34.843 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-03 14:16:34.843 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-03 14:16:34.843 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-03 14:16:34.890 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-03 14:16:34.891 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-03 14:16:34.892 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-03 14:16:34.899 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-03 14:16:34.915 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-03 14:16:34.915 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-03 14:16:34.963 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@5ddeb7cb
2022-03-03 14:16:34.963 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@5ddeb7cb
2022-03-03 14:16:34.963 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5ddeb7cb
2022-03-03 14:16:34.963 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6be968ce
2022-03-03 14:16:34.963 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4082ba93
2022-03-03 14:16:34.963 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@609e8838
2022-03-03 14:16:34.963 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@73eb439a
2022-03-03 14:16:34.963 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@73eb439a
2022-03-03 14:16:34.963 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@73eb439a
2022-03-03 14:16:34.963 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@7ae0a9ec
2022-03-03 14:16:34.963 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@7ae0a9ec
2022-03-03 14:16:34.963 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7ae0a9ec
2022-03-03 14:16:34.963 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@2a693f59
2022-03-03 14:16:34.963 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@2a693f59
2022-03-03 14:16:34.963 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2a693f59
2022-03-03 14:16:34.963 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@723ca036
2022-03-03 14:16:34.978 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@723ca036
2022-03-03 14:16:34.979 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@723ca036
2022-03-03 14:16:34.979 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4d0d9fe7
2022-03-03 14:16:34.979 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4d0d9fe7
2022-03-03 14:16:34.979 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4d0d9fe7
2022-03-03 14:16:34.979 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6c4906d3
2022-03-03 14:16:34.979 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6c4906d3
2022-03-03 14:16:34.979 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6c4906d3
2022-03-03 14:16:34.979 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@5c80cf32
2022-03-03 14:16:34.979 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@5c80cf32
2022-03-03 14:16:34.979 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5c80cf32
2022-03-03 14:16:34.979 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5b799640
2022-03-03 14:16:34.979 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5b799640
2022-03-03 14:16:34.979 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4e5ed836
2022-03-03 14:16:34.979 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4e5ed836
2022-03-03 14:16:34.979 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@239a307b
2022-03-03 14:16:34.979 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@239a307b
2022-03-03 14:16:34.979 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5745ca0e
2022-03-03 14:16:34.979 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@15a34df2
2022-03-03 14:16:34.979 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@55cb6996
2022-03-03 14:16:34.979 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@55cb6996
2022-03-03 14:16:34.979 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@38467116
2022-03-03 14:16:34.979 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@38467116
2022-03-03 14:16:34.979 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@5e7cd6cc
2022-03-03 14:16:34.979 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5e7cd6cc
2022-03-03 14:16:34.979 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@6e2829c7
2022-03-03 14:16:34.979 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6e2829c7
2022-03-03 14:16:34.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6e2829c7
2022-03-03 14:16:34.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1c742ed4
2022-03-03 14:16:34.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@69c81773
2022-03-03 14:16:34.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@69c81773
2022-03-03 14:16:34.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@69c81773
2022-03-03 14:16:34.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@c05fddc
2022-03-03 14:16:34.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@50378a4
2022-03-03 14:16:34.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@50378a4
2022-03-03 14:16:34.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@7a6d7e92
2022-03-03 14:16:34.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7a6d7e92
2022-03-03 14:16:34.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@16150369
2022-03-03 14:16:34.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@16150369
2022-03-03 14:16:34.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@23f5b5dc
2022-03-03 14:16:34.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@23f5b5dc
2022-03-03 14:16:34.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6f15d60e
2022-03-03 14:16:34.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6f15d60e
2022-03-03 14:16:34.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@58e1d9d
2022-03-03 14:16:34.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@47caedad
2022-03-03 14:16:34.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@47caedad
2022-03-03 14:16:34.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@47caedad
2022-03-03 14:16:34.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1500b2f3
2022-03-03 14:16:34.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1500b2f3
2022-03-03 14:16:34.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1500b2f3
2022-03-03 14:16:34.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5c86a017
2022-03-03 14:16:34.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@1b919693
2022-03-03 14:16:34.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@1b919693
2022-03-03 14:16:34.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@1b919693
2022-03-03 14:16:34.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2584b82d
2022-03-03 14:16:34.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2584b82d
2022-03-03 14:16:34.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2584b82d
2022-03-03 14:16:34.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@626abbd0
2022-03-03 14:16:35.010 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@46d59067
2022-03-03 14:16:35.010 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@7486b455
2022-03-03 14:16:35.010 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7486b455
2022-03-03 14:16:35.010 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5efa40fe
2022-03-03 14:16:35.010 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@6d5620ce
2022-03-03 14:16:35.010 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d5620ce
2022-03-03 14:16:35.010 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@24959ca4
2022-03-03 14:16:35.010 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@24959ca4
2022-03-03 14:16:35.010 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@461ad730
2022-03-03 14:16:35.010 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7068e664
2022-03-03 14:16:35.010 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@7975d1d8
2022-03-03 14:16:35.010 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@32115b28
2022-03-03 14:16:35.010 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@32115b28
2022-03-03 14:16:35.010 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7d9f158f
2022-03-03 14:16:35.010 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@45efd90f
2022-03-03 14:16:35.010 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4b8729ff
2022-03-03 14:16:35.010 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@61710c6
2022-03-03 14:16:35.010 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-03-03 14:16:35.010 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-03-03 14:16:35.010 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-03-03 14:16:35.010 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-03-03 14:16:35.026 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-03 14:16:35.026 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-03 14:16:35.026 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-03-03 14:16:35.026 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-03 14:16:35.026 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-03 14:16:35.026 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-03 14:16:35.548 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.28
      major : 8
      minor : 0
2022-03-03 14:16:35.548 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.18 (Revision: fef2894d751d47223192b706977b4a5bc41e6be4)
      major : 8
      minor : 0
2022-03-03 14:16:35.548 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-03-03 14:16:35.568 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-03-03 14:16:35.574 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-03-03 14:16:35.593 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-03-03 14:16:35.594 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-03-03 14:16:35.598 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-03-03 14:16:35.598 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-03-03 14:16:35.598 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-03 14:16:35.598 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-03 14:16:35.598 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-03-03 14:16:35.598 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-03-03 14:16:35.598 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-03-03 14:16:35.598 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-03 14:16:35.598 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-03-03 14:16:35.598 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-03-03 14:16:35.598 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-03-03 14:16:35.598 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-03-03 14:16:35.598 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-03 14:16:35.598 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-03-03 14:16:35.614 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-03-03 14:16:35.630 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-03-03 14:16:35.630 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-03-03 14:16:35.645 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name TClients
2022-03-03 14:16:35.645 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-03-03 14:16:35.661 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-03-03 14:16:35.661 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-03-03 14:16:35.661 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-03-03 14:16:35.661 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-03-03 14:16:35.661 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-03-03 14:16:35.661 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-03-03 14:16:35.661 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property name with lazy=false
2022-03-03 14:16:35.661 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-03-03 14:16:35.661 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for name
2022-03-03 14:16:35.661 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property name
2022-03-03 14:16:35.661 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-03-03 14:16:35.661 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for name
2022-03-03 14:16:35.661 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-03-03 14:16:35.680 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-03-03 14:16:35.680 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-03-03 14:16:35.680 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-03-03 14:16:35.680 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-03-03 14:16:35.680 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-03-03 14:16:35.680 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-03-03 14:16:35.680 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-03-03 14:16:35.680 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-03-03 14:16:35.680 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-03-03 14:16:35.680 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-03-03 14:16:35.680 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-03-03 14:16:35.680 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-03-03 14:16:35.680 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-03-03 14:16:35.680 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-03-03 14:16:35.680 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-03-03 14:16:35.680 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-03-03 14:16:35.680 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-03-03 14:16:35.680 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-03-03 14:16:35.680 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-03-03 14:16:35.680 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-03-03 14:16:35.680 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-03-03 14:16:35.680 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-03-03 14:16:35.680 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@3deb2326
2022-03-03 14:16:35.680 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-03-03 14:16:35.680 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-03-03 14:16:35.680 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-03-03 14:16:35.680 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-03-03 14:16:35.680 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-03-03 14:16:35.680 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-03-03 14:16:35.680 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-03-03 14:16:35.680 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-03-03 14:16:35.680 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-03-03 14:16:35.680 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-03-03 14:16:35.680 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-03-03 14:16:35.680 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-03-03 14:16:35.680 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-03-03 14:16:35.693 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-03-03 14:16:35.693 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-03-03 14:16:35.693 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.202-b08, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_202\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@52d10fb8, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=AE, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Studies\JEEProjects\TP7, java.runtime.version=1.8.0_202-b08, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\endorsed, java.io.tmpdir=C:\Users\toubk\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_202\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\toubk\AppData\Local\Microsoft\WindowsApps;;., javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unitClients, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\toubk, user.timezone=America/Los_Angeles, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=toubk, java.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;D:\Studies\JEEProjects\TP7\target\classes;C:\Users\toubk\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\toubk\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\toubk\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\toubk\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\toubk\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\toubk\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\toubk\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\toubk\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\toubk\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\toubk\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.2\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ma.cigma.pfe.ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_202\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_202, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-03-03 14:16:35.709 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-03-03 14:16:35.709 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-03-03 14:16:35.724 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-03 14:16:35.724 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-03 14:16:35.740 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-03 14:16:35.740 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-03 14:16:35.764 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-03-03 14:16:35.764 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TClients where id =?
2022-03-03 14:16:35.764 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select client_.id, client_.name as name2_0_ from TClients client_ where client_.id=?
2022-03-03 14:16:35.764 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-03-03 14:16:35.764 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-03-03 14:16:35.764 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-03-03 14:16:35.764 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TClients (name) values (?)
2022-03-03 14:16:35.775 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cd7f1ae]
2022-03-03 14:16:35.776 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:16:35.776 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f9e1534]
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [READ]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@81ff872]
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e598df9]
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_NOWAIT]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@99a65d3]
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_SKIPLOCKED]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42cc13a0]
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [FORCE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6813a331]
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_READ]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? lock in share mode
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39ab59f8]
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_WRITE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@111610e6]
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29d37757]
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25cc7470]
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-03 14:16:35.782 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-03 14:16:35.797 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-03 14:16:35.797 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Client: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-03 14:16:35.797 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Client: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-03 14:16:35.813 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-03-03 14:16:35.813 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:400)] - HHH000227: Running hbm2ddl schema export
2022-03-03 14:16:35.813 DEBUG [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:408)] - Import file not found: /import.sql
2022-03-03 14:16:35.813 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    drop table if exists TClients
2022-03-03 14:16:35.860 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    create table TClients (
        id bigint not null auto_increment,
        name varchar(255),
        primary key (id)
    )
2022-03-03 14:16:35.871 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:463)] - HHH000230: Schema export complete
2022-03-03 14:16:35.871 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-03-03 14:16:35.871 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-03-03 14:16:35.871 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-03-03 14:16:35.871 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-03-03 14:16:35.871 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-03-03 14:16:35.871 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@433e536f
2022-03-03 14:16:35.871 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: c8104448-3b42-4097-91a6-86379e150da5 (<unnamed>)
2022-03-03 14:16:35.871 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-03-03 14:16:35.882 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-03-03 14:16:35.898 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@4565a70a
2022-03-03 14:16:35.898 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unitClients 
2022-03-03 14:16:35.937 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-03-03 14:17:05.572 DEBUG [pool-2-thread-1][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [validate] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.validate(PooledConnections.java:49)] - Connection pool now considered primed; min-size will be maintained
2022-03-04 02:57:34.292 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c762604
2022-03-04 02:57:34.394 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-04 02:57:34.410 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-04 02:57:34.430 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'ServiceID'
2022-03-04 02:57:34.430 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'DaoID'
2022-03-04 02:57:34.445 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-04 02:57:34.478 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-04 02:57:34.530 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-04 02:57:34.530 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unitClients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unitClients]
2022-03-04 02:57:34.545 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unitClients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-04 02:57:34.550 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unitClients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP7/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-03-04 02:57:34.555 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-04 02:57:34.557 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-04 02:57:34.559 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-04 02:57:34.559 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-04 02:57:34.599 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-04 02:57:34.599 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-04 02:57:34.599 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-04 02:57:34.621 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-04 02:57:34.682 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-04 02:57:34.705 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-04 02:57:34.831 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-03-04 02:57:34.831 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-03-04 02:57:34.831 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@496bc455
2022-03-04 02:57:34.831 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@247310d0
2022-03-04 02:57:34.843 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2b30a42c
2022-03-04 02:57:34.843 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@43df23d3
2022-03-04 02:57:34.847 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-03-04 02:57:34.847 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-03-04 02:57:34.847 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@305ffe9e
2022-03-04 02:57:34.847 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@61c4eee0
2022-03-04 02:57:34.847 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@61c4eee0
2022-03-04 02:57:34.847 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@61c4eee0
2022-03-04 02:57:34.847 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-03-04 02:57:34.847 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-03-04 02:57:34.847 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7fd50002
2022-03-04 02:57:34.847 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@28dcca0c
2022-03-04 02:57:34.847 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@28dcca0c
2022-03-04 02:57:34.847 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@28dcca0c
2022-03-04 02:57:34.847 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-03-04 02:57:34.847 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-03-04 02:57:34.847 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@312aa7c
2022-03-04 02:57:34.847 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-03-04 02:57:34.847 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-03-04 02:57:34.847 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@71075444
2022-03-04 02:57:34.874 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-03-04 02:57:34.874 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-03-04 02:57:34.874 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6f01b95f
2022-03-04 02:57:34.878 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@710636b0
2022-03-04 02:57:34.879 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@710636b0
2022-03-04 02:57:34.879 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@740fb309
2022-03-04 02:57:34.879 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@740fb309
2022-03-04 02:57:34.879 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@6f204a1a
2022-03-04 02:57:34.912 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@6f204a1a
2022-03-04 02:57:34.912 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3cce5371
2022-03-04 02:57:34.914 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@338fc1d8
2022-03-04 02:57:34.918 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@480d3575
2022-03-04 02:57:34.920 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@480d3575
2022-03-04 02:57:34.952 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@790da477
2022-03-04 02:57:34.975 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@790da477
2022-03-04 02:57:34.975 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@d554c5f
2022-03-04 02:57:34.975 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@d554c5f
2022-03-04 02:57:34.975 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-03-04 02:57:34.975 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-03-04 02:57:34.975 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6a8658ff
2022-03-04 02:57:34.975 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55de24cc
2022-03-04 02:57:34.975 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-03-04 02:57:34.975 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-03-04 02:57:34.975 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7e990ed7
2022-03-04 02:57:34.990 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4d15107f
2022-03-04 02:57:34.990 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@79207381
2022-03-04 02:57:34.990 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79207381
2022-03-04 02:57:34.992 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@97e93f1
2022-03-04 02:57:34.993 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@97e93f1
2022-03-04 02:57:34.994 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@624ea235
2022-03-04 02:57:34.994 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@624ea235
2022-03-04 02:57:34.994 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@1b1cfb87
2022-03-04 02:57:35.001 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1b1cfb87
2022-03-04 02:57:35.001 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-03-04 02:57:35.001 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-03-04 02:57:35.001 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f0f2942
2022-03-04 02:57:35.001 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@69504ae9
2022-03-04 02:57:35.001 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@69504ae9
2022-03-04 02:57:35.001 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@69504ae9
2022-03-04 02:57:35.001 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@126253fd
2022-03-04 02:57:35.001 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@126253fd
2022-03-04 02:57:35.001 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@126253fd
2022-03-04 02:57:35.001 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5276d6ee
2022-03-04 02:57:35.001 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@4dc27487
2022-03-04 02:57:35.001 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@4dc27487
2022-03-04 02:57:35.001 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@4dc27487
2022-03-04 02:57:35.001 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-03-04 02:57:35.001 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-03-04 02:57:35.001 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-03-04 02:57:35.001 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@1f9e9475
2022-03-04 02:57:35.001 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@14dd7b39
2022-03-04 02:57:35.018 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@5d908d47
2022-03-04 02:57:35.018 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5d908d47
2022-03-04 02:57:35.018 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1c9b0314
2022-03-04 02:57:35.018 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@642a7222
2022-03-04 02:57:35.018 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@642a7222
2022-03-04 02:57:35.018 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@5c86dbc5
2022-03-04 02:57:35.018 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c86dbc5
2022-03-04 02:57:35.018 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1a5a4e19
2022-03-04 02:57:35.018 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3e78b6a5
2022-03-04 02:57:35.032 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@24105dc5
2022-03-04 02:57:35.032 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@6bb4dd34
2022-03-04 02:57:35.032 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6bb4dd34
2022-03-04 02:57:35.032 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4b8729ff
2022-03-04 02:57:35.032 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@61710c6
2022-03-04 02:57:35.032 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-03-04 02:57:35.032 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-03-04 02:57:35.032 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-03-04 02:57:35.032 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-03-04 02:57:35.032 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7d7758be
2022-03-04 02:57:35.032 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2bdd8394
2022-03-04 02:57:35.049 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-04 02:57:35.049 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-04 02:57:35.049 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-03-04 02:57:35.049 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-04 02:57:35.049 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-04 02:57:35.049 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-04 02:57:36.208 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.28
      major : 8
      minor : 0
2022-03-04 02:57:36.208 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.18 (Revision: fef2894d751d47223192b706977b4a5bc41e6be4)
      major : 8
      minor : 0
2022-03-04 02:57:36.208 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-03-04 02:57:36.226 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-03-04 02:57:36.233 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-03-04 02:57:36.256 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-03-04 02:57:36.256 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-03-04 02:57:36.288 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-03-04 02:57:36.288 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-03-04 02:57:36.288 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-04 02:57:36.288 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-04 02:57:36.288 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-03-04 02:57:36.288 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-03-04 02:57:36.288 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-03-04 02:57:36.288 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-04 02:57:36.288 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-03-04 02:57:36.288 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-03-04 02:57:36.288 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-03-04 02:57:36.288 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-03-04 02:57:36.288 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-04 02:57:36.288 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-03-04 02:57:36.319 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-03-04 02:57:36.337 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-03-04 02:57:36.342 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-03-04 02:57:36.342 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name TClients
2022-03-04 02:57:36.342 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-03-04 02:57:36.359 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-03-04 02:57:36.359 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-03-04 02:57:36.359 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-03-04 02:57:36.359 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-03-04 02:57:36.359 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-03-04 02:57:36.359 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-03-04 02:57:36.359 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property name with lazy=false
2022-03-04 02:57:36.359 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-03-04 02:57:36.359 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for name
2022-03-04 02:57:36.359 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property name
2022-03-04 02:57:36.359 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-03-04 02:57:36.359 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for name
2022-03-04 02:57:36.359 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-03-04 02:57:36.374 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-03-04 02:57:36.374 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-03-04 02:57:36.374 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-03-04 02:57:36.390 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-03-04 02:57:36.390 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-03-04 02:57:36.390 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-03-04 02:57:36.390 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-03-04 02:57:36.390 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-03-04 02:57:36.390 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-03-04 02:57:36.390 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-03-04 02:57:36.390 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-03-04 02:57:36.390 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-03-04 02:57:36.390 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-03-04 02:57:36.390 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-03-04 02:57:36.390 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-03-04 02:57:36.390 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-03-04 02:57:36.390 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-03-04 02:57:36.390 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-03-04 02:57:36.390 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-03-04 02:57:36.390 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-03-04 02:57:36.390 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-03-04 02:57:36.390 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-03-04 02:57:36.390 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7889a1ac
2022-03-04 02:57:36.390 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-03-04 02:57:36.390 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-03-04 02:57:36.390 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-03-04 02:57:36.390 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-03-04 02:57:36.390 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-03-04 02:57:36.390 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-03-04 02:57:36.390 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-03-04 02:57:36.390 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-03-04 02:57:36.390 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-03-04 02:57:36.390 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-03-04 02:57:36.390 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-03-04 02:57:36.390 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-03-04 02:57:36.390 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-03-04 02:57:36.406 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-03-04 02:57:36.406 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-03-04 02:57:36.406 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.202-b08, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_202\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1fe8d51b, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=AE, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Studies\JEEProjects\TP7, java.runtime.version=1.8.0_202-b08, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\endorsed, java.io.tmpdir=C:\Users\toubk\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_202\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\toubk\AppData\Local\Microsoft\WindowsApps;;., javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unitClients, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\toubk, user.timezone=Asia/Muscat, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=toubk, java.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;D:\Studies\JEEProjects\TP7\target\classes;C:\Users\toubk\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\toubk\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\toubk\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\toubk\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\toubk\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\toubk\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\toubk\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\toubk\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\toubk\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\toubk\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.2\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ma.cigma.pfe.ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_202\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_202, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-03-04 02:57:36.406 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-03-04 02:57:36.422 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-03-04 02:57:36.438 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-04 02:57:36.438 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-04 02:57:36.454 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-04 02:57:36.454 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-04 02:57:36.483 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-03-04 02:57:36.484 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TClients where id =?
2022-03-04 02:57:36.484 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select client_.id, client_.name as name2_0_ from TClients client_ where client_.id=?
2022-03-04 02:57:36.484 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-03-04 02:57:36.484 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-03-04 02:57:36.484 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-03-04 02:57:36.484 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TClients (name) values (?)
2022-03-04 02:57:36.498 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c4bc9fc]
2022-03-04 02:57:36.499 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 02:57:36.499 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 02:57:36.507 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 02:57:36.511 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 02:57:36.512 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-04 02:57:36.512 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@81ff872]
2022-03-04 02:57:36.512 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 02:57:36.513 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 02:57:36.513 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 02:57:36.513 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 02:57:36.513 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [READ]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-04 02:57:36.513 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e598df9]
2022-03-04 02:57:36.514 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 02:57:36.514 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 02:57:36.514 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 02:57:36.514 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 02:57:36.514 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 02:57:36.514 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@99a65d3]
2022-03-04 02:57:36.514 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 02:57:36.514 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 02:57:36.514 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 02:57:36.514 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 02:57:36.514 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_NOWAIT]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 02:57:36.514 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42cc13a0]
2022-03-04 02:57:36.514 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 02:57:36.514 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 02:57:36.514 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 02:57:36.514 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 02:57:36.514 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_SKIPLOCKED]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 02:57:36.514 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6813a331]
2022-03-04 02:57:36.514 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 02:57:36.514 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 02:57:36.517 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 02:57:36.517 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 02:57:36.517 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [FORCE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 02:57:36.517 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39ab59f8]
2022-03-04 02:57:36.517 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 02:57:36.517 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 02:57:36.517 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 02:57:36.517 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 02:57:36.517 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_READ]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? lock in share mode
2022-03-04 02:57:36.517 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@111610e6]
2022-03-04 02:57:36.517 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 02:57:36.517 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 02:57:36.517 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 02:57:36.517 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 02:57:36.517 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_WRITE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 02:57:36.517 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29d37757]
2022-03-04 02:57:36.517 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 02:57:36.517 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 02:57:36.517 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 02:57:36.517 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 02:57:36.517 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 02:57:36.517 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25cc7470]
2022-03-04 02:57:36.522 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 02:57:36.522 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 02:57:36.523 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 02:57:36.523 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 02:57:36.523 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-04 02:57:36.523 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79b663b3]
2022-03-04 02:57:36.523 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 02:57:36.523 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 02:57:36.523 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 02:57:36.523 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 02:57:36.523 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-04 02:57:36.534 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Client: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-04 02:57:36.534 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Client: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-04 02:57:36.534 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-03-04 02:57:36.552 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:400)] - HHH000227: Running hbm2ddl schema export
2022-03-04 02:57:36.552 DEBUG [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:408)] - Import file not found: /import.sql
2022-03-04 02:57:36.552 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    drop table if exists TClients
2022-03-04 02:57:36.584 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    create table TClients (
        id bigint not null auto_increment,
        name varchar(255),
        primary key (id)
    )
2022-03-04 02:57:36.584 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:463)] - HHH000230: Schema export complete
2022-03-04 02:57:36.584 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-03-04 02:57:36.584 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-03-04 02:57:36.584 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-03-04 02:57:36.584 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-03-04 02:57:36.584 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-03-04 02:57:36.600 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@faa3fed
2022-03-04 02:57:36.600 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: 8d173668-58f4-4f9c-873f-e7f65800076c (<unnamed>)
2022-03-04 02:57:36.600 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-03-04 02:57:36.600 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-03-04 02:57:36.620 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@15723761
2022-03-04 02:57:36.620 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unitClients 
2022-03-04 02:57:36.676 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-03-08 23:12:42.315 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c762604
2022-03-08 23:12:42.636 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-08 23:12:42.694 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-08 23:12:42.712 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'ServiceID'
2022-03-08 23:12:42.713 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'DaoID'
2022-03-08 23:12:42.735 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-08 23:12:42.836 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-08 23:12:43.060 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-08 23:12:43.060 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unitClients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unitClients]
2022-03-08 23:12:43.063 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unitClients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-08 23:12:43.077 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unitClients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP7/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-03-08 23:12:43.101 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-08 23:12:43.104 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-08 23:12:43.113 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-08 23:12:43.114 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-08 23:12:43.315 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-08 23:12:43.317 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-08 23:12:43.320 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-08 23:12:43.348 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-08 23:12:43.458 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-08 23:12:43.487 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-08 23:12:43.672 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-03-08 23:12:43.672 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-03-08 23:12:43.674 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@496bc455
2022-03-08 23:12:43.692 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@247310d0
2022-03-08 23:12:43.694 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2b30a42c
2022-03-08 23:12:43.697 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@43df23d3
2022-03-08 23:12:43.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-03-08 23:12:43.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-03-08 23:12:43.704 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@305ffe9e
2022-03-08 23:12:43.710 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@61c4eee0
2022-03-08 23:12:43.710 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@61c4eee0
2022-03-08 23:12:43.711 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@61c4eee0
2022-03-08 23:12:43.716 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-03-08 23:12:43.716 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-03-08 23:12:43.717 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7fd50002
2022-03-08 23:12:43.722 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@28dcca0c
2022-03-08 23:12:43.722 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@28dcca0c
2022-03-08 23:12:43.723 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@28dcca0c
2022-03-08 23:12:43.726 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-03-08 23:12:43.727 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-03-08 23:12:43.727 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@312aa7c
2022-03-08 23:12:43.730 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-03-08 23:12:43.730 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-03-08 23:12:43.731 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@71075444
2022-03-08 23:12:43.733 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-03-08 23:12:43.733 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-03-08 23:12:43.733 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6f01b95f
2022-03-08 23:12:43.736 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@710636b0
2022-03-08 23:12:43.737 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@710636b0
2022-03-08 23:12:43.738 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@740fb309
2022-03-08 23:12:43.738 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@740fb309
2022-03-08 23:12:43.739 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@6f204a1a
2022-03-08 23:12:43.739 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@6f204a1a
2022-03-08 23:12:43.741 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3cce5371
2022-03-08 23:12:43.742 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@338fc1d8
2022-03-08 23:12:43.747 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@480d3575
2022-03-08 23:12:43.748 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@480d3575
2022-03-08 23:12:43.751 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@790da477
2022-03-08 23:12:43.751 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@790da477
2022-03-08 23:12:43.753 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@d554c5f
2022-03-08 23:12:43.754 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@d554c5f
2022-03-08 23:12:43.755 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-03-08 23:12:43.756 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-03-08 23:12:43.756 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6a8658ff
2022-03-08 23:12:43.759 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55de24cc
2022-03-08 23:12:43.762 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-03-08 23:12:43.762 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-03-08 23:12:43.762 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7e990ed7
2022-03-08 23:12:43.763 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4d15107f
2022-03-08 23:12:43.765 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@79207381
2022-03-08 23:12:43.765 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79207381
2022-03-08 23:12:43.766 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@97e93f1
2022-03-08 23:12:43.766 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@97e93f1
2022-03-08 23:12:43.767 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@624ea235
2022-03-08 23:12:43.767 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@624ea235
2022-03-08 23:12:43.771 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@1b1cfb87
2022-03-08 23:12:43.772 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1b1cfb87
2022-03-08 23:12:43.776 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-03-08 23:12:43.777 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-03-08 23:12:43.778 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f0f2942
2022-03-08 23:12:43.787 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@69504ae9
2022-03-08 23:12:43.787 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@69504ae9
2022-03-08 23:12:43.788 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@69504ae9
2022-03-08 23:12:43.790 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@126253fd
2022-03-08 23:12:43.792 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@126253fd
2022-03-08 23:12:43.793 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@126253fd
2022-03-08 23:12:43.799 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5276d6ee
2022-03-08 23:12:43.800 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@4dc27487
2022-03-08 23:12:43.800 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@4dc27487
2022-03-08 23:12:43.800 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@4dc27487
2022-03-08 23:12:43.801 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-03-08 23:12:43.801 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-03-08 23:12:43.802 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-03-08 23:12:43.802 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@1f9e9475
2022-03-08 23:12:43.806 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@14dd7b39
2022-03-08 23:12:43.816 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@5d908d47
2022-03-08 23:12:43.816 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5d908d47
2022-03-08 23:12:43.817 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1c9b0314
2022-03-08 23:12:43.827 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@642a7222
2022-03-08 23:12:43.829 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@642a7222
2022-03-08 23:12:43.832 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@5c86dbc5
2022-03-08 23:12:43.838 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c86dbc5
2022-03-08 23:12:43.839 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1a5a4e19
2022-03-08 23:12:43.840 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3e78b6a5
2022-03-08 23:12:43.841 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@24105dc5
2022-03-08 23:12:43.850 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@6bb4dd34
2022-03-08 23:12:43.851 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6bb4dd34
2022-03-08 23:12:43.851 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4b8729ff
2022-03-08 23:12:43.853 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@61710c6
2022-03-08 23:12:43.854 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-03-08 23:12:43.854 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-03-08 23:12:43.854 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-03-08 23:12:43.855 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-03-08 23:12:43.855 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7d7758be
2022-03-08 23:12:43.855 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2bdd8394
2022-03-08 23:12:43.952 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-08 23:12:44.022 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-08 23:12:44.023 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-03-08 23:12:44.024 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-08 23:12:44.030 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-08 23:12:44.031 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-08 23:12:46.004 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.28
      major : 8
      minor : 0
2022-03-08 23:12:46.005 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.18 (Revision: fef2894d751d47223192b706977b4a5bc41e6be4)
      major : 8
      minor : 0
2022-03-08 23:12:46.005 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-03-08 23:12:46.034 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-03-08 23:12:46.065 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-03-08 23:12:46.124 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-03-08 23:12:46.126 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-03-08 23:12:46.165 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-03-08 23:12:46.167 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-03-08 23:12:46.168 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-08 23:12:46.168 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-08 23:12:46.171 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-03-08 23:12:46.173 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-03-08 23:12:46.173 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-03-08 23:12:46.177 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-08 23:12:46.178 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-03-08 23:12:46.179 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-03-08 23:12:46.180 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-03-08 23:12:46.180 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-03-08 23:12:46.180 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-08 23:12:46.183 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-03-08 23:12:46.238 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-03-08 23:12:46.272 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-03-08 23:12:46.302 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-03-08 23:12:46.311 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name TClients
2022-03-08 23:12:46.317 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-03-08 23:12:46.354 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-03-08 23:12:46.357 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-03-08 23:12:46.359 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-03-08 23:12:46.361 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-03-08 23:12:46.363 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-03-08 23:12:46.366 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-03-08 23:12:46.367 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property name with lazy=false
2022-03-08 23:12:46.368 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-03-08 23:12:46.368 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for name
2022-03-08 23:12:46.369 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property name
2022-03-08 23:12:46.372 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-03-08 23:12:46.373 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for name
2022-03-08 23:12:46.377 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-03-08 23:12:46.418 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-03-08 23:12:46.420 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-03-08 23:12:46.420 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-03-08 23:12:46.421 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-03-08 23:12:46.421 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-03-08 23:12:46.421 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-03-08 23:12:46.421 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-03-08 23:12:46.422 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-03-08 23:12:46.422 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-03-08 23:12:46.422 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-03-08 23:12:46.422 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-03-08 23:12:46.422 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-03-08 23:12:46.422 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-03-08 23:12:46.423 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-03-08 23:12:46.423 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-03-08 23:12:46.423 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-03-08 23:12:46.423 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-03-08 23:12:46.424 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-03-08 23:12:46.424 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-03-08 23:12:46.424 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-03-08 23:12:46.425 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-03-08 23:12:46.425 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-03-08 23:12:46.425 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7889a1ac
2022-03-08 23:12:46.425 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-03-08 23:12:46.426 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-03-08 23:12:46.426 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-03-08 23:12:46.426 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-03-08 23:12:46.426 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-03-08 23:12:46.427 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-03-08 23:12:46.427 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-03-08 23:12:46.427 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-03-08 23:12:46.427 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-03-08 23:12:46.428 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-03-08 23:12:46.428 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-03-08 23:12:46.428 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-03-08 23:12:46.428 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-03-08 23:12:46.514 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-03-08 23:12:46.517 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-03-08 23:12:46.517 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.202-b08, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_202\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1fe8d51b, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=AE, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Studies\JEEProjects\TP7, java.runtime.version=1.8.0_202-b08, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\endorsed, java.io.tmpdir=C:\Users\toubk\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_202\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\toubk\AppData\Local\Microsoft\WindowsApps;;., javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unitClients, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\toubk, user.timezone=Asia/Muscat, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=toubk, java.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;D:\Studies\JEEProjects\TP7\target\classes;C:\Users\toubk\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\toubk\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\toubk\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\toubk\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\toubk\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\toubk\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\toubk\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\toubk\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\toubk\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\toubk\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.2\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ma.cigma.pfe.ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_202\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_202, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-03-08 23:12:46.539 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-03-08 23:12:46.549 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-03-08 23:12:46.623 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-08 23:12:46.623 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-08 23:12:46.649 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-08 23:12:46.649 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-08 23:12:46.731 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-03-08 23:12:46.732 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TClients where id =?
2022-03-08 23:12:46.732 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select client_.id, client_.name as name2_0_ from TClients client_ where client_.id=?
2022-03-08 23:12:46.732 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-03-08 23:12:46.732 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-03-08 23:12:46.733 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-03-08 23:12:46.733 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TClients (name) values (?)
2022-03-08 23:12:46.775 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c4bc9fc]
2022-03-08 23:12:46.812 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-08 23:12:46.812 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-08 23:12:46.853 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-08 23:12:46.866 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-08 23:12:46.872 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-08 23:12:46.872 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@81ff872]
2022-03-08 23:12:46.874 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-08 23:12:46.874 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-08 23:12:46.874 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-08 23:12:46.874 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-08 23:12:46.874 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [READ]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-08 23:12:46.876 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e598df9]
2022-03-08 23:12:46.876 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-08 23:12:46.877 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-08 23:12:46.878 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-08 23:12:46.879 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-08 23:12:46.879 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-08 23:12:46.879 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@99a65d3]
2022-03-08 23:12:46.879 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-08 23:12:46.884 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-08 23:12:46.887 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-08 23:12:46.887 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-08 23:12:46.888 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_NOWAIT]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-08 23:12:46.889 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42cc13a0]
2022-03-08 23:12:46.890 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-08 23:12:46.891 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-08 23:12:46.891 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-08 23:12:46.892 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-08 23:12:46.892 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_SKIPLOCKED]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-08 23:12:46.893 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6813a331]
2022-03-08 23:12:46.893 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-08 23:12:46.894 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-08 23:12:46.894 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-08 23:12:46.895 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-08 23:12:46.895 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [FORCE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-08 23:12:46.895 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39ab59f8]
2022-03-08 23:12:46.895 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-08 23:12:46.896 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-08 23:12:46.900 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-08 23:12:46.910 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-08 23:12:46.915 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_READ]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? lock in share mode
2022-03-08 23:12:46.927 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@111610e6]
2022-03-08 23:12:46.931 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-08 23:12:46.932 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-08 23:12:46.932 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-08 23:12:46.932 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-08 23:12:46.934 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_WRITE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-08 23:12:46.934 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29d37757]
2022-03-08 23:12:46.934 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-08 23:12:46.934 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-08 23:12:46.934 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-08 23:12:46.936 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-08 23:12:46.937 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-08 23:12:46.937 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25cc7470]
2022-03-08 23:12:46.937 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-08 23:12:46.937 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-08 23:12:46.937 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-08 23:12:46.940 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-08 23:12:46.940 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-08 23:12:46.941 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79b663b3]
2022-03-08 23:12:46.941 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-08 23:12:46.941 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-08 23:12:46.943 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-08 23:12:46.943 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-08 23:12:46.943 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-08 23:12:46.982 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Client: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-08 23:12:46.983 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Client: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-08 23:12:46.983 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-03-08 23:12:47.005 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:400)] - HHH000227: Running hbm2ddl schema export
2022-03-08 23:12:47.006 DEBUG [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:408)] - Import file not found: /import.sql
2022-03-08 23:12:47.009 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    drop table if exists TClients
2022-03-08 23:12:47.056 ERROR [main][org.hibernate.tool.hbm2ddl.SchemaExport] [perform] [org.hibernate.tool.hbm2ddl.SchemaExport.perform(SchemaExport.java:483)] - HHH000389: Unsuccessful: drop table if exists TClients
2022-03-08 23:12:47.057 ERROR [main][org.hibernate.tool.hbm2ddl.SchemaExport] [perform] [org.hibernate.tool.hbm2ddl.SchemaExport.perform(SchemaExport.java:484)] - Cannot drop table 'tclients' referenced by a foreign key constraint 'FKre30agugvhdgxgr89ck79fnf4' on table 'tclients_facture'.
2022-03-08 23:12:47.057 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    create table TClients (
        id bigint not null auto_increment,
        name varchar(255),
        primary key (id)
    )
2022-03-08 23:12:47.066 ERROR [main][org.hibernate.tool.hbm2ddl.SchemaExport] [perform] [org.hibernate.tool.hbm2ddl.SchemaExport.perform(SchemaExport.java:483)] - HHH000389: Unsuccessful: create table TClients (id bigint not null auto_increment, name varchar(255), primary key (id))
2022-03-08 23:12:47.066 ERROR [main][org.hibernate.tool.hbm2ddl.SchemaExport] [perform] [org.hibernate.tool.hbm2ddl.SchemaExport.perform(SchemaExport.java:484)] - Table 'tclients' already exists
2022-03-08 23:12:47.067 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:463)] - HHH000230: Schema export complete
2022-03-08 23:12:47.068 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-03-08 23:12:47.068 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-03-08 23:12:47.068 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-03-08 23:12:47.072 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-03-08 23:12:47.072 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-03-08 23:12:47.074 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@14faa38c
2022-03-08 23:12:47.077 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: 0f2d24ee-26eb-49c5-8a5d-3e86e80e2fc2 (<unnamed>)
2022-03-08 23:12:47.077 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-03-08 23:12:47.080 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-03-08 23:12:47.117 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@4a699efa
2022-03-08 23:12:47.117 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unitClients 
2022-03-08 23:12:47.187 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-03-15 15:32:46.893 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@77846d2c
2022-03-15 15:32:46.956 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-15 15:32:46.988 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-15 15:32:46.988 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'ServiceID'
2022-03-15 15:32:46.988 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'DaoID'
2022-03-15 15:32:47.009 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-15 15:32:47.041 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-15 15:32:47.076 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-15 15:32:47.077 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unitClients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unitClients]
2022-03-15 15:32:47.078 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unitClients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-15 15:32:47.080 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unitClients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP7/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-03-15 15:32:47.084 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-15 15:32:47.085 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-15 15:32:47.086 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-15 15:32:47.087 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-15 15:32:47.122 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-15 15:32:47.122 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-15 15:32:47.122 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-15 15:32:47.122 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-15 15:32:47.138 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-15 15:32:47.155 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-15 15:32:47.187 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@5ddeb7cb
2022-03-15 15:32:47.187 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@5ddeb7cb
2022-03-15 15:32:47.187 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5ddeb7cb
2022-03-15 15:32:47.187 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6be968ce
2022-03-15 15:32:47.187 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4082ba93
2022-03-15 15:32:47.187 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@609e8838
2022-03-15 15:32:47.187 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@73eb439a
2022-03-15 15:32:47.187 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@73eb439a
2022-03-15 15:32:47.187 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@73eb439a
2022-03-15 15:32:47.187 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@7ae0a9ec
2022-03-15 15:32:47.187 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@7ae0a9ec
2022-03-15 15:32:47.187 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7ae0a9ec
2022-03-15 15:32:47.187 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@2a693f59
2022-03-15 15:32:47.187 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@2a693f59
2022-03-15 15:32:47.187 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2a693f59
2022-03-15 15:32:47.187 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@723ca036
2022-03-15 15:32:47.187 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@723ca036
2022-03-15 15:32:47.187 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@723ca036
2022-03-15 15:32:47.187 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4d0d9fe7
2022-03-15 15:32:47.187 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4d0d9fe7
2022-03-15 15:32:47.187 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4d0d9fe7
2022-03-15 15:32:47.187 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6c4906d3
2022-03-15 15:32:47.187 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6c4906d3
2022-03-15 15:32:47.187 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6c4906d3
2022-03-15 15:32:47.187 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@5c80cf32
2022-03-15 15:32:47.187 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@5c80cf32
2022-03-15 15:32:47.187 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5c80cf32
2022-03-15 15:32:47.203 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5b799640
2022-03-15 15:32:47.203 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5b799640
2022-03-15 15:32:47.206 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4e5ed836
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4e5ed836
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@239a307b
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@239a307b
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5745ca0e
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@15a34df2
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@55cb6996
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@55cb6996
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@38467116
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@38467116
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@5e7cd6cc
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5e7cd6cc
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@6e2829c7
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6e2829c7
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6e2829c7
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1c742ed4
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@69c81773
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@69c81773
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@69c81773
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@c05fddc
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@50378a4
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@50378a4
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@7a6d7e92
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7a6d7e92
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@16150369
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@16150369
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@23f5b5dc
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@23f5b5dc
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6f15d60e
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6f15d60e
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@58e1d9d
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@47caedad
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@47caedad
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@47caedad
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1500b2f3
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1500b2f3
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1500b2f3
2022-03-15 15:32:47.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5c86a017
2022-03-15 15:32:47.222 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@1b919693
2022-03-15 15:32:47.222 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@1b919693
2022-03-15 15:32:47.222 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@1b919693
2022-03-15 15:32:47.222 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2584b82d
2022-03-15 15:32:47.222 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2584b82d
2022-03-15 15:32:47.222 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2584b82d
2022-03-15 15:32:47.222 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@626abbd0
2022-03-15 15:32:47.222 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@46d59067
2022-03-15 15:32:47.222 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@7486b455
2022-03-15 15:32:47.222 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7486b455
2022-03-15 15:32:47.222 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5efa40fe
2022-03-15 15:32:47.222 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@6d5620ce
2022-03-15 15:32:47.222 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d5620ce
2022-03-15 15:32:47.222 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@24959ca4
2022-03-15 15:32:47.222 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@24959ca4
2022-03-15 15:32:47.222 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@461ad730
2022-03-15 15:32:47.222 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7068e664
2022-03-15 15:32:47.222 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@7975d1d8
2022-03-15 15:32:47.222 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@32115b28
2022-03-15 15:32:47.222 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@32115b28
2022-03-15 15:32:47.237 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7d9f158f
2022-03-15 15:32:47.237 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@45efd90f
2022-03-15 15:32:47.237 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4b8729ff
2022-03-15 15:32:47.237 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@61710c6
2022-03-15 15:32:47.237 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-03-15 15:32:47.237 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-03-15 15:32:47.237 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-03-15 15:32:47.237 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-03-15 15:32:47.237 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-15 15:32:47.237 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-15 15:32:47.237 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-03-15 15:32:47.237 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-15 15:32:47.237 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-15 15:32:47.237 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-15 15:32:47.686 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.28
      major : 8
      minor : 0
2022-03-15 15:32:47.686 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.18 (Revision: fef2894d751d47223192b706977b4a5bc41e6be4)
      major : 8
      minor : 0
2022-03-15 15:32:47.686 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-03-15 15:32:47.686 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-03-15 15:32:47.686 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-03-15 15:32:47.718 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-03-15 15:32:47.718 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-03-15 15:32:47.723 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-03-15 15:32:47.723 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-03-15 15:32:47.723 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-15 15:32:47.734 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-15 15:32:47.734 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-03-15 15:32:47.734 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-03-15 15:32:47.734 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-03-15 15:32:47.734 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-15 15:32:47.734 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-03-15 15:32:47.734 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-03-15 15:32:47.734 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-03-15 15:32:47.734 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-03-15 15:32:47.734 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-15 15:32:47.734 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-03-15 15:32:47.750 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-03-15 15:32:47.750 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-03-15 15:32:47.765 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-03-15 15:32:47.765 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name TClients
2022-03-15 15:32:47.773 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-03-15 15:32:47.783 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-03-15 15:32:47.785 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-03-15 15:32:47.786 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-03-15 15:32:47.786 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-03-15 15:32:47.787 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-03-15 15:32:47.789 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-03-15 15:32:47.789 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property name with lazy=false
2022-03-15 15:32:47.789 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-03-15 15:32:47.789 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for name
2022-03-15 15:32:47.790 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property name
2022-03-15 15:32:47.790 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-03-15 15:32:47.791 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for name
2022-03-15 15:32:47.791 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-03-15 15:32:47.805 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-03-15 15:32:47.805 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-03-15 15:32:47.806 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-03-15 15:32:47.806 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-03-15 15:32:47.806 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-03-15 15:32:47.806 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-03-15 15:32:47.806 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-03-15 15:32:47.806 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-03-15 15:32:47.806 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-03-15 15:32:47.806 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-03-15 15:32:47.806 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-03-15 15:32:47.806 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-03-15 15:32:47.806 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-03-15 15:32:47.806 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-03-15 15:32:47.806 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-03-15 15:32:47.806 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-03-15 15:32:47.806 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-03-15 15:32:47.806 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-03-15 15:32:47.806 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-03-15 15:32:47.806 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-03-15 15:32:47.806 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-03-15 15:32:47.806 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-03-15 15:32:47.806 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@3deb2326
2022-03-15 15:32:47.806 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-03-15 15:32:47.806 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-03-15 15:32:47.806 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-03-15 15:32:47.806 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-03-15 15:32:47.806 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-03-15 15:32:47.806 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-03-15 15:32:47.806 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-03-15 15:32:47.806 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-03-15 15:32:47.806 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-03-15 15:32:47.806 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-03-15 15:32:47.806 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-03-15 15:32:47.806 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-03-15 15:32:47.806 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-03-15 15:32:47.823 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-03-15 15:32:47.823 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-03-15 15:32:47.823 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.202-b08, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_202\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@52d10fb8, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=AE, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Studies\JEEProjects\TP7, java.runtime.version=1.8.0_202-b08, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\endorsed, java.io.tmpdir=C:\Users\toubk\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_202\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\toubk\AppData\Local\Microsoft\WindowsApps;;., javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unitClients, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\toubk, user.timezone=Asia/Muscat, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=toubk, java.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;D:\Studies\JEEProjects\TP7\target\classes;C:\Users\toubk\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\toubk\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\toubk\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\toubk\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\toubk\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\toubk\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\toubk\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\toubk\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\toubk\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\toubk\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.2\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ma.cigma.pfe.ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_202\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_202, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-03-15 15:32:47.823 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-03-15 15:32:47.823 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-03-15 15:32:47.853 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-15 15:32:47.853 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-15 15:32:47.853 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-15 15:32:47.853 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-15 15:32:47.869 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-03-15 15:32:47.869 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TClients where id =?
2022-03-15 15:32:47.869 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select client_.id, client_.name as name2_0_ from TClients client_ where client_.id=?
2022-03-15 15:32:47.869 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-03-15 15:32:47.869 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-03-15 15:32:47.869 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-03-15 15:32:47.869 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TClients (name) values (?)
2022-03-15 15:32:47.885 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cd7f1ae]
2022-03-15 15:32:47.885 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-15 15:32:47.885 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:32:47.885 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f9e1534]
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [READ]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@81ff872]
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e598df9]
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_NOWAIT]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@99a65d3]
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_SKIPLOCKED]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42cc13a0]
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [FORCE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6813a331]
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_READ]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? lock in share mode
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39ab59f8]
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_WRITE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@111610e6]
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29d37757]
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25cc7470]
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:32:47.901 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:32:47.916 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-15 15:32:47.916 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-15 15:32:47.933 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Client: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-15 15:32:47.933 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Client: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-15 15:32:47.933 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-03-15 15:32:47.933 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:400)] - HHH000227: Running hbm2ddl schema export
2022-03-15 15:32:47.933 DEBUG [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:408)] - Import file not found: /import.sql
2022-03-15 15:32:47.933 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    drop table if exists TClients
2022-03-15 15:32:47.962 ERROR [main][org.hibernate.tool.hbm2ddl.SchemaExport] [perform] [org.hibernate.tool.hbm2ddl.SchemaExport.perform(SchemaExport.java:483)] - HHH000389: Unsuccessful: drop table if exists TClients
2022-03-15 15:32:47.962 ERROR [main][org.hibernate.tool.hbm2ddl.SchemaExport] [perform] [org.hibernate.tool.hbm2ddl.SchemaExport.perform(SchemaExport.java:484)] - Cannot drop table 'tclients' referenced by a foreign key constraint 'FKre30agugvhdgxgr89ck79fnf4' on table 'tclients_facture'.
2022-03-15 15:32:47.962 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    create table TClients (
        id bigint not null auto_increment,
        name varchar(255),
        primary key (id)
    )
2022-03-15 15:32:47.968 ERROR [main][org.hibernate.tool.hbm2ddl.SchemaExport] [perform] [org.hibernate.tool.hbm2ddl.SchemaExport.perform(SchemaExport.java:483)] - HHH000389: Unsuccessful: create table TClients (id bigint not null auto_increment, name varchar(255), primary key (id))
2022-03-15 15:32:47.968 ERROR [main][org.hibernate.tool.hbm2ddl.SchemaExport] [perform] [org.hibernate.tool.hbm2ddl.SchemaExport.perform(SchemaExport.java:484)] - Table 'tclients' already exists
2022-03-15 15:32:47.969 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:463)] - HHH000230: Schema export complete
2022-03-15 15:32:47.970 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-03-15 15:32:47.970 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-03-15 15:32:47.972 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-03-15 15:32:47.973 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-03-15 15:32:47.973 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-03-15 15:32:47.974 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@757194dc
2022-03-15 15:32:47.976 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: 5a6978e2-747d-4225-834b-aa008f6138e4 (<unnamed>)
2022-03-15 15:32:47.976 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-03-15 15:32:47.978 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-03-15 15:32:47.989 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@c3fa05a
2022-03-15 15:32:47.989 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unitClients 
2022-03-15 15:32:48.023 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-03-15 15:33:17.696 DEBUG [pool-2-thread-1][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [validate] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.validate(PooledConnections.java:49)] - Connection pool now considered primed; min-size will be maintained
2022-03-15 15:34:21.811 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@77846d2c
2022-03-15 15:34:21.859 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-15 15:34:21.875 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-15 15:34:21.891 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'ServiceID'
2022-03-15 15:34:21.891 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'DaoID'
2022-03-15 15:34:21.891 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-15 15:34:21.931 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-15 15:34:21.961 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-15 15:34:21.961 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unitClients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unitClients]
2022-03-15 15:34:21.961 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unitClients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-15 15:34:21.961 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unitClients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP7/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-03-15 15:34:21.961 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-15 15:34:21.961 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-15 15:34:21.977 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-15 15:34:21.977 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-15 15:34:22.009 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-15 15:34:22.009 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-15 15:34:22.009 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-15 15:34:22.009 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-15 15:34:22.024 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-15 15:34:22.024 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-15 15:34:22.057 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@5ddeb7cb
2022-03-15 15:34:22.057 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@5ddeb7cb
2022-03-15 15:34:22.057 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5ddeb7cb
2022-03-15 15:34:22.057 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6be968ce
2022-03-15 15:34:22.057 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4082ba93
2022-03-15 15:34:22.057 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@609e8838
2022-03-15 15:34:22.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@73eb439a
2022-03-15 15:34:22.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@73eb439a
2022-03-15 15:34:22.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@73eb439a
2022-03-15 15:34:22.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@7ae0a9ec
2022-03-15 15:34:22.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@7ae0a9ec
2022-03-15 15:34:22.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7ae0a9ec
2022-03-15 15:34:22.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@2a693f59
2022-03-15 15:34:22.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@2a693f59
2022-03-15 15:34:22.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2a693f59
2022-03-15 15:34:22.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@723ca036
2022-03-15 15:34:22.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@723ca036
2022-03-15 15:34:22.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@723ca036
2022-03-15 15:34:22.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4d0d9fe7
2022-03-15 15:34:22.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4d0d9fe7
2022-03-15 15:34:22.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4d0d9fe7
2022-03-15 15:34:22.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6c4906d3
2022-03-15 15:34:22.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6c4906d3
2022-03-15 15:34:22.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6c4906d3
2022-03-15 15:34:22.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@5c80cf32
2022-03-15 15:34:22.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@5c80cf32
2022-03-15 15:34:22.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5c80cf32
2022-03-15 15:34:22.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5b799640
2022-03-15 15:34:22.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5b799640
2022-03-15 15:34:22.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4e5ed836
2022-03-15 15:34:22.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4e5ed836
2022-03-15 15:34:22.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@239a307b
2022-03-15 15:34:22.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@239a307b
2022-03-15 15:34:22.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5745ca0e
2022-03-15 15:34:22.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@15a34df2
2022-03-15 15:34:22.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@55cb6996
2022-03-15 15:34:22.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@55cb6996
2022-03-15 15:34:22.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@38467116
2022-03-15 15:34:22.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@38467116
2022-03-15 15:34:22.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@5e7cd6cc
2022-03-15 15:34:22.088 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5e7cd6cc
2022-03-15 15:34:22.088 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@6e2829c7
2022-03-15 15:34:22.088 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6e2829c7
2022-03-15 15:34:22.088 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6e2829c7
2022-03-15 15:34:22.088 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1c742ed4
2022-03-15 15:34:22.088 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@69c81773
2022-03-15 15:34:22.088 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@69c81773
2022-03-15 15:34:22.088 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@69c81773
2022-03-15 15:34:22.088 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@c05fddc
2022-03-15 15:34:22.088 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@50378a4
2022-03-15 15:34:22.088 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@50378a4
2022-03-15 15:34:22.094 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@7a6d7e92
2022-03-15 15:34:22.094 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7a6d7e92
2022-03-15 15:34:22.095 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@16150369
2022-03-15 15:34:22.095 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@16150369
2022-03-15 15:34:22.095 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@23f5b5dc
2022-03-15 15:34:22.096 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@23f5b5dc
2022-03-15 15:34:22.097 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6f15d60e
2022-03-15 15:34:22.097 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6f15d60e
2022-03-15 15:34:22.097 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@58e1d9d
2022-03-15 15:34:22.098 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@47caedad
2022-03-15 15:34:22.098 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@47caedad
2022-03-15 15:34:22.099 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@47caedad
2022-03-15 15:34:22.099 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1500b2f3
2022-03-15 15:34:22.100 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1500b2f3
2022-03-15 15:34:22.100 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1500b2f3
2022-03-15 15:34:22.100 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5c86a017
2022-03-15 15:34:22.101 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@1b919693
2022-03-15 15:34:22.101 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@1b919693
2022-03-15 15:34:22.102 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@1b919693
2022-03-15 15:34:22.102 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2584b82d
2022-03-15 15:34:22.103 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2584b82d
2022-03-15 15:34:22.104 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2584b82d
2022-03-15 15:34:22.104 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@626abbd0
2022-03-15 15:34:22.104 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@46d59067
2022-03-15 15:34:22.107 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@7486b455
2022-03-15 15:34:22.107 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7486b455
2022-03-15 15:34:22.107 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5efa40fe
2022-03-15 15:34:22.109 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@6d5620ce
2022-03-15 15:34:22.109 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d5620ce
2022-03-15 15:34:22.110 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@24959ca4
2022-03-15 15:34:22.111 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@24959ca4
2022-03-15 15:34:22.111 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@461ad730
2022-03-15 15:34:22.111 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7068e664
2022-03-15 15:34:22.112 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@7975d1d8
2022-03-15 15:34:22.113 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@32115b28
2022-03-15 15:34:22.114 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@32115b28
2022-03-15 15:34:22.114 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7d9f158f
2022-03-15 15:34:22.114 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@45efd90f
2022-03-15 15:34:22.114 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4b8729ff
2022-03-15 15:34:22.114 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@61710c6
2022-03-15 15:34:22.115 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-03-15 15:34:22.115 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-03-15 15:34:22.115 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-03-15 15:34:22.115 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-03-15 15:34:22.120 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-15 15:34:22.125 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-15 15:34:22.125 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-03-15 15:34:22.125 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-15 15:34:22.127 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-15 15:34:22.127 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-15 15:34:22.572 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.28
      major : 8
      minor : 0
2022-03-15 15:34:22.572 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.18 (Revision: fef2894d751d47223192b706977b4a5bc41e6be4)
      major : 8
      minor : 0
2022-03-15 15:34:22.572 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-03-15 15:34:22.572 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-03-15 15:34:22.572 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-03-15 15:34:22.589 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-03-15 15:34:22.604 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-03-15 15:34:22.607 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-03-15 15:34:22.607 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-03-15 15:34:22.607 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-15 15:34:22.607 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-15 15:34:22.607 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-03-15 15:34:22.620 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-03-15 15:34:22.620 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-03-15 15:34:22.620 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-15 15:34:22.620 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-03-15 15:34:22.620 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-03-15 15:34:22.620 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-03-15 15:34:22.620 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-03-15 15:34:22.620 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-15 15:34:22.620 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-03-15 15:34:22.635 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-03-15 15:34:22.645 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-03-15 15:34:22.654 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-03-15 15:34:22.656 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name TClients
2022-03-15 15:34:22.659 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-03-15 15:34:22.661 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-03-15 15:34:22.661 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-03-15 15:34:22.661 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-03-15 15:34:22.661 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-03-15 15:34:22.661 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-03-15 15:34:22.661 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-03-15 15:34:22.661 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property name with lazy=false
2022-03-15 15:34:22.661 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-03-15 15:34:22.661 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for name
2022-03-15 15:34:22.661 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property name
2022-03-15 15:34:22.661 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-03-15 15:34:22.661 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for name
2022-03-15 15:34:22.676 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-03-15 15:34:22.676 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-03-15 15:34:22.676 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-03-15 15:34:22.676 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-03-15 15:34:22.676 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-03-15 15:34:22.676 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-03-15 15:34:22.676 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-03-15 15:34:22.676 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-03-15 15:34:22.676 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-03-15 15:34:22.676 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-03-15 15:34:22.676 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-03-15 15:34:22.676 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-03-15 15:34:22.676 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-03-15 15:34:22.676 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-03-15 15:34:22.676 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-03-15 15:34:22.676 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-03-15 15:34:22.676 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-03-15 15:34:22.676 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-03-15 15:34:22.676 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-03-15 15:34:22.676 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-03-15 15:34:22.676 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-03-15 15:34:22.676 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-03-15 15:34:22.676 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-03-15 15:34:22.676 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@3deb2326
2022-03-15 15:34:22.676 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-03-15 15:34:22.676 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-03-15 15:34:22.692 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-03-15 15:34:22.692 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-03-15 15:34:22.692 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-03-15 15:34:22.692 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-03-15 15:34:22.692 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-03-15 15:34:22.692 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-03-15 15:34:22.692 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-03-15 15:34:22.692 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-03-15 15:34:22.692 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-03-15 15:34:22.692 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-03-15 15:34:22.692 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-03-15 15:34:22.708 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-03-15 15:34:22.708 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-03-15 15:34:22.708 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.202-b08, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_202\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@52d10fb8, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=AE, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Studies\JEEProjects\TP7, java.runtime.version=1.8.0_202-b08, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\endorsed, java.io.tmpdir=C:\Users\toubk\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_202\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\toubk\AppData\Local\Microsoft\WindowsApps;;., javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unitClients, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\toubk, user.timezone=Asia/Muscat, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=toubk, java.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;D:\Studies\JEEProjects\TP7\target\classes;C:\Users\toubk\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\toubk\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\toubk\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\toubk\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\toubk\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\toubk\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\toubk\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\toubk\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\toubk\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\toubk\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.2\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ma.cigma.pfe.ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_202\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_202, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-03-15 15:34:22.708 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-03-15 15:34:22.708 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-03-15 15:34:22.735 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-15 15:34:22.735 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-15 15:34:22.735 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-15 15:34:22.735 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-15 15:34:22.751 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-03-15 15:34:22.751 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TClients where id =?
2022-03-15 15:34:22.751 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select client_.id, client_.name as name2_0_ from TClients client_ where client_.id=?
2022-03-15 15:34:22.751 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-03-15 15:34:22.751 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-03-15 15:34:22.751 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-03-15 15:34:22.751 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TClients (name) values (?)
2022-03-15 15:34:22.767 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cd7f1ae]
2022-03-15 15:34:22.767 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-15 15:34:22.767 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:34:22.783 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:34:22.783 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-15 15:34:22.783 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-15 15:34:22.783 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f9e1534]
2022-03-15 15:34:22.783 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-15 15:34:22.783 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:34:22.783 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:34:22.783 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-15 15:34:22.783 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [READ]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-15 15:34:22.783 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@81ff872]
2022-03-15 15:34:22.783 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-15 15:34:22.783 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:34:22.783 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:34:22.783 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-15 15:34:22.783 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-15 15:34:22.794 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e598df9]
2022-03-15 15:34:22.794 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-15 15:34:22.794 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:34:22.794 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:34:22.795 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-15 15:34:22.795 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_NOWAIT]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-15 15:34:22.795 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@99a65d3]
2022-03-15 15:34:22.795 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-15 15:34:22.795 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:34:22.796 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:34:22.796 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-15 15:34:22.796 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_SKIPLOCKED]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-15 15:34:22.796 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42cc13a0]
2022-03-15 15:34:22.796 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-15 15:34:22.797 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:34:22.797 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:34:22.797 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-15 15:34:22.797 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [FORCE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-15 15:34:22.798 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6813a331]
2022-03-15 15:34:22.798 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-15 15:34:22.798 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:34:22.798 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:34:22.799 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-15 15:34:22.799 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_READ]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? lock in share mode
2022-03-15 15:34:22.799 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39ab59f8]
2022-03-15 15:34:22.799 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-15 15:34:22.799 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:34:22.799 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:34:22.800 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-15 15:34:22.800 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_WRITE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-15 15:34:22.800 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@111610e6]
2022-03-15 15:34:22.800 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-15 15:34:22.800 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:34:22.800 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:34:22.801 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-15 15:34:22.801 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=? for update
2022-03-15 15:34:22.801 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29d37757]
2022-03-15 15:34:22.801 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-15 15:34:22.801 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:34:22.801 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:34:22.802 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-15 15:34:22.802 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-15 15:34:22.802 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25cc7470]
2022-03-15 15:34:22.802 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-15 15:34:22.802 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:34:22.802 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:34:22.803 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-15 15:34:22.803 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-15 15:34:22.819 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Client: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-15 15:34:22.819 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Client: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-03-15 15:34:22.820 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-03-15 15:34:22.824 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:400)] - HHH000227: Running hbm2ddl schema export
2022-03-15 15:34:22.825 DEBUG [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:408)] - Import file not found: /import.sql
2022-03-15 15:34:22.827 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    drop table if exists TClients
2022-03-15 15:34:22.828 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    create table TClients (
        id bigint not null auto_increment,
        name varchar(255),
        primary key (id)
    )
2022-03-15 15:34:22.846 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:463)] - HHH000230: Schema export complete
2022-03-15 15:34:22.846 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-03-15 15:34:22.846 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-03-15 15:34:22.846 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-03-15 15:34:22.846 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-03-15 15:34:22.846 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-03-15 15:34:22.846 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@381cad29
2022-03-15 15:34:22.846 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: d95cbfb6-290d-41f8-81b1-df20bbf0e937 (<unnamed>)
2022-03-15 15:34:22.846 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-03-15 15:34:22.846 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-03-15 15:34:22.878 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@312afbc7
2022-03-15 15:34:22.878 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unitClients 
2022-03-15 15:34:22.908 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-03-15 15:34:52.585 DEBUG [pool-2-thread-1][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [validate] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.validate(PooledConnections.java:49)] - Connection pool now considered primed; min-size will be maintained
