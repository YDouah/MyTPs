2022-03-04 12:49:58.990 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@77846d2c
2022-03-04 12:49:59.054 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-04 12:49:59.069 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-04 12:49:59.128 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'ServiceID'
2022-03-04 12:49:59.128 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'DaoID'
2022-03-04 12:49:59.132 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-04 12:49:59.164 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-04 12:49:59.197 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-04 12:49:59.197 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unitClients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unitClients]
2022-03-04 12:49:59.197 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unitClients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-04 12:49:59.206 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unitClients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP9/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: update
		javax.persistence.jdbc.user: root]
2022-03-04 12:49:59.206 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-04 12:49:59.206 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-04 12:49:59.206 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-04 12:49:59.206 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-04 12:49:59.238 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-04 12:49:59.238 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-04 12:49:59.238 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-04 12:49:59.253 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-04 12:49:59.269 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-04 12:49:59.285 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-04 12:49:59.364 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2022-03-04 12:49:59.364 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2022-03-04 12:49:59.364 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4082ba93
2022-03-04 12:49:59.364 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@43df23d3
2022-03-04 12:49:59.364 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@305ffe9e
2022-03-04 12:49:59.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@7ae0a9ec
2022-03-04 12:49:59.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@2a693f59
2022-03-04 12:49:59.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@2a693f59
2022-03-04 12:49:59.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2a693f59
2022-03-04 12:49:59.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@723ca036
2022-03-04 12:49:59.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@723ca036
2022-03-04 12:49:59.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@723ca036
2022-03-04 12:49:59.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@4d0d9fe7
2022-03-04 12:49:59.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@4d0d9fe7
2022-03-04 12:49:59.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d0d9fe7
2022-03-04 12:49:59.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@66982506
2022-03-04 12:49:59.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@66982506
2022-03-04 12:49:59.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@66982506
2022-03-04 12:49:59.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4f32a3ad
2022-03-04 12:49:59.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4f32a3ad
2022-03-04 12:49:59.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4f32a3ad
2022-03-04 12:49:59.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@673fdbce
2022-03-04 12:49:59.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@673fdbce
2022-03-04 12:49:59.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@673fdbce
2022-03-04 12:49:59.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@3de8f619
2022-03-04 12:49:59.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@3de8f619
2022-03-04 12:49:59.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3de8f619
2022-03-04 12:49:59.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6f204a1a
2022-03-04 12:49:59.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6f204a1a
2022-03-04 12:49:59.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3cce5371
2022-03-04 12:49:59.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3cce5371
2022-03-04 12:49:59.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@338fc1d8
2022-03-04 12:49:59.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@338fc1d8
2022-03-04 12:49:59.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@480d3575
2022-03-04 12:49:59.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@65f8f5ae
2022-03-04 12:49:59.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@5c7933ad
2022-03-04 12:49:59.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5c7933ad
2022-03-04 12:49:59.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@33ecda92
2022-03-04 12:49:59.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@33ecda92
2022-03-04 12:49:59.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@55de24cc
2022-03-04 12:49:59.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@55de24cc
2022-03-04 12:49:59.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@25df00a0
2022-03-04 12:49:59.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@25df00a0
2022-03-04 12:49:59.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@25df00a0
2022-03-04 12:49:59.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5884a914
2022-03-04 12:49:59.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@1a4927d6
2022-03-04 12:49:59.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1a4927d6
2022-03-04 12:49:59.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1a4927d6
2022-03-04 12:49:59.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@97e93f1
2022-03-04 12:49:59.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@624ea235
2022-03-04 12:49:59.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@624ea235
2022-03-04 12:49:59.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@1b1cfb87
2022-03-04 12:49:59.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1b1cfb87
2022-03-04 12:49:59.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@20b2475a
2022-03-04 12:49:59.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@20b2475a
2022-03-04 12:49:59.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@58e1d9d
2022-03-04 12:49:59.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@58e1d9d
2022-03-04 12:49:59.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@28cda624
2022-03-04 12:49:59.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@28cda624
2022-03-04 12:49:59.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@126253fd
2022-03-04 12:49:59.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@5276d6ee
2022-03-04 12:49:59.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@5276d6ee
2022-03-04 12:49:59.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@5276d6ee
2022-03-04 12:49:59.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4dc27487
2022-03-04 12:49:59.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4dc27487
2022-03-04 12:49:59.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4dc27487
2022-03-04 12:49:59.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@6933b6c6
2022-03-04 12:49:59.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@1f9e9475
2022-03-04 12:49:59.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@1f9e9475
2022-03-04 12:49:59.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@1f9e9475
2022-03-04 12:49:59.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@14dd7b39
2022-03-04 12:49:59.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@14dd7b39
2022-03-04 12:49:59.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@14dd7b39
2022-03-04 12:49:59.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@51891008
2022-03-04 12:49:59.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@12591ac8
2022-03-04 12:49:59.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@f58853c
2022-03-04 12:49:59.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@f58853c
2022-03-04 12:49:59.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@700fb871
2022-03-04 12:49:59.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@503f91c3
2022-03-04 12:49:59.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@503f91c3
2022-03-04 12:49:59.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@2438dcd
2022-03-04 12:49:59.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2438dcd
2022-03-04 12:49:59.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@64b0598
2022-03-04 12:49:59.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@50029372
2022-03-04 12:49:59.428 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@7f2cfe3f
2022-03-04 12:49:59.428 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@2bdd8394
2022-03-04 12:49:59.428 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2bdd8394
2022-03-04 12:49:59.428 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2f01783a
2022-03-04 12:49:59.428 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@68878f6d
2022-03-04 12:49:59.428 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@41488b16
2022-03-04 12:49:59.428 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@a8ef162
2022-03-04 12:49:59.428 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2eea88a1
2022-03-04 12:49:59.428 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7ac296f6
2022-03-04 12:49:59.428 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7fd7a283
2022-03-04 12:49:59.428 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@22f59fa
2022-03-04 12:49:59.436 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-04 12:49:59.436 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-04 12:49:59.436 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-03-04 12:49:59.436 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-04 12:49:59.436 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-04 12:49:59.436 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-04 12:49:59.983 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.28
      major : 8
      minor : 0
2022-03-04 12:49:59.983 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.18 (Revision: fef2894d751d47223192b706977b4a5bc41e6be4)
      major : 8
      minor : 0
2022-03-04 12:49:59.983 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-03-04 12:49:59.983 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-03-04 12:49:59.999 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-03-04 12:50:00.019 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-03-04 12:50:00.019 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-03-04 12:50:00.039 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-03-04 12:50:00.039 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-03-04 12:50:00.039 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-04 12:50:00.039 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-04 12:50:00.039 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-03-04 12:50:00.039 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-03-04 12:50:00.039 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-03-04 12:50:00.039 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-04 12:50:00.039 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-03-04 12:50:00.039 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-03-04 12:50:00.047 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-03-04 12:50:00.047 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-03-04 12:50:00.047 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-04 12:50:00.047 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-03-04 12:50:00.055 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-03-04 12:50:00.072 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-03-04 12:50:00.072 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-03-04 12:50:00.088 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name TClients
2022-03-04 12:50:00.088 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-03-04 12:50:00.137 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-03-04 12:50:00.137 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-03-04 12:50:00.137 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-03-04 12:50:00.151 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-03-04 12:50:00.151 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-03-04 12:50:00.151 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-03-04 12:50:00.151 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures, insertable=true, updatable=true, unique=false}
2022-03-04 12:50:00.151 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-03-04 12:50:00.151 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-03-04 12:50:00.151 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures_KEY, insertable=true, updatable=true, unique=false}
2022-03-04 12:50:00.151 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='factures_KEY', referencedColumn='null', mappedBy='null'}
2022-03-04 12:50:00.151 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-03-04 12:50:00.151 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-03-04 12:50:00.151 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:386)] - Collection role: ma.cigma.pfe.models.Client.factures
2022-03-04 12:50:00.151 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property factures
2022-03-04 12:50:00.151 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-03-04 12:50:00.151 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property name with lazy=false
2022-03-04 12:50:00.151 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-03-04 12:50:00.151 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for name
2022-03-04 12:50:00.151 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property name
2022-03-04 12:50:00.151 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Facture
2022-03-04 12:50:00.151 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-03-04 12:50:00.151 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name Facture
2022-03-04 12:50:00.151 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Facture on table Facture
2022-03-04 12:50:00.151 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Facture), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-03-04 12:50:00.167 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-03-04 12:50:00.167 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:id]
2022-03-04 12:50:00.167 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-03-04 12:50:00.167 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-03-04 12:50:00.167 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Facture), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-03-04 12:50:00.167 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property amount with lazy=false
2022-03-04 12:50:00.167 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:amount]
2022-03-04 12:50:00.167 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for amount
2022-03-04 12:50:00.167 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property amount
2022-03-04 12:50:00.167 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Facture), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-03-04 12:50:00.167 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property description with lazy=false
2022-03-04 12:50:00.167 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:description]
2022-03-04 12:50:00.167 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for description
2022-03-04 12:50:00.167 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property description
2022-03-04 12:50:00.167 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-03-04 12:50:00.167 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for name
2022-03-04 12:50:00.167 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-03-04 12:50:00.167 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for amount
2022-03-04 12:50:00.167 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for description
2022-03-04 12:50:00.167 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-03-04 12:50:00.167 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [facture]
2022-03-04 12:50:00.167 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:51)] - Second pass for collection: ma.cigma.pfe.models.Client.factures
2022-03-04 12:50:00.167 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindManyToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindManyToManySecondPass(CollectionBinder.java:1155)] - Binding a OneToMany: ma.cigma.pfe.models.Client.factures through an association table
2022-03-04 12:50:00.167 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:68)] - Mapped collection key: TClients_id, element: factures_id
2022-03-04 12:50:00.167 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Facture
2022-03-04 12:50:00.167 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-03-04 12:50:00.167 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Facture
2022-03-04 12:50:00.167 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-03-04 12:50:00.182 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-03-04 12:50:00.182 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-03-04 12:50:00.182 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-03-04 12:50:00.182 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-03-04 12:50:00.182 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-03-04 12:50:00.182 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-03-04 12:50:00.182 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-03-04 12:50:00.182 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-03-04 12:50:00.182 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-03-04 12:50:00.182 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-03-04 12:50:00.182 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-03-04 12:50:00.182 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-03-04 12:50:00.182 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-03-04 12:50:00.182 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-03-04 12:50:00.182 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-03-04 12:50:00.182 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-03-04 12:50:00.182 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-03-04 12:50:00.182 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-03-04 12:50:00.182 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-03-04 12:50:00.198 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-03-04 12:50:00.199 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-03-04 12:50:00.199 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-03-04 12:50:00.199 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1827a871
2022-03-04 12:50:00.199 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-03-04 12:50:00.199 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-03-04 12:50:00.199 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-03-04 12:50:00.199 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-03-04 12:50:00.199 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-03-04 12:50:00.199 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-03-04 12:50:00.199 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-03-04 12:50:00.199 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-03-04 12:50:00.199 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-03-04 12:50:00.199 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-03-04 12:50:00.199 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-03-04 12:50:00.199 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-03-04 12:50:00.199 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-03-04 12:50:00.230 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-03-04 12:50:00.230 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-03-04 12:50:00.230 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.202-b08, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_202\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@13c612bd, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=AE, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Studies\JEEProjects\TP9, java.runtime.version=1.8.0_202-b08, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\endorsed, java.io.tmpdir=C:\Users\toubk\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_202\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\toubk\AppData\Local\Microsoft\WindowsApps;;., javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unitClients, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\toubk, user.timezone=Asia/Muscat, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=toubk, java.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;D:\Studies\JEEProjects\TP9\target\classes;C:\Users\toubk\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\toubk\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\toubk\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\toubk\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\toubk\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\toubk\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\toubk\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\toubk\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\toubk\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\toubk\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.2\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_202\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_202, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-03-04 12:50:00.238 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-03-04 12:50:00.246 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-03-04 12:50:00.272 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-04 12:50:00.272 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-04 12:50:00.317 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-04 12:50:00.317 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-04 12:50:00.333 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-03-04 12:50:00.333 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-03-04 12:50:00.333 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-03-04 12:50:00.333 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-03-04 12:50:00.349 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:664)] - Static SQL for collection: ma.cigma.pfe.models.Client.factures
2022-03-04 12:50:00.349 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:666)] -  Row insert: insert into TClients_Facture (TClients_id, factures_id) values (?, ?)
2022-03-04 12:50:00.349 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:669)] -  Row update: update TClients_Facture set factures_id=? where TClients_id=? and factures_id=?
2022-03-04 12:50:00.349 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:672)] -  Row delete: delete from TClients_Facture where TClients_id=? and factures_id=?
2022-03-04 12:50:00.349 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:675)] -  One-shot delete: delete from TClients_Facture where TClients_id=?
2022-03-04 12:50:00.349 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-03-04 12:50:00.349 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TClients where id =?
2022-03-04 12:50:00.349 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select client_.id, client_.name as name2_1_ from TClients client_ where client_.id=?
2022-03-04 12:50:00.349 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-03-04 12:50:00.349 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-03-04 12:50:00.349 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-03-04 12:50:00.349 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TClients (name) values (?)
2022-03-04 12:50:00.365 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49b07ee3]
2022-03-04 12:50:00.365 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 12:50:00.365 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 12:50:00.365 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:50:00.389 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:50:00.389 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 12:50:00.389 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-04 12:50:00.389 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22101c80]
2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [READ]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@759d81f3]
2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a4c638d]
2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_NOWAIT]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aed0151]
2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_SKIPLOCKED]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f12e153]
2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [FORCE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a101b1c]
2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_READ]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? lock in share mode
2022-03-04 12:50:00.397 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29f0802c]
2022-03-04 12:50:00.405 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 12:50:00.405 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 12:50:00.405 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:50:00.405 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:50:00.405 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 12:50:00.405 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_WRITE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 12:50:00.405 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60f2e0bd]
2022-03-04 12:50:00.405 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 12:50:00.405 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 12:50:00.405 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:50:00.405 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:50:00.405 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 12:50:00.405 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 12:50:00.405 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b410923]
2022-03-04 12:50:00.405 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 12:50:00.405 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 12:50:00.405 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:50:00.405 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:50:00.405 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 12:50:00.405 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-04 12:50:00.405 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@203dd56b]
2022-03-04 12:50:00.405 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 12:50:00.405 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 12:50:00.405 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:50:00.405 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:50:00.405 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 12:50:00.405 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-04 12:50:00.413 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Client: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-04 12:50:00.413 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Client: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-04 12:50:00.413 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Facture
2022-03-04 12:50:00.413 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from Facture where id =?
2022-03-04 12:50:00.413 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.description as descript3_0_ from Facture facture_ where facture_.id=?
2022-03-04 12:50:00.413 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into Facture (amount, description, id) values (?, ?, ?)
2022-03-04 12:50:00.421 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update Facture set amount=?, description=? where id=?
2022-03-04 12:50:00.421 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from Facture where id=?
2022-03-04 12:50:00.421 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into Facture (amount, description) values (?, ?)
2022-03-04 12:50:00.421 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ecd665]
2022-03-04 12:50:00.422 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 12:50:00.422 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 12:50:00.422 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:50:00.423 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:50:00.423 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 12:50:00.423 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-04 12:50:00.423 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ec7d8b3]
2022-03-04 12:50:00.423 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 12:50:00.423 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 12:50:00.423 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:50:00.423 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:50:00.423 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 12:50:00.423 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-04 12:50:00.423 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bb3131b]
2022-03-04 12:50:00.423 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 12:50:00.423 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 12:50:00.423 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:50:00.423 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:50:00.423 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 12:50:00.423 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-04 12:50:00.423 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74fef3f7]
2022-03-04 12:50:00.423 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 12:50:00.423 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 12:50:00.423 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:50:00.423 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:50:00.423 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 12:50:00.423 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_NOWAIT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-04 12:50:00.423 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69eb86b4]
2022-03-04 12:50:00.423 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 12:50:00.423 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 12:50:00.423 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:50:00.423 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:50:00.423 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 12:50:00.430 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_SKIPLOCKED]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-04 12:50:00.430 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bb8f9e2]
2022-03-04 12:50:00.430 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 12:50:00.430 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 12:50:00.430 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:50:00.430 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:50:00.430 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 12:50:00.430 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [FORCE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-04 12:50:00.430 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f78de22]
2022-03-04 12:50:00.430 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 12:50:00.430 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 12:50:00.430 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:50:00.430 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:50:00.430 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 12:50:00.430 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? lock in share mode
2022-03-04 12:50:00.430 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d8539de]
2022-03-04 12:50:00.430 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 12:50:00.430 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 12:50:00.430 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:50:00.430 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:50:00.430 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 12:50:00.430 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_WRITE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-04 12:50:00.430 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@272a179c]
2022-03-04 12:50:00.430 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 12:50:00.430 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 12:50:00.430 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:50:00.430 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:50:00.430 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 12:50:00.430 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-04 12:50:00.430 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67207d8a]
2022-03-04 12:50:00.437 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 12:50:00.437 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 12:50:00.437 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:50:00.437 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:50:00.437 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 12:50:00.437 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-04 12:50:00.437 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c2a69b4]
2022-03-04 12:50:00.437 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 12:50:00.437 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 12:50:00.437 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:50:00.437 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:50:00.437 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 12:50:00.437 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-04 12:50:00.437 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-04 12:50:00.437 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-04 12:50:00.437 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@720653c2]
2022-03-04 12:50:00.437 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4463d9d3]
2022-03-04 12:50:00.437 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 12:50:00.437 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 12:50:00.437 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:50:00.437 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:50:00.437 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.Client.factures)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.Client.factures])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.Client.factures].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.Client.factures)
          - SQL table alias mapping - factures0_
          - alias suffix - 0_
          - suffixed key columns - {TClients1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Facture)
                - SQL table alias mapping - facture1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2022-03-04 12:50:00.437 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:96)] - Static select for collection ma.cigma.pfe.models.Client.factures: select factures0_.TClients_id as TClients1_2_0_, factures0_.factures_id as factures2_2_0_, facture1_.id as id1_0_1_, facture1_.amount as amount2_0_1_, facture1_.description as descript3_0_1_ from TClients_Facture factures0_ inner join Facture facture1_ on factures0_.factures_id=facture1_.id where factures0_.TClients_id=?
2022-03-04 12:50:00.437 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-03-04 12:50:00.454 INFO [main][org.hibernate.tool.hbm2ddl.SchemaUpdate] [execute] [org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:101)] - HHH000228: Running hbm2ddl schema update
2022-03-04 12:50:00.482 INFO [main][org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl] [processGetTableResults] [org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processGetTableResults(InformationExtractorJdbcDatabaseMetaDataImpl.java:338)] - HHH000262: Table not found: Facture
2022-03-04 12:50:00.498 INFO [main][org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl] [processGetTableResults] [org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processGetTableResults(InformationExtractorJdbcDatabaseMetaDataImpl.java:338)] - HHH000262: Table not found: Facture
2022-03-04 12:50:00.531 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:505)] - No alter strings for table : TClients
2022-03-04 12:50:00.531 INFO [main][org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl] [processGetTableResults] [org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processGetTableResults(InformationExtractorJdbcDatabaseMetaDataImpl.java:338)] - HHH000262: Table not found: TClients_Facture
2022-03-04 12:50:00.546 INFO [main][org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl] [processGetTableResults] [org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processGetTableResults(InformationExtractorJdbcDatabaseMetaDataImpl.java:338)] - HHH000262: Table not found: TClients_Facture
2022-03-04 12:50:00.571 INFO [main][org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl] [processGetTableResults] [org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processGetTableResults(InformationExtractorJdbcDatabaseMetaDataImpl.java:338)] - HHH000262: Table not found: Facture
2022-03-04 12:50:00.573 INFO [main][org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl] [processGetTableResults] [org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processGetTableResults(InformationExtractorJdbcDatabaseMetaDataImpl.java:338)] - HHH000262: Table not found: Facture
2022-03-04 12:50:00.574 INFO [main][org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl] [processGetTableResults] [org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processGetTableResults(InformationExtractorJdbcDatabaseMetaDataImpl.java:338)] - HHH000262: Table not found: TClients_Facture
2022-03-04 12:50:00.574 INFO [main][org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl] [processGetTableResults] [org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processGetTableResults(InformationExtractorJdbcDatabaseMetaDataImpl.java:338)] - HHH000262: Table not found: TClients_Facture
2022-03-04 12:50:00.687 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-03-04 12:50:00.687 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-03-04 12:50:00.687 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-03-04 12:50:00.687 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-03-04 12:50:00.687 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-03-04 12:50:00.687 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1e6308a9
2022-03-04 12:50:00.687 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: 5a3b8b9e-0b43-427c-9250-0d8bd3912e0e (<unnamed>)
2022-03-04 12:50:00.687 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-03-04 12:50:00.687 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-03-04 12:50:00.720 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@2571066a
2022-03-04 12:50:00.720 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unitClients 
2022-03-04 12:50:00.764 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-03-04 12:50:29.989 DEBUG [pool-2-thread-1][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [validate] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.validate(PooledConnections.java:49)] - Connection pool now considered primed; min-size will be maintained
2022-03-04 12:51:13.078 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@77846d2c
2022-03-04 12:51:13.158 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-04 12:51:13.175 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-04 12:51:13.190 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'ServiceID'
2022-03-04 12:51:13.190 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'DaoID'
2022-03-04 12:51:13.205 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-04 12:51:13.228 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-04 12:51:13.262 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-04 12:51:13.262 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unitClients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unitClients]
2022-03-04 12:51:13.262 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unitClients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-04 12:51:13.278 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unitClients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP9/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: update
		javax.persistence.jdbc.user: root]
2022-03-04 12:51:13.278 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-04 12:51:13.278 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-04 12:51:13.278 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-04 12:51:13.278 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-04 12:51:13.329 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-04 12:51:13.329 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-04 12:51:13.329 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-04 12:51:13.329 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-04 12:51:13.345 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-04 12:51:13.363 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-04 12:51:13.404 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2022-03-04 12:51:13.404 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2022-03-04 12:51:13.404 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4082ba93
2022-03-04 12:51:13.404 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@43df23d3
2022-03-04 12:51:13.412 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@305ffe9e
2022-03-04 12:51:13.412 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@7ae0a9ec
2022-03-04 12:51:13.412 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@2a693f59
2022-03-04 12:51:13.412 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@2a693f59
2022-03-04 12:51:13.412 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2a693f59
2022-03-04 12:51:13.412 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@723ca036
2022-03-04 12:51:13.412 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@723ca036
2022-03-04 12:51:13.412 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@723ca036
2022-03-04 12:51:13.412 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@4d0d9fe7
2022-03-04 12:51:13.412 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@4d0d9fe7
2022-03-04 12:51:13.412 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d0d9fe7
2022-03-04 12:51:13.412 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@66982506
2022-03-04 12:51:13.412 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@66982506
2022-03-04 12:51:13.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@66982506
2022-03-04 12:51:13.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4f32a3ad
2022-03-04 12:51:13.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4f32a3ad
2022-03-04 12:51:13.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4f32a3ad
2022-03-04 12:51:13.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@673fdbce
2022-03-04 12:51:13.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@673fdbce
2022-03-04 12:51:13.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@673fdbce
2022-03-04 12:51:13.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@3de8f619
2022-03-04 12:51:13.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@3de8f619
2022-03-04 12:51:13.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3de8f619
2022-03-04 12:51:13.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6f204a1a
2022-03-04 12:51:13.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6f204a1a
2022-03-04 12:51:13.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3cce5371
2022-03-04 12:51:13.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3cce5371
2022-03-04 12:51:13.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@338fc1d8
2022-03-04 12:51:13.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@338fc1d8
2022-03-04 12:51:13.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@480d3575
2022-03-04 12:51:13.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@65f8f5ae
2022-03-04 12:51:13.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@5c7933ad
2022-03-04 12:51:13.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5c7933ad
2022-03-04 12:51:13.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@33ecda92
2022-03-04 12:51:13.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@33ecda92
2022-03-04 12:51:13.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@55de24cc
2022-03-04 12:51:13.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@55de24cc
2022-03-04 12:51:13.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@25df00a0
2022-03-04 12:51:13.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@25df00a0
2022-03-04 12:51:13.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@25df00a0
2022-03-04 12:51:13.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5884a914
2022-03-04 12:51:13.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@1a4927d6
2022-03-04 12:51:13.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1a4927d6
2022-03-04 12:51:13.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1a4927d6
2022-03-04 12:51:13.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@97e93f1
2022-03-04 12:51:13.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@624ea235
2022-03-04 12:51:13.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@624ea235
2022-03-04 12:51:13.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@1b1cfb87
2022-03-04 12:51:13.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1b1cfb87
2022-03-04 12:51:13.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@20b2475a
2022-03-04 12:51:13.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@20b2475a
2022-03-04 12:51:13.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@58e1d9d
2022-03-04 12:51:13.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@58e1d9d
2022-03-04 12:51:13.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@28cda624
2022-03-04 12:51:13.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@28cda624
2022-03-04 12:51:13.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@126253fd
2022-03-04 12:51:13.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@5276d6ee
2022-03-04 12:51:13.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@5276d6ee
2022-03-04 12:51:13.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@5276d6ee
2022-03-04 12:51:13.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4dc27487
2022-03-04 12:51:13.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4dc27487
2022-03-04 12:51:13.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4dc27487
2022-03-04 12:51:13.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@6933b6c6
2022-03-04 12:51:13.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@1f9e9475
2022-03-04 12:51:13.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@1f9e9475
2022-03-04 12:51:13.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@1f9e9475
2022-03-04 12:51:13.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@14dd7b39
2022-03-04 12:51:13.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@14dd7b39
2022-03-04 12:51:13.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@14dd7b39
2022-03-04 12:51:13.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@51891008
2022-03-04 12:51:13.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@12591ac8
2022-03-04 12:51:13.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@f58853c
2022-03-04 12:51:13.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@f58853c
2022-03-04 12:51:13.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@700fb871
2022-03-04 12:51:13.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@503f91c3
2022-03-04 12:51:13.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@503f91c3
2022-03-04 12:51:13.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@2438dcd
2022-03-04 12:51:13.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2438dcd
2022-03-04 12:51:13.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@64b0598
2022-03-04 12:51:13.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@50029372
2022-03-04 12:51:13.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@7f2cfe3f
2022-03-04 12:51:13.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@2bdd8394
2022-03-04 12:51:13.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2bdd8394
2022-03-04 12:51:13.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2f01783a
2022-03-04 12:51:13.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@68878f6d
2022-03-04 12:51:13.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@41488b16
2022-03-04 12:51:13.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@a8ef162
2022-03-04 12:51:13.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2eea88a1
2022-03-04 12:51:13.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7ac296f6
2022-03-04 12:51:13.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7fd7a283
2022-03-04 12:51:13.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@22f59fa
2022-03-04 12:51:13.469 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-04 12:51:13.469 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-04 12:51:13.469 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-03-04 12:51:13.469 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-04 12:51:13.469 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-04 12:51:13.469 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-04 12:51:13.974 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.28
      major : 8
      minor : 0
2022-03-04 12:51:13.974 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.18 (Revision: fef2894d751d47223192b706977b4a5bc41e6be4)
      major : 8
      minor : 0
2022-03-04 12:51:13.974 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-03-04 12:51:13.974 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-03-04 12:51:13.989 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-03-04 12:51:14.006 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-03-04 12:51:14.006 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-03-04 12:51:14.021 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-03-04 12:51:14.021 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-03-04 12:51:14.021 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-04 12:51:14.021 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-04 12:51:14.021 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-03-04 12:51:14.021 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-03-04 12:51:14.021 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-03-04 12:51:14.021 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-04 12:51:14.021 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-03-04 12:51:14.021 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-03-04 12:51:14.021 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-03-04 12:51:14.021 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-03-04 12:51:14.021 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-04 12:51:14.021 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-03-04 12:51:14.037 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-03-04 12:51:14.053 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-03-04 12:51:14.053 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-03-04 12:51:14.071 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name TClients
2022-03-04 12:51:14.075 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-03-04 12:51:14.089 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-03-04 12:51:14.091 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-03-04 12:51:14.092 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-03-04 12:51:14.093 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-03-04 12:51:14.095 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-03-04 12:51:14.098 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-03-04 12:51:14.098 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures, insertable=true, updatable=true, unique=false}
2022-03-04 12:51:14.099 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-03-04 12:51:14.104 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-03-04 12:51:14.104 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures_KEY, insertable=true, updatable=true, unique=false}
2022-03-04 12:51:14.104 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='factures_KEY', referencedColumn='null', mappedBy='null'}
2022-03-04 12:51:14.105 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-03-04 12:51:14.105 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-03-04 12:51:14.105 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:386)] - Collection role: ma.cigma.pfe.models.Client.factures
2022-03-04 12:51:14.105 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property factures
2022-03-04 12:51:14.105 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-03-04 12:51:14.105 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property name with lazy=false
2022-03-04 12:51:14.105 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-03-04 12:51:14.105 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for name
2022-03-04 12:51:14.105 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property name
2022-03-04 12:51:14.105 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Facture
2022-03-04 12:51:14.105 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-03-04 12:51:14.111 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name Facture
2022-03-04 12:51:14.111 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Facture on table Facture
2022-03-04 12:51:14.111 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Facture), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-03-04 12:51:14.111 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-03-04 12:51:14.111 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:id]
2022-03-04 12:51:14.111 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-03-04 12:51:14.111 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-03-04 12:51:14.111 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Facture), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-03-04 12:51:14.111 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property amount with lazy=false
2022-03-04 12:51:14.111 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:amount]
2022-03-04 12:51:14.111 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for amount
2022-03-04 12:51:14.111 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property amount
2022-03-04 12:51:14.111 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Facture), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-03-04 12:51:14.111 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property description with lazy=false
2022-03-04 12:51:14.111 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:description]
2022-03-04 12:51:14.111 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for description
2022-03-04 12:51:14.111 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property description
2022-03-04 12:51:14.111 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-03-04 12:51:14.111 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for name
2022-03-04 12:51:14.111 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-03-04 12:51:14.111 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for amount
2022-03-04 12:51:14.111 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for description
2022-03-04 12:51:14.111 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-03-04 12:51:14.111 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [facture]
2022-03-04 12:51:14.111 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:51)] - Second pass for collection: ma.cigma.pfe.models.Client.factures
2022-03-04 12:51:14.111 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindManyToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindManyToManySecondPass(CollectionBinder.java:1155)] - Binding a OneToMany: ma.cigma.pfe.models.Client.factures through an association table
2022-03-04 12:51:14.111 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:68)] - Mapped collection key: TClients_id, element: factures_id
2022-03-04 12:51:14.111 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Facture
2022-03-04 12:51:14.111 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-03-04 12:51:14.111 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Facture
2022-03-04 12:51:14.111 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-03-04 12:51:14.127 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-03-04 12:51:14.127 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-03-04 12:51:14.127 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-03-04 12:51:14.127 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-03-04 12:51:14.127 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-03-04 12:51:14.127 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-03-04 12:51:14.127 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-03-04 12:51:14.127 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-03-04 12:51:14.127 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-03-04 12:51:14.127 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-03-04 12:51:14.127 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-03-04 12:51:14.127 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-03-04 12:51:14.127 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-03-04 12:51:14.127 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-03-04 12:51:14.127 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-03-04 12:51:14.127 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-03-04 12:51:14.127 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-03-04 12:51:14.127 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-03-04 12:51:14.127 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-03-04 12:51:14.127 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-03-04 12:51:14.127 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-03-04 12:51:14.127 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-03-04 12:51:14.127 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1827a871
2022-03-04 12:51:14.127 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-03-04 12:51:14.127 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-03-04 12:51:14.127 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-03-04 12:51:14.127 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-03-04 12:51:14.127 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-03-04 12:51:14.127 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-03-04 12:51:14.127 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-03-04 12:51:14.127 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-03-04 12:51:14.127 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-03-04 12:51:14.127 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-03-04 12:51:14.127 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-03-04 12:51:14.127 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-03-04 12:51:14.127 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-03-04 12:51:14.158 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-03-04 12:51:14.158 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-03-04 12:51:14.158 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.202-b08, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_202\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@13c612bd, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=AE, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Studies\JEEProjects\TP9, java.runtime.version=1.8.0_202-b08, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\endorsed, java.io.tmpdir=C:\Users\toubk\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_202\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\toubk\AppData\Local\Microsoft\WindowsApps;;., javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unitClients, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\toubk, user.timezone=Asia/Muscat, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=toubk, java.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;D:\Studies\JEEProjects\TP9\target\classes;C:\Users\toubk\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\toubk\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\toubk\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\toubk\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\toubk\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\toubk\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\toubk\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\toubk\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\toubk\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\toubk\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.2\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_202\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_202, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-03-04 12:51:14.158 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-03-04 12:51:14.158 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-03-04 12:51:14.191 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-04 12:51:14.191 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-04 12:51:14.191 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-04 12:51:14.191 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-04 12:51:14.222 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-03-04 12:51:14.222 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-03-04 12:51:14.222 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-03-04 12:51:14.222 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-03-04 12:51:14.222 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:664)] - Static SQL for collection: ma.cigma.pfe.models.Client.factures
2022-03-04 12:51:14.222 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:666)] -  Row insert: insert into TClients_Facture (TClients_id, factures_id) values (?, ?)
2022-03-04 12:51:14.222 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:669)] -  Row update: update TClients_Facture set factures_id=? where TClients_id=? and factures_id=?
2022-03-04 12:51:14.222 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:672)] -  Row delete: delete from TClients_Facture where TClients_id=? and factures_id=?
2022-03-04 12:51:14.222 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:675)] -  One-shot delete: delete from TClients_Facture where TClients_id=?
2022-03-04 12:51:14.222 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-03-04 12:51:14.222 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TClients where id =?
2022-03-04 12:51:14.222 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select client_.id, client_.name as name2_1_ from TClients client_ where client_.id=?
2022-03-04 12:51:14.222 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-03-04 12:51:14.222 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-03-04 12:51:14.222 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-03-04 12:51:14.238 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TClients (name) values (?)
2022-03-04 12:51:14.244 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49b07ee3]
2022-03-04 12:51:14.244 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 12:51:14.253 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 12:51:14.253 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:51:14.269 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:51:14.269 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 12:51:14.269 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-04 12:51:14.269 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22101c80]
2022-03-04 12:51:14.269 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 12:51:14.269 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 12:51:14.269 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:51:14.269 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:51:14.269 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [READ]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@759d81f3]
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a4c638d]
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_NOWAIT]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aed0151]
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_SKIPLOCKED]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f12e153]
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [FORCE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a101b1c]
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_READ]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? lock in share mode
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29f0802c]
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_WRITE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60f2e0bd]
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b410923]
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@203dd56b]
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 12:51:14.278 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-04 12:51:14.294 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Client: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-04 12:51:14.294 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Client: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-04 12:51:14.294 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Facture
2022-03-04 12:51:14.294 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from Facture where id =?
2022-03-04 12:51:14.294 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.description as descript3_0_ from Facture facture_ where facture_.id=?
2022-03-04 12:51:14.294 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into Facture (amount, description, id) values (?, ?, ?)
2022-03-04 12:51:14.294 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update Facture set amount=?, description=? where id=?
2022-03-04 12:51:14.294 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from Facture where id=?
2022-03-04 12:51:14.294 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into Facture (amount, description) values (?, ?)
2022-03-04 12:51:14.294 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ecd665]
2022-03-04 12:51:14.294 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 12:51:14.294 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 12:51:14.294 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:51:14.294 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:51:14.294 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 12:51:14.304 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-04 12:51:14.304 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ec7d8b3]
2022-03-04 12:51:14.304 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 12:51:14.304 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 12:51:14.304 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:51:14.304 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:51:14.304 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 12:51:14.304 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-04 12:51:14.304 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bb3131b]
2022-03-04 12:51:14.304 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 12:51:14.304 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 12:51:14.304 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:51:14.304 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:51:14.304 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 12:51:14.304 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-04 12:51:14.304 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74fef3f7]
2022-03-04 12:51:14.304 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 12:51:14.304 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 12:51:14.304 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:51:14.304 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:51:14.304 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 12:51:14.304 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_NOWAIT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-04 12:51:14.304 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69eb86b4]
2022-03-04 12:51:14.304 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 12:51:14.304 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 12:51:14.304 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:51:14.304 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:51:14.304 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 12:51:14.304 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_SKIPLOCKED]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-04 12:51:14.304 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bb8f9e2]
2022-03-04 12:51:14.304 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 12:51:14.309 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 12:51:14.309 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [FORCE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f78de22]
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? lock in share mode
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d8539de]
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_WRITE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@272a179c]
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67207d8a]
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c2a69b4]
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@720653c2]
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4463d9d3]
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 12:51:14.310 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:51:14.325 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:51:14.325 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.Client.factures)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.Client.factures])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.Client.factures].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.Client.factures)
          - SQL table alias mapping - factures0_
          - alias suffix - 0_
          - suffixed key columns - {TClients1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Facture)
                - SQL table alias mapping - facture1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2022-03-04 12:51:14.325 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:96)] - Static select for collection ma.cigma.pfe.models.Client.factures: select factures0_.TClients_id as TClients1_2_0_, factures0_.factures_id as factures2_2_0_, facture1_.id as id1_0_1_, facture1_.amount as amount2_0_1_, facture1_.description as descript3_0_1_ from TClients_Facture factures0_ inner join Facture facture1_ on factures0_.factures_id=facture1_.id where factures0_.TClients_id=?
2022-03-04 12:51:14.325 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-03-04 12:51:14.325 INFO [main][org.hibernate.tool.hbm2ddl.SchemaUpdate] [execute] [org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:101)] - HHH000228: Running hbm2ddl schema update
2022-03-04 12:51:14.417 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:505)] - No alter strings for table : Facture
2022-03-04 12:51:14.428 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:505)] - No alter strings for table : TClients
2022-03-04 12:51:14.436 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:505)] - No alter strings for table : TClients_Facture
2022-03-04 12:51:14.478 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-03-04 12:51:14.478 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-03-04 12:51:14.478 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-03-04 12:51:14.478 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-03-04 12:51:14.478 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-03-04 12:51:14.494 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3a095ec0
2022-03-04 12:51:14.494 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: 39301f8a-07fe-442d-bc49-3118dfbdb472 (<unnamed>)
2022-03-04 12:51:14.494 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-03-04 12:51:14.494 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-03-04 12:51:14.510 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@3a4ba480
2022-03-04 12:51:14.510 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unitClients 
2022-03-04 12:51:14.542 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-03-04 12:51:43.985 DEBUG [pool-2-thread-1][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [validate] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.validate(PooledConnections.java:49)] - Connection pool now considered primed; min-size will be maintained
2022-03-04 12:52:47.892 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c762604
2022-03-04 12:52:47.964 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-04 12:52:47.984 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-04 12:52:47.984 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'ServiceID'
2022-03-04 12:52:48.000 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'DaoID'
2022-03-04 12:52:48.000 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-04 12:52:48.032 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-04 12:52:48.084 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-04 12:52:48.084 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unitClients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unitClients]
2022-03-04 12:52:48.084 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unitClients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-04 12:52:48.084 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unitClients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP9/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: update
		javax.persistence.jdbc.user: root]
2022-03-04 12:52:48.084 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-04 12:52:48.084 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-04 12:52:48.084 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-04 12:52:48.099 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-04 12:52:48.142 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-04 12:52:48.143 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-04 12:52:48.143 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-04 12:52:48.150 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-04 12:52:48.166 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-04 12:52:48.166 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-04 12:52:48.214 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2b30a42c
2022-03-04 12:52:48.214 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2b30a42c
2022-03-04 12:52:48.214 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2b30a42c
2022-03-04 12:52:48.217 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@792b749c
2022-03-04 12:52:48.217 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1972e513
2022-03-04 12:52:48.217 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@61c4eee0
2022-03-04 12:52:48.217 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@7fd50002
2022-03-04 12:52:48.217 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@7fd50002
2022-03-04 12:52:48.217 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7fd50002
2022-03-04 12:52:48.217 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@28dcca0c
2022-03-04 12:52:48.217 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@28dcca0c
2022-03-04 12:52:48.217 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@28dcca0c
2022-03-04 12:52:48.217 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@312aa7c
2022-03-04 12:52:48.217 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@312aa7c
2022-03-04 12:52:48.217 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@312aa7c
2022-03-04 12:52:48.217 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@5a59ca5e
2022-03-04 12:52:48.217 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@5a59ca5e
2022-03-04 12:52:48.217 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5a59ca5e
2022-03-04 12:52:48.225 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4d1bf319
2022-03-04 12:52:48.225 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4d1bf319
2022-03-04 12:52:48.225 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4d1bf319
2022-03-04 12:52:48.225 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@7a5ceedd
2022-03-04 12:52:48.225 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@7a5ceedd
2022-03-04 12:52:48.225 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7a5ceedd
2022-03-04 12:52:48.225 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@4e5ed836
2022-03-04 12:52:48.225 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@4e5ed836
2022-03-04 12:52:48.225 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4e5ed836
2022-03-04 12:52:48.225 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5f8e8a9d
2022-03-04 12:52:48.225 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5f8e8a9d
2022-03-04 12:52:48.225 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6e535154
2022-03-04 12:52:48.225 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6e535154
2022-03-04 12:52:48.225 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@48e1f6c7
2022-03-04 12:52:48.225 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@48e1f6c7
2022-03-04 12:52:48.225 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@194fad1
2022-03-04 12:52:48.225 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@38467116
2022-03-04 12:52:48.225 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@5fb759d6
2022-03-04 12:52:48.225 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5fb759d6
2022-03-04 12:52:48.225 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@6e2829c7
2022-03-04 12:52:48.233 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6e2829c7
2022-03-04 12:52:48.233 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@30f842ca
2022-03-04 12:52:48.233 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@30f842ca
2022-03-04 12:52:48.233 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@7b4c50bc
2022-03-04 12:52:48.233 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7b4c50bc
2022-03-04 12:52:48.233 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7b4c50bc
2022-03-04 12:52:48.233 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@60f00693
2022-03-04 12:52:48.233 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@aba625
2022-03-04 12:52:48.233 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@aba625
2022-03-04 12:52:48.233 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@aba625
2022-03-04 12:52:48.233 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4b520ea8
2022-03-04 12:52:48.233 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@782859e
2022-03-04 12:52:48.241 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@782859e
2022-03-04 12:52:48.241 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@6f43c82
2022-03-04 12:52:48.241 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6f43c82
2022-03-04 12:52:48.241 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f15d60e
2022-03-04 12:52:48.241 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f15d60e
2022-03-04 12:52:48.241 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@4f0f2942
2022-03-04 12:52:48.241 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4f0f2942
2022-03-04 12:52:48.241 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7eecb5b8
2022-03-04 12:52:48.241 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7eecb5b8
2022-03-04 12:52:48.241 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@475c9c31
2022-03-04 12:52:48.241 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@1807f5a7
2022-03-04 12:52:48.241 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@1807f5a7
2022-03-04 12:52:48.241 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@1807f5a7
2022-03-04 12:52:48.241 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7dfd3c81
2022-03-04 12:52:48.241 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7dfd3c81
2022-03-04 12:52:48.241 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7dfd3c81
2022-03-04 12:52:48.241 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@7dfb0c0f
2022-03-04 12:52:48.241 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@d23e042
2022-03-04 12:52:48.249 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@d23e042
2022-03-04 12:52:48.249 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@d23e042
2022-03-04 12:52:48.253 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6cd24612
2022-03-04 12:52:48.253 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6cd24612
2022-03-04 12:52:48.253 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6cd24612
2022-03-04 12:52:48.253 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@f68f0dc
2022-03-04 12:52:48.253 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@38145825
2022-03-04 12:52:48.253 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@29f7cefd
2022-03-04 12:52:48.253 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@29f7cefd
2022-03-04 12:52:48.253 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@9816741
2022-03-04 12:52:48.253 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@2235eaab
2022-03-04 12:52:48.253 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2235eaab
2022-03-04 12:52:48.253 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@5167f57d
2022-03-04 12:52:48.253 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5167f57d
2022-03-04 12:52:48.253 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3e2055d6
2022-03-04 12:52:48.253 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@50f6ac94
2022-03-04 12:52:48.253 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@5038d0b5
2022-03-04 12:52:48.269 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@68746f22
2022-03-04 12:52:48.269 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@68746f22
2022-03-04 12:52:48.269 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@41488b16
2022-03-04 12:52:48.269 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@a8ef162
2022-03-04 12:52:48.269 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2eea88a1
2022-03-04 12:52:48.269 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7ac296f6
2022-03-04 12:52:48.269 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7fd7a283
2022-03-04 12:52:48.269 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@22f59fa
2022-03-04 12:52:48.269 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@78fa769e
2022-03-04 12:52:48.269 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@16612a51
2022-03-04 12:52:48.269 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-04 12:52:48.269 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-04 12:52:48.269 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-03-04 12:52:48.269 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-04 12:52:48.269 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-04 12:52:48.269 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-04 12:52:48.782 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.28
      major : 8
      minor : 0
2022-03-04 12:52:48.782 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.18 (Revision: fef2894d751d47223192b706977b4a5bc41e6be4)
      major : 8
      minor : 0
2022-03-04 12:52:48.783 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-03-04 12:52:48.783 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-03-04 12:52:48.783 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-03-04 12:52:48.802 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-03-04 12:52:48.802 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-03-04 12:52:48.815 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-03-04 12:52:48.815 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-03-04 12:52:48.815 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-04 12:52:48.815 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-04 12:52:48.815 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-03-04 12:52:48.815 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-03-04 12:52:48.831 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-03-04 12:52:48.831 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-04 12:52:48.831 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-03-04 12:52:48.831 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-03-04 12:52:48.831 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-03-04 12:52:48.831 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-03-04 12:52:48.831 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-04 12:52:48.831 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-03-04 12:52:48.846 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-03-04 12:52:48.846 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-03-04 12:52:48.862 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-03-04 12:52:48.862 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name TClients
2022-03-04 12:52:48.862 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-03-04 12:52:48.878 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-03-04 12:52:48.878 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-03-04 12:52:48.878 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-03-04 12:52:48.878 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-03-04 12:52:48.878 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-03-04 12:52:48.878 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-03-04 12:52:48.878 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures, insertable=true, updatable=true, unique=false}
2022-03-04 12:52:48.894 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-03-04 12:52:48.894 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-03-04 12:52:48.902 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures_KEY, insertable=true, updatable=true, unique=false}
2022-03-04 12:52:48.902 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='factures_KEY', referencedColumn='null', mappedBy='null'}
2022-03-04 12:52:48.902 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-03-04 12:52:48.902 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-03-04 12:52:48.902 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:386)] - Collection role: ma.cigma.pfe.models.Client.factures
2022-03-04 12:52:48.902 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property factures
2022-03-04 12:52:48.902 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-03-04 12:52:48.902 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property name with lazy=false
2022-03-04 12:52:48.902 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-03-04 12:52:48.902 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for name
2022-03-04 12:52:48.902 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property name
2022-03-04 12:52:48.902 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Facture
2022-03-04 12:52:48.902 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-03-04 12:52:48.902 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name Facture
2022-03-04 12:52:48.902 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Facture on table Facture
2022-03-04 12:52:48.902 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Facture), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-03-04 12:52:48.902 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-03-04 12:52:48.902 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:id]
2022-03-04 12:52:48.902 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-03-04 12:52:48.902 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-03-04 12:52:48.902 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Facture), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-03-04 12:52:48.902 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property amount with lazy=false
2022-03-04 12:52:48.902 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:amount]
2022-03-04 12:52:48.902 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for amount
2022-03-04 12:52:48.902 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property amount
2022-03-04 12:52:48.902 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Facture), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-03-04 12:52:48.902 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property description with lazy=false
2022-03-04 12:52:48.902 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:description]
2022-03-04 12:52:48.902 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for description
2022-03-04 12:52:48.902 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property description
2022-03-04 12:52:48.902 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-03-04 12:52:48.902 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for name
2022-03-04 12:52:48.902 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-03-04 12:52:48.902 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for amount
2022-03-04 12:52:48.902 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for description
2022-03-04 12:52:48.910 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-03-04 12:52:48.910 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [facture]
2022-03-04 12:52:48.910 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:51)] - Second pass for collection: ma.cigma.pfe.models.Client.factures
2022-03-04 12:52:48.910 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindManyToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindManyToManySecondPass(CollectionBinder.java:1155)] - Binding a OneToMany: ma.cigma.pfe.models.Client.factures through an association table
2022-03-04 12:52:48.910 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:68)] - Mapped collection key: TClients_id, element: factures_id
2022-03-04 12:52:48.916 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Facture
2022-03-04 12:52:48.916 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-03-04 12:52:48.916 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Facture
2022-03-04 12:52:48.916 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-03-04 12:52:48.924 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-03-04 12:52:48.924 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-03-04 12:52:48.924 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-03-04 12:52:48.924 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-03-04 12:52:48.924 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-03-04 12:52:48.924 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-03-04 12:52:48.924 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-03-04 12:52:48.924 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-03-04 12:52:48.932 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-03-04 12:52:48.932 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-03-04 12:52:48.932 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-03-04 12:52:48.932 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-03-04 12:52:48.932 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-03-04 12:52:48.932 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-03-04 12:52:48.932 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-03-04 12:52:48.932 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-03-04 12:52:48.932 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-03-04 12:52:48.932 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-03-04 12:52:48.932 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-03-04 12:52:48.932 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-03-04 12:52:48.932 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-03-04 12:52:48.932 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-03-04 12:52:48.932 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7249dadf
2022-03-04 12:52:48.932 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-03-04 12:52:48.932 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-03-04 12:52:48.932 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-03-04 12:52:48.932 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-03-04 12:52:48.932 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-03-04 12:52:48.932 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-03-04 12:52:48.932 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-03-04 12:52:48.932 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-03-04 12:52:48.932 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-03-04 12:52:48.932 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-03-04 12:52:48.932 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-03-04 12:52:48.932 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-03-04 12:52:48.932 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-03-04 12:52:48.949 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-03-04 12:52:48.949 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-03-04 12:52:48.949 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.202-b08, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_202\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6b739528, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=AE, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Studies\JEEProjects\TP9, java.runtime.version=1.8.0_202-b08, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\endorsed, java.io.tmpdir=C:\Users\toubk\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_202\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\toubk\AppData\Local\Microsoft\WindowsApps;;., javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unitClients, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\toubk, user.timezone=Asia/Muscat, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=toubk, java.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;D:\Studies\JEEProjects\TP9\target\classes;C:\Users\toubk\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\toubk\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\toubk\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\toubk\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\toubk\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\toubk\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\toubk\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\toubk\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\toubk\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\toubk\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.2\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_202\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_202, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-03-04 12:52:48.965 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-03-04 12:52:48.965 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-03-04 12:52:49.002 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-04 12:52:49.002 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-04 12:52:49.015 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-04 12:52:49.015 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-04 12:52:49.031 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-03-04 12:52:49.031 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-03-04 12:52:49.031 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-03-04 12:52:49.031 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-03-04 12:52:49.047 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:664)] - Static SQL for collection: ma.cigma.pfe.models.Client.factures
2022-03-04 12:52:49.047 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:666)] -  Row insert: insert into TClients_Facture (TClients_id, factures_id) values (?, ?)
2022-03-04 12:52:49.047 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:669)] -  Row update: update TClients_Facture set factures_id=? where TClients_id=? and factures_id=?
2022-03-04 12:52:49.047 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:672)] -  Row delete: delete from TClients_Facture where TClients_id=? and factures_id=?
2022-03-04 12:52:49.047 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:675)] -  One-shot delete: delete from TClients_Facture where TClients_id=?
2022-03-04 12:52:49.047 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-03-04 12:52:49.047 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TClients where id =?
2022-03-04 12:52:49.047 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select client_.id, client_.name as name2_1_ from TClients client_ where client_.id=?
2022-03-04 12:52:49.047 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-03-04 12:52:49.047 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-03-04 12:52:49.047 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-03-04 12:52:49.047 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TClients (name) values (?)
2022-03-04 12:52:49.062 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65f00478]
2022-03-04 12:52:49.062 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 12:52:49.062 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 12:52:49.062 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@759d81f3]
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [READ]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a4c638d]
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aed0151]
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_NOWAIT]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f12e153]
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_SKIPLOCKED]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a101b1c]
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [FORCE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29f0802c]
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_READ]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? lock in share mode
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60f2e0bd]
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 12:52:49.079 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_WRITE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 12:52:49.094 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b410923]
2022-03-04 12:52:49.094 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 12:52:49.094 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 12:52:49.094 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:52:49.094 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:52:49.094 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 12:52:49.094 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 12:52:49.094 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@203dd56b]
2022-03-04 12:52:49.094 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 12:52:49.094 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 12:52:49.094 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:52:49.094 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:52:49.094 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 12:52:49.094 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-04 12:52:49.094 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d64b553]
2022-03-04 12:52:49.094 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 12:52:49.094 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 12:52:49.094 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:52:49.094 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:52:49.094 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 12:52:49.094 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-04 12:52:49.103 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Client: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-04 12:52:49.103 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Client: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-04 12:52:49.103 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Facture
2022-03-04 12:52:49.103 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from Facture where id =?
2022-03-04 12:52:49.103 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.description as descript3_0_ from Facture facture_ where facture_.id=?
2022-03-04 12:52:49.103 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into Facture (amount, description, id) values (?, ?, ?)
2022-03-04 12:52:49.103 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update Facture set amount=?, description=? where id=?
2022-03-04 12:52:49.103 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from Facture where id=?
2022-03-04 12:52:49.103 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into Facture (amount, description) values (?, ?)
2022-03-04 12:52:49.103 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ec7d8b3]
2022-03-04 12:52:49.103 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 12:52:49.111 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 12:52:49.111 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:52:49.111 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:52:49.111 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 12:52:49.111 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-04 12:52:49.112 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bb3131b]
2022-03-04 12:52:49.112 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 12:52:49.112 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 12:52:49.112 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:52:49.112 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:52:49.113 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 12:52:49.113 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-04 12:52:49.113 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74fef3f7]
2022-03-04 12:52:49.113 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 12:52:49.114 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 12:52:49.114 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:52:49.114 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:52:49.114 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 12:52:49.114 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-04 12:52:49.115 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69eb86b4]
2022-03-04 12:52:49.115 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 12:52:49.115 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 12:52:49.115 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:52:49.115 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:52:49.115 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 12:52:49.116 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_NOWAIT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-04 12:52:49.116 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bb8f9e2]
2022-03-04 12:52:49.116 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 12:52:49.116 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 12:52:49.116 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:52:49.116 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:52:49.118 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 12:52:49.118 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_SKIPLOCKED]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-04 12:52:49.118 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f78de22]
2022-03-04 12:52:49.118 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 12:52:49.119 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 12:52:49.119 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:52:49.119 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:52:49.119 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 12:52:49.119 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [FORCE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-04 12:52:49.119 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d8539de]
2022-03-04 12:52:49.120 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 12:52:49.120 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 12:52:49.120 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:52:49.120 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:52:49.120 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 12:52:49.120 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? lock in share mode
2022-03-04 12:52:49.121 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@272a179c]
2022-03-04 12:52:49.121 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 12:52:49.121 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 12:52:49.121 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:52:49.121 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:52:49.121 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 12:52:49.121 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_WRITE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-04 12:52:49.122 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67207d8a]
2022-03-04 12:52:49.122 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 12:52:49.122 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 12:52:49.122 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:52:49.122 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:52:49.122 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 12:52:49.122 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-04 12:52:49.123 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c2a69b4]
2022-03-04 12:52:49.123 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 12:52:49.123 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 12:52:49.123 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:52:49.123 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:52:49.124 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 12:52:49.124 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-04 12:52:49.124 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@648ee871]
2022-03-04 12:52:49.124 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 12:52:49.124 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 12:52:49.124 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:52:49.125 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:52:49.125 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 12:52:49.125 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-04 12:52:49.125 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-04 12:52:49.126 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-04 12:52:49.129 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ad5923a]
2022-03-04 12:52:49.129 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5395ea39]
2022-03-04 12:52:49.131 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 12:52:49.131 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 12:52:49.132 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 12:52:49.133 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 12:52:49.133 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.Client.factures)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.Client.factures])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.Client.factures].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.Client.factures)
          - SQL table alias mapping - factures0_
          - alias suffix - 0_
          - suffixed key columns - {TClients1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Facture)
                - SQL table alias mapping - facture1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2022-03-04 12:52:49.134 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:96)] - Static select for collection ma.cigma.pfe.models.Client.factures: select factures0_.TClients_id as TClients1_2_0_, factures0_.factures_id as factures2_2_0_, facture1_.id as id1_0_1_, facture1_.amount as amount2_0_1_, facture1_.description as descript3_0_1_ from TClients_Facture factures0_ inner join Facture facture1_ on factures0_.factures_id=facture1_.id where factures0_.TClients_id=?
2022-03-04 12:52:49.134 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-03-04 12:52:49.135 INFO [main][org.hibernate.tool.hbm2ddl.SchemaUpdate] [execute] [org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:101)] - HHH000228: Running hbm2ddl schema update
2022-03-04 12:52:49.190 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:505)] - No alter strings for table : Facture
2022-03-04 12:52:49.190 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:505)] - No alter strings for table : TClients
2022-03-04 12:52:49.206 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:505)] - No alter strings for table : TClients_Facture
2022-03-04 12:52:49.254 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-03-04 12:52:49.254 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-03-04 12:52:49.254 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-03-04 12:52:49.254 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-03-04 12:52:49.254 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-03-04 12:52:49.254 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@54da32dc
2022-03-04 12:52:49.254 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: 09cfa1df-ad23-4536-a65b-83d2173c1a1f (<unnamed>)
2022-03-04 12:52:49.254 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-03-04 12:52:49.254 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-03-04 12:52:49.275 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@383790cf
2022-03-04 12:52:49.283 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unitClients 
2022-03-04 12:52:49.302 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-03-04 13:01:15.031 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@77846d2c
2022-03-04 13:01:15.097 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-04 13:01:15.112 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-04 13:01:15.112 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'ServiceID'
2022-03-04 13:01:15.112 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'DaoID'
2022-03-04 13:01:15.128 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-04 13:01:15.160 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-04 13:01:15.205 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-04 13:01:15.205 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unitClients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unitClients]
2022-03-04 13:01:15.205 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unitClients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-04 13:01:15.208 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unitClients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP9/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: update
		javax.persistence.jdbc.user: root]
2022-03-04 13:01:15.208 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-04 13:01:15.216 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-04 13:01:15.216 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-04 13:01:15.216 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-04 13:01:15.248 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-04 13:01:15.248 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-04 13:01:15.248 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-04 13:01:15.248 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-04 13:01:15.281 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-04 13:01:15.289 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-04 13:01:15.328 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2022-03-04 13:01:15.328 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2022-03-04 13:01:15.328 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4082ba93
2022-03-04 13:01:15.328 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@43df23d3
2022-03-04 13:01:15.328 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@305ffe9e
2022-03-04 13:01:15.328 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@7ae0a9ec
2022-03-04 13:01:15.328 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@2a693f59
2022-03-04 13:01:15.328 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@2a693f59
2022-03-04 13:01:15.328 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2a693f59
2022-03-04 13:01:15.343 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@723ca036
2022-03-04 13:01:15.343 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@723ca036
2022-03-04 13:01:15.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@723ca036
2022-03-04 13:01:15.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@4d0d9fe7
2022-03-04 13:01:15.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@4d0d9fe7
2022-03-04 13:01:15.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d0d9fe7
2022-03-04 13:01:15.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@66982506
2022-03-04 13:01:15.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@66982506
2022-03-04 13:01:15.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@66982506
2022-03-04 13:01:15.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4f32a3ad
2022-03-04 13:01:15.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4f32a3ad
2022-03-04 13:01:15.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4f32a3ad
2022-03-04 13:01:15.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@673fdbce
2022-03-04 13:01:15.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@673fdbce
2022-03-04 13:01:15.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@673fdbce
2022-03-04 13:01:15.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@3de8f619
2022-03-04 13:01:15.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@3de8f619
2022-03-04 13:01:15.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3de8f619
2022-03-04 13:01:15.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6f204a1a
2022-03-04 13:01:15.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6f204a1a
2022-03-04 13:01:15.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3cce5371
2022-03-04 13:01:15.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3cce5371
2022-03-04 13:01:15.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@338fc1d8
2022-03-04 13:01:15.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@338fc1d8
2022-03-04 13:01:15.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@480d3575
2022-03-04 13:01:15.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@65f8f5ae
2022-03-04 13:01:15.360 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@5c7933ad
2022-03-04 13:01:15.360 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5c7933ad
2022-03-04 13:01:15.360 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@33ecda92
2022-03-04 13:01:15.360 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@33ecda92
2022-03-04 13:01:15.360 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@55de24cc
2022-03-04 13:01:15.360 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@55de24cc
2022-03-04 13:01:15.360 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@25df00a0
2022-03-04 13:01:15.360 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@25df00a0
2022-03-04 13:01:15.360 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@25df00a0
2022-03-04 13:01:15.360 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5884a914
2022-03-04 13:01:15.365 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@1a4927d6
2022-03-04 13:01:15.365 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1a4927d6
2022-03-04 13:01:15.365 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1a4927d6
2022-03-04 13:01:15.365 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@97e93f1
2022-03-04 13:01:15.365 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@624ea235
2022-03-04 13:01:15.365 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@624ea235
2022-03-04 13:01:15.365 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@1b1cfb87
2022-03-04 13:01:15.365 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1b1cfb87
2022-03-04 13:01:15.365 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@20b2475a
2022-03-04 13:01:15.365 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@20b2475a
2022-03-04 13:01:15.365 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@58e1d9d
2022-03-04 13:01:15.365 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@58e1d9d
2022-03-04 13:01:15.365 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@28cda624
2022-03-04 13:01:15.365 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@28cda624
2022-03-04 13:01:15.365 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@126253fd
2022-03-04 13:01:15.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@5276d6ee
2022-03-04 13:01:15.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@5276d6ee
2022-03-04 13:01:15.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@5276d6ee
2022-03-04 13:01:15.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4dc27487
2022-03-04 13:01:15.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4dc27487
2022-03-04 13:01:15.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4dc27487
2022-03-04 13:01:15.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@6933b6c6
2022-03-04 13:01:15.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@1f9e9475
2022-03-04 13:01:15.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@1f9e9475
2022-03-04 13:01:15.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@1f9e9475
2022-03-04 13:01:15.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@14dd7b39
2022-03-04 13:01:15.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@14dd7b39
2022-03-04 13:01:15.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@14dd7b39
2022-03-04 13:01:15.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@51891008
2022-03-04 13:01:15.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@12591ac8
2022-03-04 13:01:15.381 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@f58853c
2022-03-04 13:01:15.381 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@f58853c
2022-03-04 13:01:15.381 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@700fb871
2022-03-04 13:01:15.381 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@503f91c3
2022-03-04 13:01:15.381 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@503f91c3
2022-03-04 13:01:15.381 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@2438dcd
2022-03-04 13:01:15.381 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2438dcd
2022-03-04 13:01:15.381 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@64b0598
2022-03-04 13:01:15.381 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@50029372
2022-03-04 13:01:15.381 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@7f2cfe3f
2022-03-04 13:01:15.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@2bdd8394
2022-03-04 13:01:15.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2bdd8394
2022-03-04 13:01:15.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2f01783a
2022-03-04 13:01:15.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@68878f6d
2022-03-04 13:01:15.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@41488b16
2022-03-04 13:01:15.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@a8ef162
2022-03-04 13:01:15.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2eea88a1
2022-03-04 13:01:15.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7ac296f6
2022-03-04 13:01:15.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7fd7a283
2022-03-04 13:01:15.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@22f59fa
2022-03-04 13:01:15.398 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-04 13:01:15.398 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-04 13:01:15.398 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-03-04 13:01:15.398 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-04 13:01:15.405 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-04 13:01:15.405 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-04 13:01:15.931 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.28
      major : 8
      minor : 0
2022-03-04 13:01:15.931 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.18 (Revision: fef2894d751d47223192b706977b4a5bc41e6be4)
      major : 8
      minor : 0
2022-03-04 13:01:15.931 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-03-04 13:01:15.931 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-03-04 13:01:15.931 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-03-04 13:01:15.963 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-03-04 13:01:15.963 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-03-04 13:01:15.978 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-03-04 13:01:15.978 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-03-04 13:01:15.978 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-04 13:01:15.978 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-04 13:01:15.978 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-03-04 13:01:15.978 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-03-04 13:01:15.978 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-03-04 13:01:15.978 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-04 13:01:15.978 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-03-04 13:01:15.978 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-03-04 13:01:15.978 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-03-04 13:01:15.978 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-03-04 13:01:15.978 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-04 13:01:15.978 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-03-04 13:01:15.996 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-03-04 13:01:16.010 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-03-04 13:01:16.010 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-03-04 13:01:16.026 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name TClients
2022-03-04 13:01:16.026 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-03-04 13:01:16.042 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-03-04 13:01:16.042 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-03-04 13:01:16.042 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-03-04 13:01:16.042 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-03-04 13:01:16.042 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-03-04 13:01:16.042 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-03-04 13:01:16.042 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures, insertable=true, updatable=true, unique=false}
2022-03-04 13:01:16.042 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-03-04 13:01:16.058 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-03-04 13:01:16.058 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures_KEY, insertable=true, updatable=true, unique=false}
2022-03-04 13:01:16.058 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='factures_KEY', referencedColumn='null', mappedBy='null'}
2022-03-04 13:01:16.058 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-03-04 13:01:16.058 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-03-04 13:01:16.058 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:386)] - Collection role: ma.cigma.pfe.models.Client.factures
2022-03-04 13:01:16.064 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property factures
2022-03-04 13:01:16.064 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-03-04 13:01:16.064 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property name with lazy=false
2022-03-04 13:01:16.064 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-03-04 13:01:16.064 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for name
2022-03-04 13:01:16.064 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property name
2022-03-04 13:01:16.064 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Facture
2022-03-04 13:01:16.064 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-03-04 13:01:16.064 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name Facture
2022-03-04 13:01:16.064 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Facture on table Facture
2022-03-04 13:01:16.064 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Facture), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-03-04 13:01:16.064 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-03-04 13:01:16.064 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:id]
2022-03-04 13:01:16.064 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-03-04 13:01:16.064 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-03-04 13:01:16.064 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Facture), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-03-04 13:01:16.064 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property amount with lazy=false
2022-03-04 13:01:16.064 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:amount]
2022-03-04 13:01:16.064 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for amount
2022-03-04 13:01:16.064 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property amount
2022-03-04 13:01:16.064 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Facture), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-03-04 13:01:16.064 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property description with lazy=false
2022-03-04 13:01:16.064 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:description]
2022-03-04 13:01:16.064 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for description
2022-03-04 13:01:16.064 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property description
2022-03-04 13:01:16.064 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-03-04 13:01:16.064 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for name
2022-03-04 13:01:16.064 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-03-04 13:01:16.064 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for amount
2022-03-04 13:01:16.064 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for description
2022-03-04 13:01:16.073 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-03-04 13:01:16.073 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [facture]
2022-03-04 13:01:16.073 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:51)] - Second pass for collection: ma.cigma.pfe.models.Client.factures
2022-03-04 13:01:16.073 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindManyToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindManyToManySecondPass(CollectionBinder.java:1155)] - Binding a OneToMany: ma.cigma.pfe.models.Client.factures through an association table
2022-03-04 13:01:16.073 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:68)] - Mapped collection key: TClients_id, element: factures_id
2022-03-04 13:01:16.073 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Facture
2022-03-04 13:01:16.081 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-03-04 13:01:16.081 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Facture
2022-03-04 13:01:16.081 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-03-04 13:01:16.098 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-03-04 13:01:16.098 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-03-04 13:01:16.098 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-03-04 13:01:16.098 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-03-04 13:01:16.098 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-03-04 13:01:16.098 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-03-04 13:01:16.098 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-03-04 13:01:16.098 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-03-04 13:01:16.098 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-03-04 13:01:16.098 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-03-04 13:01:16.098 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-03-04 13:01:16.098 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-03-04 13:01:16.098 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-03-04 13:01:16.098 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-03-04 13:01:16.098 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-03-04 13:01:16.098 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-03-04 13:01:16.098 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-03-04 13:01:16.098 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-03-04 13:01:16.098 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-03-04 13:01:16.098 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-03-04 13:01:16.098 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-03-04 13:01:16.098 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-03-04 13:01:16.098 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1827a871
2022-03-04 13:01:16.098 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-03-04 13:01:16.098 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-03-04 13:01:16.098 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-03-04 13:01:16.098 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-03-04 13:01:16.098 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-03-04 13:01:16.098 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-03-04 13:01:16.098 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-03-04 13:01:16.098 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-03-04 13:01:16.098 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-03-04 13:01:16.098 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-03-04 13:01:16.098 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-03-04 13:01:16.098 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-03-04 13:01:16.098 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-03-04 13:01:16.113 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-03-04 13:01:16.113 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-03-04 13:01:16.113 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.202-b08, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_202\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@13c612bd, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=AE, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Studies\JEEProjects\TP9, java.runtime.version=1.8.0_202-b08, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\endorsed, java.io.tmpdir=C:\Users\toubk\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_202\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\toubk\AppData\Local\Microsoft\WindowsApps;;., javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unitClients, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\toubk, user.timezone=Asia/Muscat, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=toubk, java.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;D:\Studies\JEEProjects\TP9\target\classes;C:\Users\toubk\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\toubk\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\toubk\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\toubk\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\toubk\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\toubk\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\toubk\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\toubk\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\toubk\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\toubk\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.2\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_202\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_202, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-03-04 13:01:16.128 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-03-04 13:01:16.128 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-03-04 13:01:16.160 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-04 13:01:16.160 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-04 13:01:16.160 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-04 13:01:16.160 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-04 13:01:16.191 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-03-04 13:01:16.191 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-03-04 13:01:16.191 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-03-04 13:01:16.191 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-03-04 13:01:16.191 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:664)] - Static SQL for collection: ma.cigma.pfe.models.Client.factures
2022-03-04 13:01:16.191 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:666)] -  Row insert: insert into TClients_Facture (TClients_id, factures_id) values (?, ?)
2022-03-04 13:01:16.191 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:669)] -  Row update: update TClients_Facture set factures_id=? where TClients_id=? and factures_id=?
2022-03-04 13:01:16.191 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:672)] -  Row delete: delete from TClients_Facture where TClients_id=? and factures_id=?
2022-03-04 13:01:16.191 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:675)] -  One-shot delete: delete from TClients_Facture where TClients_id=?
2022-03-04 13:01:16.191 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-03-04 13:01:16.191 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TClients where id =?
2022-03-04 13:01:16.191 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select client_.id, client_.name as name2_1_ from TClients client_ where client_.id=?
2022-03-04 13:01:16.191 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-03-04 13:01:16.191 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-03-04 13:01:16.206 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-03-04 13:01:16.206 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TClients (name) values (?)
2022-03-04 13:01:16.207 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49b07ee3]
2022-03-04 13:01:16.207 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 13:01:16.207 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 13:01:16.207 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:01:16.224 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:01:16.224 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22101c80]
2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [READ]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@759d81f3]
2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a4c638d]
2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_NOWAIT]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aed0151]
2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_SKIPLOCKED]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f12e153]
2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [FORCE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a101b1c]
2022-03-04 13:01:16.239 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 13:01:16.248 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 13:01:16.248 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:01:16.248 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:01:16.248 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 13:01:16.248 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_READ]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? lock in share mode
2022-03-04 13:01:16.248 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29f0802c]
2022-03-04 13:01:16.248 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 13:01:16.248 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 13:01:16.248 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:01:16.248 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:01:16.248 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 13:01:16.248 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_WRITE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 13:01:16.248 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60f2e0bd]
2022-03-04 13:01:16.248 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 13:01:16.248 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 13:01:16.248 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:01:16.248 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:01:16.248 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 13:01:16.248 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 13:01:16.248 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b410923]
2022-03-04 13:01:16.248 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 13:01:16.248 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 13:01:16.248 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:01:16.248 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:01:16.248 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 13:01:16.248 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-04 13:01:16.248 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@203dd56b]
2022-03-04 13:01:16.248 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 13:01:16.248 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 13:01:16.248 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:01:16.248 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:01:16.248 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 13:01:16.248 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-04 13:01:16.260 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Client: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-04 13:01:16.260 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Client: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-04 13:01:16.261 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Facture
2022-03-04 13:01:16.261 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from Facture where id =?
2022-03-04 13:01:16.261 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.description as descript3_0_ from Facture facture_ where facture_.id=?
2022-03-04 13:01:16.261 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into Facture (amount, description, id) values (?, ?, ?)
2022-03-04 13:01:16.261 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update Facture set amount=?, description=? where id=?
2022-03-04 13:01:16.261 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from Facture where id=?
2022-03-04 13:01:16.261 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into Facture (amount, description) values (?, ?)
2022-03-04 13:01:16.261 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ecd665]
2022-03-04 13:01:16.262 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 13:01:16.262 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 13:01:16.262 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:01:16.262 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:01:16.262 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 13:01:16.263 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-04 13:01:16.263 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ec7d8b3]
2022-03-04 13:01:16.263 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 13:01:16.263 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 13:01:16.263 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:01:16.263 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:01:16.263 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 13:01:16.264 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-04 13:01:16.264 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bb3131b]
2022-03-04 13:01:16.264 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 13:01:16.264 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 13:01:16.264 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:01:16.264 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:01:16.264 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 13:01:16.265 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-04 13:01:16.265 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74fef3f7]
2022-03-04 13:01:16.265 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 13:01:16.265 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 13:01:16.265 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:01:16.265 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:01:16.265 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 13:01:16.266 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_NOWAIT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-04 13:01:16.266 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69eb86b4]
2022-03-04 13:01:16.266 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 13:01:16.266 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 13:01:16.266 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:01:16.266 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:01:16.267 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 13:01:16.267 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_SKIPLOCKED]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-04 13:01:16.267 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bb8f9e2]
2022-03-04 13:01:16.267 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 13:01:16.267 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 13:01:16.267 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:01:16.267 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:01:16.268 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 13:01:16.268 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [FORCE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-04 13:01:16.268 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f78de22]
2022-03-04 13:01:16.268 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 13:01:16.268 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 13:01:16.268 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:01:16.268 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:01:16.269 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 13:01:16.269 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? lock in share mode
2022-03-04 13:01:16.269 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d8539de]
2022-03-04 13:01:16.269 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 13:01:16.269 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 13:01:16.269 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:01:16.270 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:01:16.270 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 13:01:16.270 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_WRITE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-04 13:01:16.270 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@272a179c]
2022-03-04 13:01:16.271 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 13:01:16.271 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 13:01:16.272 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:01:16.272 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:01:16.272 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 13:01:16.272 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-04 13:01:16.272 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67207d8a]
2022-03-04 13:01:16.273 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 13:01:16.273 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 13:01:16.273 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:01:16.273 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:01:16.273 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 13:01:16.274 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-04 13:01:16.274 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c2a69b4]
2022-03-04 13:01:16.274 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 13:01:16.274 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 13:01:16.274 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:01:16.274 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:01:16.274 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 13:01:16.274 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-04 13:01:16.275 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-04 13:01:16.275 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-04 13:01:16.278 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@720653c2]
2022-03-04 13:01:16.278 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4463d9d3]
2022-03-04 13:01:16.280 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 13:01:16.280 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 13:01:16.280 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:01:16.282 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:01:16.282 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.Client.factures)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.Client.factures])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.Client.factures].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.Client.factures)
          - SQL table alias mapping - factures0_
          - alias suffix - 0_
          - suffixed key columns - {TClients1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Facture)
                - SQL table alias mapping - facture1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2022-03-04 13:01:16.283 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:96)] - Static select for collection ma.cigma.pfe.models.Client.factures: select factures0_.TClients_id as TClients1_2_0_, factures0_.factures_id as factures2_2_0_, facture1_.id as id1_0_1_, facture1_.amount as amount2_0_1_, facture1_.description as descript3_0_1_ from TClients_Facture factures0_ inner join Facture facture1_ on factures0_.factures_id=facture1_.id where factures0_.TClients_id=?
2022-03-04 13:01:16.283 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-03-04 13:01:16.285 INFO [main][org.hibernate.tool.hbm2ddl.SchemaUpdate] [execute] [org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:101)] - HHH000228: Running hbm2ddl schema update
2022-03-04 13:01:16.322 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:505)] - No alter strings for table : Facture
2022-03-04 13:01:16.337 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:505)] - No alter strings for table : TClients
2022-03-04 13:01:16.337 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:505)] - No alter strings for table : TClients_Facture
2022-03-04 13:01:16.384 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-03-04 13:01:16.384 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-03-04 13:01:16.384 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-03-04 13:01:16.384 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-03-04 13:01:16.384 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-03-04 13:01:16.384 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3a095ec0
2022-03-04 13:01:16.384 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: b8313312-e895-44bf-807c-9e378dccc5eb (<unnamed>)
2022-03-04 13:01:16.384 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-03-04 13:01:16.384 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-03-04 13:01:16.422 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@3a4ba480
2022-03-04 13:01:16.422 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unitClients 
2022-03-04 13:01:16.447 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-03-04 13:16:07.612 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@77846d2c
2022-03-04 13:16:07.680 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-04 13:16:07.703 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-04 13:16:07.711 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'ServiceID'
2022-03-04 13:16:07.711 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'DaoID'
2022-03-04 13:16:07.729 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-04 13:16:07.760 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-04 13:16:07.799 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-04 13:16:07.799 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unitClients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unitClients]
2022-03-04 13:16:07.799 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unitClients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-04 13:16:07.799 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unitClients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP9/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: update
		javax.persistence.jdbc.user: root]
2022-03-04 13:16:07.799 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-04 13:16:07.799 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-04 13:16:07.799 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-04 13:16:07.799 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-04 13:16:07.846 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-04 13:16:07.846 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-04 13:16:07.846 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-04 13:16:07.846 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-04 13:16:07.862 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-04 13:16:07.878 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-04 13:16:07.913 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2022-03-04 13:16:07.913 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2022-03-04 13:16:07.913 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4082ba93
2022-03-04 13:16:07.913 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@43df23d3
2022-03-04 13:16:07.913 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@305ffe9e
2022-03-04 13:16:07.913 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@7ae0a9ec
2022-03-04 13:16:07.913 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@2a693f59
2022-03-04 13:16:07.913 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@2a693f59
2022-03-04 13:16:07.913 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2a693f59
2022-03-04 13:16:07.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@723ca036
2022-03-04 13:16:07.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@723ca036
2022-03-04 13:16:07.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@723ca036
2022-03-04 13:16:07.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@4d0d9fe7
2022-03-04 13:16:07.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@4d0d9fe7
2022-03-04 13:16:07.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d0d9fe7
2022-03-04 13:16:07.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@66982506
2022-03-04 13:16:07.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@66982506
2022-03-04 13:16:07.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@66982506
2022-03-04 13:16:07.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4f32a3ad
2022-03-04 13:16:07.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4f32a3ad
2022-03-04 13:16:07.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4f32a3ad
2022-03-04 13:16:07.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@673fdbce
2022-03-04 13:16:07.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@673fdbce
2022-03-04 13:16:07.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@673fdbce
2022-03-04 13:16:07.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@3de8f619
2022-03-04 13:16:07.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@3de8f619
2022-03-04 13:16:07.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3de8f619
2022-03-04 13:16:07.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6f204a1a
2022-03-04 13:16:07.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6f204a1a
2022-03-04 13:16:07.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3cce5371
2022-03-04 13:16:07.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3cce5371
2022-03-04 13:16:07.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@338fc1d8
2022-03-04 13:16:07.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@338fc1d8
2022-03-04 13:16:07.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@480d3575
2022-03-04 13:16:07.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@65f8f5ae
2022-03-04 13:16:07.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@5c7933ad
2022-03-04 13:16:07.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5c7933ad
2022-03-04 13:16:07.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@33ecda92
2022-03-04 13:16:07.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@33ecda92
2022-03-04 13:16:07.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@55de24cc
2022-03-04 13:16:07.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@55de24cc
2022-03-04 13:16:07.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@25df00a0
2022-03-04 13:16:07.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@25df00a0
2022-03-04 13:16:07.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@25df00a0
2022-03-04 13:16:07.945 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5884a914
2022-03-04 13:16:07.945 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@1a4927d6
2022-03-04 13:16:07.945 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1a4927d6
2022-03-04 13:16:07.945 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1a4927d6
2022-03-04 13:16:07.945 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@97e93f1
2022-03-04 13:16:07.945 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@624ea235
2022-03-04 13:16:07.945 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@624ea235
2022-03-04 13:16:07.945 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@1b1cfb87
2022-03-04 13:16:07.945 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1b1cfb87
2022-03-04 13:16:07.945 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@20b2475a
2022-03-04 13:16:07.945 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@20b2475a
2022-03-04 13:16:07.945 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@58e1d9d
2022-03-04 13:16:07.945 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@58e1d9d
2022-03-04 13:16:07.945 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@28cda624
2022-03-04 13:16:07.945 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@28cda624
2022-03-04 13:16:07.945 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@126253fd
2022-03-04 13:16:07.945 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@5276d6ee
2022-03-04 13:16:07.945 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@5276d6ee
2022-03-04 13:16:07.945 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@5276d6ee
2022-03-04 13:16:07.945 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4dc27487
2022-03-04 13:16:07.945 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4dc27487
2022-03-04 13:16:07.945 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4dc27487
2022-03-04 13:16:07.945 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@6933b6c6
2022-03-04 13:16:07.945 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@1f9e9475
2022-03-04 13:16:07.945 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@1f9e9475
2022-03-04 13:16:07.945 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@1f9e9475
2022-03-04 13:16:07.945 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@14dd7b39
2022-03-04 13:16:07.945 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@14dd7b39
2022-03-04 13:16:07.945 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@14dd7b39
2022-03-04 13:16:07.945 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@51891008
2022-03-04 13:16:07.945 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@12591ac8
2022-03-04 13:16:07.945 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@f58853c
2022-03-04 13:16:07.945 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@f58853c
2022-03-04 13:16:07.945 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@700fb871
2022-03-04 13:16:07.961 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@503f91c3
2022-03-04 13:16:07.961 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@503f91c3
2022-03-04 13:16:07.961 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@2438dcd
2022-03-04 13:16:07.961 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2438dcd
2022-03-04 13:16:07.961 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@64b0598
2022-03-04 13:16:07.961 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@50029372
2022-03-04 13:16:07.961 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@7f2cfe3f
2022-03-04 13:16:07.961 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@2bdd8394
2022-03-04 13:16:07.961 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2bdd8394
2022-03-04 13:16:07.961 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2f01783a
2022-03-04 13:16:07.961 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@68878f6d
2022-03-04 13:16:07.961 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@41488b16
2022-03-04 13:16:07.961 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@a8ef162
2022-03-04 13:16:07.961 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2eea88a1
2022-03-04 13:16:07.961 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7ac296f6
2022-03-04 13:16:07.961 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7fd7a283
2022-03-04 13:16:07.961 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@22f59fa
2022-03-04 13:16:07.961 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-04 13:16:07.977 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-04 13:16:07.977 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-03-04 13:16:07.977 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-04 13:16:07.977 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-04 13:16:07.977 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-04 13:16:08.475 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.28
      major : 8
      minor : 0
2022-03-04 13:16:08.475 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.18 (Revision: fef2894d751d47223192b706977b4a5bc41e6be4)
      major : 8
      minor : 0
2022-03-04 13:16:08.475 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-03-04 13:16:08.475 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-03-04 13:16:08.491 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-03-04 13:16:08.507 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-03-04 13:16:08.507 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-03-04 13:16:08.523 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-03-04 13:16:08.523 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-03-04 13:16:08.523 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-04 13:16:08.523 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-04 13:16:08.523 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-03-04 13:16:08.523 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-03-04 13:16:08.523 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-03-04 13:16:08.523 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-04 13:16:08.523 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-03-04 13:16:08.523 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-03-04 13:16:08.523 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-03-04 13:16:08.523 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-03-04 13:16:08.523 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-04 13:16:08.523 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-03-04 13:16:08.539 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-03-04 13:16:08.554 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-03-04 13:16:08.554 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-03-04 13:16:08.570 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name TClients
2022-03-04 13:16:08.570 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-03-04 13:16:08.586 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-03-04 13:16:08.586 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-03-04 13:16:08.586 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-03-04 13:16:08.586 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-03-04 13:16:08.586 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-03-04 13:16:08.594 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-03-04 13:16:08.594 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures, insertable=true, updatable=true, unique=false}
2022-03-04 13:16:08.594 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-03-04 13:16:08.594 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-03-04 13:16:08.594 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures_KEY, insertable=true, updatable=true, unique=false}
2022-03-04 13:16:08.594 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='factures_KEY', referencedColumn='null', mappedBy='null'}
2022-03-04 13:16:08.602 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-03-04 13:16:08.602 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-03-04 13:16:08.602 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:386)] - Collection role: ma.cigma.pfe.models.Client.factures
2022-03-04 13:16:08.602 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property factures
2022-03-04 13:16:08.602 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-03-04 13:16:08.602 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property name with lazy=false
2022-03-04 13:16:08.602 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-03-04 13:16:08.602 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for name
2022-03-04 13:16:08.602 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property name
2022-03-04 13:16:08.602 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Facture
2022-03-04 13:16:08.602 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-03-04 13:16:08.602 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name Facture
2022-03-04 13:16:08.602 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Facture on table Facture
2022-03-04 13:16:08.602 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Facture), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-03-04 13:16:08.602 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-03-04 13:16:08.602 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:id]
2022-03-04 13:16:08.602 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-03-04 13:16:08.602 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-03-04 13:16:08.602 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Facture), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-03-04 13:16:08.602 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property amount with lazy=false
2022-03-04 13:16:08.602 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:amount]
2022-03-04 13:16:08.602 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for amount
2022-03-04 13:16:08.602 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property amount
2022-03-04 13:16:08.602 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Facture), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-03-04 13:16:08.602 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property description with lazy=false
2022-03-04 13:16:08.602 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:description]
2022-03-04 13:16:08.602 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for description
2022-03-04 13:16:08.602 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property description
2022-03-04 13:16:08.602 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-03-04 13:16:08.602 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for name
2022-03-04 13:16:08.602 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-03-04 13:16:08.610 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for amount
2022-03-04 13:16:08.610 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for description
2022-03-04 13:16:08.610 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-03-04 13:16:08.610 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [facture]
2022-03-04 13:16:08.611 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:51)] - Second pass for collection: ma.cigma.pfe.models.Client.factures
2022-03-04 13:16:08.611 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindManyToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindManyToManySecondPass(CollectionBinder.java:1155)] - Binding a OneToMany: ma.cigma.pfe.models.Client.factures through an association table
2022-03-04 13:16:08.611 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:68)] - Mapped collection key: TClients_id, element: factures_id
2022-03-04 13:16:08.611 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Facture
2022-03-04 13:16:08.611 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-03-04 13:16:08.611 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Facture
2022-03-04 13:16:08.611 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-03-04 13:16:08.627 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-03-04 13:16:08.627 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-03-04 13:16:08.627 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-03-04 13:16:08.627 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-03-04 13:16:08.627 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-03-04 13:16:08.627 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-03-04 13:16:08.627 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-03-04 13:16:08.627 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-03-04 13:16:08.627 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-03-04 13:16:08.627 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-03-04 13:16:08.627 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-03-04 13:16:08.627 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-03-04 13:16:08.627 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-03-04 13:16:08.627 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-03-04 13:16:08.627 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-03-04 13:16:08.627 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-03-04 13:16:08.627 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-03-04 13:16:08.627 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-03-04 13:16:08.627 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-03-04 13:16:08.627 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-03-04 13:16:08.627 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-03-04 13:16:08.627 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-03-04 13:16:08.627 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1827a871
2022-03-04 13:16:08.627 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-03-04 13:16:08.627 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-03-04 13:16:08.627 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-03-04 13:16:08.627 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-03-04 13:16:08.627 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-03-04 13:16:08.627 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-03-04 13:16:08.627 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-03-04 13:16:08.627 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-03-04 13:16:08.627 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-03-04 13:16:08.627 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-03-04 13:16:08.627 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-03-04 13:16:08.627 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-03-04 13:16:08.627 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-03-04 13:16:08.643 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-03-04 13:16:08.643 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-03-04 13:16:08.643 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.202-b08, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_202\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@13c612bd, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=AE, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Studies\JEEProjects\TP9, java.runtime.version=1.8.0_202-b08, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\endorsed, java.io.tmpdir=C:\Users\toubk\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_202\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\toubk\AppData\Local\Microsoft\WindowsApps;;., javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unitClients, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\toubk, user.timezone=Asia/Muscat, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=toubk, java.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;D:\Studies\JEEProjects\TP9\target\classes;C:\Users\toubk\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\toubk\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\toubk\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\toubk\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\toubk\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\toubk\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\toubk\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\toubk\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\toubk\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\toubk\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.2\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_202\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_202, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-03-04 13:16:08.659 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-03-04 13:16:08.659 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-03-04 13:16:08.674 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-04 13:16:08.674 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-04 13:16:08.690 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-04 13:16:08.690 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-04 13:16:08.706 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-03-04 13:16:08.706 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-03-04 13:16:08.706 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-03-04 13:16:08.706 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-03-04 13:16:08.730 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:664)] - Static SQL for collection: ma.cigma.pfe.models.Client.factures
2022-03-04 13:16:08.730 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:666)] -  Row insert: insert into TClients_Facture (TClients_id, factures_id) values (?, ?)
2022-03-04 13:16:08.730 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:669)] -  Row update: update TClients_Facture set factures_id=? where TClients_id=? and factures_id=?
2022-03-04 13:16:08.730 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:672)] -  Row delete: delete from TClients_Facture where TClients_id=? and factures_id=?
2022-03-04 13:16:08.731 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:675)] -  One-shot delete: delete from TClients_Facture where TClients_id=?
2022-03-04 13:16:08.733 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-03-04 13:16:08.733 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TClients where id =?
2022-03-04 13:16:08.733 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select client_.id, client_.name as name2_1_ from TClients client_ where client_.id=?
2022-03-04 13:16:08.734 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-03-04 13:16:08.734 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-03-04 13:16:08.734 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-03-04 13:16:08.734 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TClients (name) values (?)
2022-03-04 13:16:08.746 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49b07ee3]
2022-03-04 13:16:08.747 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 13:16:08.755 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 13:16:08.756 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:16:08.761 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:16:08.761 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22101c80]
2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [READ]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@759d81f3]
2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a4c638d]
2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_NOWAIT]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aed0151]
2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_SKIPLOCKED]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f12e153]
2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [FORCE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a101b1c]
2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 13:16:08.769 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:16:08.777 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:16:08.777 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 13:16:08.777 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_READ]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? lock in share mode
2022-03-04 13:16:08.777 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29f0802c]
2022-03-04 13:16:08.777 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 13:16:08.777 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 13:16:08.777 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:16:08.777 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_WRITE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60f2e0bd]
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b410923]
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@203dd56b]
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Client: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Client: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Facture
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from Facture where id =?
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.description as descript3_0_ from Facture facture_ where facture_.id=?
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into Facture (amount, description, id) values (?, ?, ?)
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update Facture set amount=?, description=? where id=?
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from Facture where id=?
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into Facture (amount, description) values (?, ?)
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ecd665]
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ec7d8b3]
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bb3131b]
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 13:16:08.778 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:16:08.794 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:16:08.794 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 13:16:08.794 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74fef3f7]
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_NOWAIT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69eb86b4]
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_SKIPLOCKED]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bb8f9e2]
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [FORCE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f78de22]
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? lock in share mode
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d8539de]
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_WRITE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@272a179c]
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67207d8a]
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 13:16:08.795 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-04 13:16:08.802 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c2a69b4]
2022-03-04 13:16:08.802 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 13:16:08.802 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 13:16:08.802 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:16:08.802 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:16:08.802 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 13:16:08.802 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-04 13:16:08.802 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-04 13:16:08.802 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-04 13:16:08.802 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@720653c2]
2022-03-04 13:16:08.802 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4463d9d3]
2022-03-04 13:16:08.802 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 13:16:08.802 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 13:16:08.802 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:16:08.810 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:16:08.810 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.Client.factures)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.Client.factures])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.Client.factures].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.Client.factures)
          - SQL table alias mapping - factures0_
          - alias suffix - 0_
          - suffixed key columns - {TClients1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Facture)
                - SQL table alias mapping - facture1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2022-03-04 13:16:08.810 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:96)] - Static select for collection ma.cigma.pfe.models.Client.factures: select factures0_.TClients_id as TClients1_2_0_, factures0_.factures_id as factures2_2_0_, facture1_.id as id1_0_1_, facture1_.amount as amount2_0_1_, facture1_.description as descript3_0_1_ from TClients_Facture factures0_ inner join Facture facture1_ on factures0_.factures_id=facture1_.id where factures0_.TClients_id=?
2022-03-04 13:16:08.810 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-03-04 13:16:08.810 INFO [main][org.hibernate.tool.hbm2ddl.SchemaUpdate] [execute] [org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:101)] - HHH000228: Running hbm2ddl schema update
2022-03-04 13:16:08.857 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:505)] - No alter strings for table : Facture
2022-03-04 13:16:08.857 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:505)] - No alter strings for table : TClients
2022-03-04 13:16:08.873 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:505)] - No alter strings for table : TClients_Facture
2022-03-04 13:16:08.904 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-03-04 13:16:08.904 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-03-04 13:16:08.904 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-03-04 13:16:08.904 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-03-04 13:16:08.904 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-03-04 13:16:08.904 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3a095ec0
2022-03-04 13:16:08.904 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: d9e4825b-f9c6-4cef-8cd6-25488c2a5a9b (<unnamed>)
2022-03-04 13:16:08.904 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-03-04 13:16:08.920 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-03-04 13:16:08.944 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@3a4ba480
2022-03-04 13:16:08.944 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unitClients 
2022-03-04 13:16:08.977 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-03-04 13:19:30.060 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c762604
2022-03-04 13:19:30.124 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-04 13:19:30.139 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-04 13:19:30.155 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'ServiceID'
2022-03-04 13:19:30.155 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'DaoID'
2022-03-04 13:19:30.171 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-04 13:19:30.202 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-04 13:19:30.227 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-04 13:19:30.227 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unitClients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unitClients]
2022-03-04 13:19:30.243 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unitClients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-04 13:19:30.243 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unitClients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP9/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: update
		javax.persistence.jdbc.user: root]
2022-03-04 13:19:30.243 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-04 13:19:30.243 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-04 13:19:30.243 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-04 13:19:30.243 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-04 13:19:30.281 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-04 13:19:30.281 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-04 13:19:30.281 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-04 13:19:30.290 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-04 13:19:30.306 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-04 13:19:30.322 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-04 13:19:30.358 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2b30a42c
2022-03-04 13:19:30.358 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2b30a42c
2022-03-04 13:19:30.358 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2b30a42c
2022-03-04 13:19:30.366 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@792b749c
2022-03-04 13:19:30.366 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1972e513
2022-03-04 13:19:30.366 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@61c4eee0
2022-03-04 13:19:30.366 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@7fd50002
2022-03-04 13:19:30.366 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@7fd50002
2022-03-04 13:19:30.366 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7fd50002
2022-03-04 13:19:30.366 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@28dcca0c
2022-03-04 13:19:30.366 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@28dcca0c
2022-03-04 13:19:30.366 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@28dcca0c
2022-03-04 13:19:30.366 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@312aa7c
2022-03-04 13:19:30.366 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@312aa7c
2022-03-04 13:19:30.366 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@312aa7c
2022-03-04 13:19:30.374 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@5a59ca5e
2022-03-04 13:19:30.374 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@5a59ca5e
2022-03-04 13:19:30.374 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5a59ca5e
2022-03-04 13:19:30.374 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4d1bf319
2022-03-04 13:19:30.374 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4d1bf319
2022-03-04 13:19:30.374 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4d1bf319
2022-03-04 13:19:30.374 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@7a5ceedd
2022-03-04 13:19:30.379 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@7a5ceedd
2022-03-04 13:19:30.379 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7a5ceedd
2022-03-04 13:19:30.379 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@4e5ed836
2022-03-04 13:19:30.379 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@4e5ed836
2022-03-04 13:19:30.381 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4e5ed836
2022-03-04 13:19:30.381 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5f8e8a9d
2022-03-04 13:19:30.381 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5f8e8a9d
2022-03-04 13:19:30.381 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6e535154
2022-03-04 13:19:30.381 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6e535154
2022-03-04 13:19:30.381 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@48e1f6c7
2022-03-04 13:19:30.381 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@48e1f6c7
2022-03-04 13:19:30.381 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@194fad1
2022-03-04 13:19:30.381 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@38467116
2022-03-04 13:19:30.381 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@5fb759d6
2022-03-04 13:19:30.381 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5fb759d6
2022-03-04 13:19:30.390 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@6e2829c7
2022-03-04 13:19:30.390 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6e2829c7
2022-03-04 13:19:30.390 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@30f842ca
2022-03-04 13:19:30.390 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@30f842ca
2022-03-04 13:19:30.390 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@7b4c50bc
2022-03-04 13:19:30.390 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7b4c50bc
2022-03-04 13:19:30.390 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7b4c50bc
2022-03-04 13:19:30.390 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@60f00693
2022-03-04 13:19:30.390 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@aba625
2022-03-04 13:19:30.390 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@aba625
2022-03-04 13:19:30.390 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@aba625
2022-03-04 13:19:30.390 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4b520ea8
2022-03-04 13:19:30.390 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@782859e
2022-03-04 13:19:30.390 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@782859e
2022-03-04 13:19:30.390 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@6f43c82
2022-03-04 13:19:30.390 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6f43c82
2022-03-04 13:19:30.390 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f15d60e
2022-03-04 13:19:30.390 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f15d60e
2022-03-04 13:19:30.390 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@4f0f2942
2022-03-04 13:19:30.390 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4f0f2942
2022-03-04 13:19:30.390 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7eecb5b8
2022-03-04 13:19:30.390 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7eecb5b8
2022-03-04 13:19:30.390 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@475c9c31
2022-03-04 13:19:30.390 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@1807f5a7
2022-03-04 13:19:30.390 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@1807f5a7
2022-03-04 13:19:30.390 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@1807f5a7
2022-03-04 13:19:30.390 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7dfd3c81
2022-03-04 13:19:30.390 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7dfd3c81
2022-03-04 13:19:30.390 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7dfd3c81
2022-03-04 13:19:30.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@7dfb0c0f
2022-03-04 13:19:30.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@d23e042
2022-03-04 13:19:30.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@d23e042
2022-03-04 13:19:30.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@d23e042
2022-03-04 13:19:30.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6cd24612
2022-03-04 13:19:30.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6cd24612
2022-03-04 13:19:30.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6cd24612
2022-03-04 13:19:30.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@f68f0dc
2022-03-04 13:19:30.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@38145825
2022-03-04 13:19:30.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@29f7cefd
2022-03-04 13:19:30.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@29f7cefd
2022-03-04 13:19:30.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@9816741
2022-03-04 13:19:30.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@2235eaab
2022-03-04 13:19:30.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2235eaab
2022-03-04 13:19:30.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@5167f57d
2022-03-04 13:19:30.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5167f57d
2022-03-04 13:19:30.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3e2055d6
2022-03-04 13:19:30.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@50f6ac94
2022-03-04 13:19:30.422 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@5038d0b5
2022-03-04 13:19:30.422 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@68746f22
2022-03-04 13:19:30.422 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@68746f22
2022-03-04 13:19:30.422 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@41488b16
2022-03-04 13:19:30.422 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@a8ef162
2022-03-04 13:19:30.422 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2eea88a1
2022-03-04 13:19:30.422 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7ac296f6
2022-03-04 13:19:30.422 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7fd7a283
2022-03-04 13:19:30.422 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@22f59fa
2022-03-04 13:19:30.422 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@78fa769e
2022-03-04 13:19:30.422 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@16612a51
2022-03-04 13:19:30.422 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-04 13:19:30.438 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-04 13:19:30.438 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-03-04 13:19:30.438 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-04 13:19:30.438 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-04 13:19:30.438 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-04 13:19:30.959 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.28
      major : 8
      minor : 0
2022-03-04 13:19:30.959 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.18 (Revision: fef2894d751d47223192b706977b4a5bc41e6be4)
      major : 8
      minor : 0
2022-03-04 13:19:30.959 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-03-04 13:19:30.959 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-03-04 13:19:30.974 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-03-04 13:19:30.990 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-03-04 13:19:30.990 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-03-04 13:19:31.006 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-03-04 13:19:31.006 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-03-04 13:19:31.006 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-04 13:19:31.006 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-04 13:19:31.006 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-03-04 13:19:31.006 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-03-04 13:19:31.006 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-03-04 13:19:31.006 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-04 13:19:31.006 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-03-04 13:19:31.006 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-03-04 13:19:31.006 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-03-04 13:19:31.006 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-03-04 13:19:31.006 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-04 13:19:31.006 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-03-04 13:19:31.022 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-03-04 13:19:31.045 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-03-04 13:19:31.053 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-03-04 13:19:31.053 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name TClients
2022-03-04 13:19:31.053 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-03-04 13:19:31.069 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-03-04 13:19:31.069 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-03-04 13:19:31.077 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-03-04 13:19:31.078 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-03-04 13:19:31.078 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-03-04 13:19:31.081 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-03-04 13:19:31.081 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures, insertable=true, updatable=true, unique=false}
2022-03-04 13:19:31.081 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-03-04 13:19:31.081 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-03-04 13:19:31.081 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures_KEY, insertable=true, updatable=true, unique=false}
2022-03-04 13:19:31.081 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='factures_KEY', referencedColumn='null', mappedBy='null'}
2022-03-04 13:19:31.081 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-03-04 13:19:31.081 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:386)] - Collection role: ma.cigma.pfe.models.Client.factures
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property factures
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property name with lazy=false
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for name
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property name
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Facture
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name Facture
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Facture on table Facture
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Facture), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:id]
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Facture), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property amount with lazy=false
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:amount]
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for amount
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property amount
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Facture), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property description with lazy=false
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:description]
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for description
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property description
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for name
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for amount
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for description
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [facture]
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:51)] - Second pass for collection: ma.cigma.pfe.models.Client.factures
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindManyToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindManyToManySecondPass(CollectionBinder.java:1155)] - Binding a OneToMany: ma.cigma.pfe.models.Client.factures through an association table
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:68)] - Mapped collection key: TClients_id, element: factures_id
2022-03-04 13:19:31.093 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Facture
2022-03-04 13:19:31.109 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-03-04 13:19:31.109 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Facture
2022-03-04 13:19:31.109 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-03-04 13:19:31.109 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-03-04 13:19:31.109 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-03-04 13:19:31.109 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-03-04 13:19:31.109 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-03-04 13:19:31.109 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-03-04 13:19:31.109 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-03-04 13:19:31.109 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-03-04 13:19:31.109 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-03-04 13:19:31.124 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-03-04 13:19:31.124 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-03-04 13:19:31.124 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-03-04 13:19:31.124 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-03-04 13:19:31.124 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-03-04 13:19:31.124 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-03-04 13:19:31.124 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-03-04 13:19:31.124 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-03-04 13:19:31.124 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-03-04 13:19:31.124 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-03-04 13:19:31.124 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-03-04 13:19:31.124 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-03-04 13:19:31.124 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-03-04 13:19:31.124 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-03-04 13:19:31.124 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7249dadf
2022-03-04 13:19:31.124 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-03-04 13:19:31.124 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-03-04 13:19:31.124 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-03-04 13:19:31.124 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-03-04 13:19:31.124 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-03-04 13:19:31.124 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-03-04 13:19:31.124 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-03-04 13:19:31.124 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-03-04 13:19:31.124 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-03-04 13:19:31.124 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-03-04 13:19:31.124 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-03-04 13:19:31.124 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-03-04 13:19:31.124 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-03-04 13:19:31.140 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-03-04 13:19:31.140 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-03-04 13:19:31.140 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.202-b08, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_202\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6b739528, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=AE, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Studies\JEEProjects\TP9, java.runtime.version=1.8.0_202-b08, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\endorsed, java.io.tmpdir=C:\Users\toubk\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_202\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\toubk\AppData\Local\Microsoft\WindowsApps;;., javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unitClients, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\toubk, user.timezone=Asia/Muscat, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=toubk, java.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;D:\Studies\JEEProjects\TP9\target\classes;C:\Users\toubk\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\toubk\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\toubk\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\toubk\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\toubk\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\toubk\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\toubk\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\toubk\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\toubk\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\toubk\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.2\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_202\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_202, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-03-04 13:19:31.156 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-03-04 13:19:31.156 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-03-04 13:19:31.189 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-04 13:19:31.189 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-04 13:19:31.189 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-04 13:19:31.189 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-04 13:19:31.221 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-03-04 13:19:31.221 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-03-04 13:19:31.221 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-03-04 13:19:31.221 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-03-04 13:19:31.229 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:664)] - Static SQL for collection: ma.cigma.pfe.models.Client.factures
2022-03-04 13:19:31.229 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:666)] -  Row insert: insert into TClients_Facture (TClients_id, factures_id) values (?, ?)
2022-03-04 13:19:31.229 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:669)] -  Row update: update TClients_Facture set factures_id=? where TClients_id=? and factures_id=?
2022-03-04 13:19:31.229 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:672)] -  Row delete: delete from TClients_Facture where TClients_id=? and factures_id=?
2022-03-04 13:19:31.229 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:675)] -  One-shot delete: delete from TClients_Facture where TClients_id=?
2022-03-04 13:19:31.229 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-03-04 13:19:31.229 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TClients where id =?
2022-03-04 13:19:31.237 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select client_.id, client_.name as name2_1_ from TClients client_ where client_.id=?
2022-03-04 13:19:31.237 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-03-04 13:19:31.237 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-03-04 13:19:31.237 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-03-04 13:19:31.237 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TClients (name) values (?)
2022-03-04 13:19:31.245 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65f00478]
2022-03-04 13:19:31.245 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 13:19:31.253 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 13:19:31.253 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:19:31.261 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:19:31.261 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 13:19:31.261 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-04 13:19:31.261 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@759d81f3]
2022-03-04 13:19:31.261 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 13:19:31.261 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 13:19:31.261 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:19:31.261 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:19:31.277 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 13:19:31.277 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [READ]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-04 13:19:31.277 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a4c638d]
2022-03-04 13:19:31.277 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 13:19:31.277 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 13:19:31.277 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:19:31.277 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:19:31.277 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 13:19:31.277 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 13:19:31.277 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aed0151]
2022-03-04 13:19:31.277 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 13:19:31.277 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 13:19:31.277 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:19:31.277 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:19:31.277 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 13:19:31.277 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_NOWAIT]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 13:19:31.277 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f12e153]
2022-03-04 13:19:31.277 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 13:19:31.277 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 13:19:31.277 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_SKIPLOCKED]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a101b1c]
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [FORCE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29f0802c]
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_READ]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? lock in share mode
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60f2e0bd]
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_WRITE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b410923]
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@203dd56b]
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d64b553]
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-04 13:19:31.281 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-04 13:19:31.298 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Client: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-04 13:19:31.299 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Client: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-04 13:19:31.300 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Facture
2022-03-04 13:19:31.300 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from Facture where id =?
2022-03-04 13:19:31.300 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.description as descript3_0_ from Facture facture_ where facture_.id=?
2022-03-04 13:19:31.301 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into Facture (amount, description, id) values (?, ?, ?)
2022-03-04 13:19:31.301 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update Facture set amount=?, description=? where id=?
2022-03-04 13:19:31.301 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from Facture where id=?
2022-03-04 13:19:31.301 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into Facture (amount, description) values (?, ?)
2022-03-04 13:19:31.301 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ec7d8b3]
2022-03-04 13:19:31.302 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 13:19:31.302 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 13:19:31.302 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:19:31.302 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:19:31.303 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 13:19:31.303 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-04 13:19:31.303 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bb3131b]
2022-03-04 13:19:31.303 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 13:19:31.303 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 13:19:31.304 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:19:31.304 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:19:31.304 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 13:19:31.304 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-04 13:19:31.305 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74fef3f7]
2022-03-04 13:19:31.305 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 13:19:31.305 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 13:19:31.305 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:19:31.305 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:19:31.306 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 13:19:31.306 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-04 13:19:31.306 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69eb86b4]
2022-03-04 13:19:31.307 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 13:19:31.307 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 13:19:31.307 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:19:31.307 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:19:31.308 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 13:19:31.308 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_NOWAIT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-04 13:19:31.308 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bb8f9e2]
2022-03-04 13:19:31.308 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 13:19:31.308 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 13:19:31.309 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:19:31.309 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:19:31.309 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 13:19:31.309 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_SKIPLOCKED]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-04 13:19:31.309 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f78de22]
2022-03-04 13:19:31.310 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 13:19:31.310 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 13:19:31.310 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:19:31.310 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:19:31.311 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 13:19:31.311 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [FORCE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-04 13:19:31.311 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d8539de]
2022-03-04 13:19:31.311 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 13:19:31.312 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 13:19:31.312 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:19:31.312 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:19:31.312 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 13:19:31.312 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? lock in share mode
2022-03-04 13:19:31.313 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@272a179c]
2022-03-04 13:19:31.313 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 13:19:31.313 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 13:19:31.313 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:19:31.314 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:19:31.314 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 13:19:31.314 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_WRITE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-04 13:19:31.314 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67207d8a]
2022-03-04 13:19:31.314 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 13:19:31.315 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 13:19:31.315 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:19:31.315 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:19:31.315 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 13:19:31.316 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-04 13:19:31.316 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c2a69b4]
2022-03-04 13:19:31.316 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 13:19:31.316 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 13:19:31.316 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:19:31.316 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:19:31.316 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 13:19:31.316 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-04 13:19:31.317 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@648ee871]
2022-03-04 13:19:31.317 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 13:19:31.317 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 13:19:31.317 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:19:31.317 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:19:31.317 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-04 13:19:31.317 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-04 13:19:31.318 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-04 13:19:31.318 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-04 13:19:31.322 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ad5923a]
2022-03-04 13:19:31.323 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5395ea39]
2022-03-04 13:19:31.324 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-04 13:19:31.324 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-04 13:19:31.324 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-04 13:19:31.326 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-04 13:19:31.327 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.Client.factures)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.Client.factures])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.Client.factures].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.Client.factures)
          - SQL table alias mapping - factures0_
          - alias suffix - 0_
          - suffixed key columns - {TClients1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Facture)
                - SQL table alias mapping - facture1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2022-03-04 13:19:31.327 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:96)] - Static select for collection ma.cigma.pfe.models.Client.factures: select factures0_.TClients_id as TClients1_2_0_, factures0_.factures_id as factures2_2_0_, facture1_.id as id1_0_1_, facture1_.amount as amount2_0_1_, facture1_.description as descript3_0_1_ from TClients_Facture factures0_ inner join Facture facture1_ on factures0_.factures_id=facture1_.id where factures0_.TClients_id=?
2022-03-04 13:19:31.327 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-03-04 13:19:31.329 INFO [main][org.hibernate.tool.hbm2ddl.SchemaUpdate] [execute] [org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:101)] - HHH000228: Running hbm2ddl schema update
2022-03-04 13:19:31.369 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:505)] - No alter strings for table : Facture
2022-03-04 13:19:31.385 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:505)] - No alter strings for table : TClients
2022-03-04 13:19:31.385 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:505)] - No alter strings for table : TClients_Facture
2022-03-04 13:19:31.428 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-03-04 13:19:31.428 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-03-04 13:19:31.428 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-03-04 13:19:31.428 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-03-04 13:19:31.428 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-03-04 13:19:31.428 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@54da32dc
2022-03-04 13:19:31.428 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: 4df1f671-b2da-4eb9-bd03-284e1fba829a (<unnamed>)
2022-03-04 13:19:31.428 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-03-04 13:19:31.443 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-03-04 13:19:31.459 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@383790cf
2022-03-04 13:19:31.459 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unitClients 
2022-03-04 13:19:31.512 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-03-04 13:20:00.978 DEBUG [pool-2-thread-1][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [validate] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.validate(PooledConnections.java:49)] - Connection pool now considered primed; min-size will be maintained
2022-03-10 21:46:08.717 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@77846d2c
2022-03-10 21:46:08.783 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-10 21:46:08.800 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-10 21:46:08.816 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'ServiceID'
2022-03-10 21:46:08.816 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'DaoID'
2022-03-10 21:46:08.816 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-10 21:46:08.850 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-10 21:46:08.891 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-10 21:46:08.891 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unitClients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unitClients]
2022-03-10 21:46:08.891 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unitClients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-10 21:46:08.898 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unitClients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP9/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: update
		javax.persistence.jdbc.user: root]
2022-03-10 21:46:08.898 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-10 21:46:08.898 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-10 21:46:08.898 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-10 21:46:08.898 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-10 21:46:08.933 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-10 21:46:08.933 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-10 21:46:08.933 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-10 21:46:08.933 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-10 21:46:08.950 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-10 21:46:08.967 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-10 21:46:09.004 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2022-03-10 21:46:09.004 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2022-03-10 21:46:09.004 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4082ba93
2022-03-10 21:46:09.004 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@43df23d3
2022-03-10 21:46:09.004 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@305ffe9e
2022-03-10 21:46:09.004 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@7ae0a9ec
2022-03-10 21:46:09.004 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@2a693f59
2022-03-10 21:46:09.004 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@2a693f59
2022-03-10 21:46:09.004 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2a693f59
2022-03-10 21:46:09.004 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@723ca036
2022-03-10 21:46:09.004 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@723ca036
2022-03-10 21:46:09.004 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@723ca036
2022-03-10 21:46:09.004 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@4d0d9fe7
2022-03-10 21:46:09.016 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@4d0d9fe7
2022-03-10 21:46:09.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d0d9fe7
2022-03-10 21:46:09.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@66982506
2022-03-10 21:46:09.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@66982506
2022-03-10 21:46:09.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@66982506
2022-03-10 21:46:09.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4f32a3ad
2022-03-10 21:46:09.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4f32a3ad
2022-03-10 21:46:09.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4f32a3ad
2022-03-10 21:46:09.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@673fdbce
2022-03-10 21:46:09.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@673fdbce
2022-03-10 21:46:09.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@673fdbce
2022-03-10 21:46:09.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@3de8f619
2022-03-10 21:46:09.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@3de8f619
2022-03-10 21:46:09.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3de8f619
2022-03-10 21:46:09.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6f204a1a
2022-03-10 21:46:09.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6f204a1a
2022-03-10 21:46:09.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3cce5371
2022-03-10 21:46:09.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3cce5371
2022-03-10 21:46:09.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@338fc1d8
2022-03-10 21:46:09.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@338fc1d8
2022-03-10 21:46:09.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@480d3575
2022-03-10 21:46:09.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@65f8f5ae
2022-03-10 21:46:09.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@5c7933ad
2022-03-10 21:46:09.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5c7933ad
2022-03-10 21:46:09.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@33ecda92
2022-03-10 21:46:09.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@33ecda92
2022-03-10 21:46:09.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@55de24cc
2022-03-10 21:46:09.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@55de24cc
2022-03-10 21:46:09.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@25df00a0
2022-03-10 21:46:09.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@25df00a0
2022-03-10 21:46:09.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@25df00a0
2022-03-10 21:46:09.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5884a914
2022-03-10 21:46:09.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@1a4927d6
2022-03-10 21:46:09.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1a4927d6
2022-03-10 21:46:09.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1a4927d6
2022-03-10 21:46:09.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@97e93f1
2022-03-10 21:46:09.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@624ea235
2022-03-10 21:46:09.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@624ea235
2022-03-10 21:46:09.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@1b1cfb87
2022-03-10 21:46:09.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1b1cfb87
2022-03-10 21:46:09.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@20b2475a
2022-03-10 21:46:09.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@20b2475a
2022-03-10 21:46:09.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@58e1d9d
2022-03-10 21:46:09.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@58e1d9d
2022-03-10 21:46:09.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@28cda624
2022-03-10 21:46:09.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@28cda624
2022-03-10 21:46:09.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@126253fd
2022-03-10 21:46:09.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@5276d6ee
2022-03-10 21:46:09.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@5276d6ee
2022-03-10 21:46:09.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@5276d6ee
2022-03-10 21:46:09.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4dc27487
2022-03-10 21:46:09.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4dc27487
2022-03-10 21:46:09.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4dc27487
2022-03-10 21:46:09.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@6933b6c6
2022-03-10 21:46:09.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@1f9e9475
2022-03-10 21:46:09.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@1f9e9475
2022-03-10 21:46:09.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@1f9e9475
2022-03-10 21:46:09.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@14dd7b39
2022-03-10 21:46:09.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@14dd7b39
2022-03-10 21:46:09.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@14dd7b39
2022-03-10 21:46:09.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@51891008
2022-03-10 21:46:09.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@12591ac8
2022-03-10 21:46:09.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@f58853c
2022-03-10 21:46:09.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@f58853c
2022-03-10 21:46:09.049 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@700fb871
2022-03-10 21:46:09.049 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@503f91c3
2022-03-10 21:46:09.049 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@503f91c3
2022-03-10 21:46:09.049 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@2438dcd
2022-03-10 21:46:09.049 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2438dcd
2022-03-10 21:46:09.049 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@64b0598
2022-03-10 21:46:09.049 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@50029372
2022-03-10 21:46:09.049 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@7f2cfe3f
2022-03-10 21:46:09.049 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@2bdd8394
2022-03-10 21:46:09.049 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2bdd8394
2022-03-10 21:46:09.049 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2f01783a
2022-03-10 21:46:09.049 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@68878f6d
2022-03-10 21:46:09.049 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@41488b16
2022-03-10 21:46:09.049 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@a8ef162
2022-03-10 21:46:09.049 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2eea88a1
2022-03-10 21:46:09.049 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7ac296f6
2022-03-10 21:46:09.049 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7fd7a283
2022-03-10 21:46:09.049 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@22f59fa
2022-03-10 21:46:09.049 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-10 21:46:09.064 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-10 21:46:09.064 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-03-10 21:46:09.064 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-10 21:46:09.064 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-10 21:46:09.064 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-10 21:46:09.566 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.28
      major : 8
      minor : 0
2022-03-10 21:46:09.566 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.18 (Revision: fef2894d751d47223192b706977b4a5bc41e6be4)
      major : 8
      minor : 0
2022-03-10 21:46:09.566 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-03-10 21:46:09.581 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-03-10 21:46:09.581 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-03-10 21:46:09.597 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-03-10 21:46:09.597 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-03-10 21:46:09.613 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-03-10 21:46:09.613 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-03-10 21:46:09.613 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-10 21:46:09.613 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-10 21:46:09.613 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-03-10 21:46:09.613 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-03-10 21:46:09.613 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-03-10 21:46:09.613 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-10 21:46:09.613 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-03-10 21:46:09.613 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-03-10 21:46:09.613 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-03-10 21:46:09.628 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-03-10 21:46:09.628 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-10 21:46:09.628 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-03-10 21:46:09.628 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-03-10 21:46:09.644 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-03-10 21:46:09.660 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-03-10 21:46:09.660 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name TClients
2022-03-10 21:46:09.660 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-03-10 21:46:09.676 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-03-10 21:46:09.676 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-03-10 21:46:09.682 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-03-10 21:46:09.682 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-03-10 21:46:09.682 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-03-10 21:46:09.682 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-03-10 21:46:09.682 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures, insertable=true, updatable=true, unique=false}
2022-03-10 21:46:09.682 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-03-10 21:46:09.692 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-03-10 21:46:09.692 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures_KEY, insertable=true, updatable=true, unique=false}
2022-03-10 21:46:09.692 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='factures_KEY', referencedColumn='null', mappedBy='null'}
2022-03-10 21:46:09.692 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-03-10 21:46:09.692 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-03-10 21:46:09.692 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:386)] - Collection role: ma.cigma.pfe.models.Client.factures
2022-03-10 21:46:09.692 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property factures
2022-03-10 21:46:09.692 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-03-10 21:46:09.692 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property name with lazy=false
2022-03-10 21:46:09.692 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-03-10 21:46:09.692 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for name
2022-03-10 21:46:09.692 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property name
2022-03-10 21:46:09.692 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Facture
2022-03-10 21:46:09.692 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-03-10 21:46:09.692 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name Facture
2022-03-10 21:46:09.692 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Facture on table Facture
2022-03-10 21:46:09.699 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Facture), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-03-10 21:46:09.699 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-03-10 21:46:09.699 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:id]
2022-03-10 21:46:09.699 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-03-10 21:46:09.699 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-03-10 21:46:09.699 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Facture), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-03-10 21:46:09.699 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property amount with lazy=false
2022-03-10 21:46:09.699 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:amount]
2022-03-10 21:46:09.699 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for amount
2022-03-10 21:46:09.699 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property amount
2022-03-10 21:46:09.699 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Facture), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-03-10 21:46:09.699 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property description with lazy=false
2022-03-10 21:46:09.699 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:description]
2022-03-10 21:46:09.699 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for description
2022-03-10 21:46:09.699 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property description
2022-03-10 21:46:09.699 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-03-10 21:46:09.699 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for name
2022-03-10 21:46:09.699 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-03-10 21:46:09.699 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for amount
2022-03-10 21:46:09.699 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for description
2022-03-10 21:46:09.699 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-03-10 21:46:09.699 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [facture]
2022-03-10 21:46:09.699 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:51)] - Second pass for collection: ma.cigma.pfe.models.Client.factures
2022-03-10 21:46:09.699 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindManyToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindManyToManySecondPass(CollectionBinder.java:1155)] - Binding a OneToMany: ma.cigma.pfe.models.Client.factures through an association table
2022-03-10 21:46:09.699 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:68)] - Mapped collection key: TClients_id, element: factures_id
2022-03-10 21:46:09.699 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Facture
2022-03-10 21:46:09.699 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-03-10 21:46:09.699 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Facture
2022-03-10 21:46:09.699 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-03-10 21:46:09.715 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-03-10 21:46:09.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-03-10 21:46:09.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-03-10 21:46:09.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-03-10 21:46:09.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-03-10 21:46:09.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-03-10 21:46:09.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-03-10 21:46:09.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-03-10 21:46:09.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-03-10 21:46:09.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-03-10 21:46:09.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-03-10 21:46:09.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-03-10 21:46:09.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-03-10 21:46:09.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-03-10 21:46:09.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-03-10 21:46:09.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-03-10 21:46:09.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-03-10 21:46:09.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-03-10 21:46:09.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-03-10 21:46:09.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-03-10 21:46:09.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-03-10 21:46:09.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-03-10 21:46:09.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1827a871
2022-03-10 21:46:09.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-03-10 21:46:09.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-03-10 21:46:09.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-03-10 21:46:09.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-03-10 21:46:09.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-03-10 21:46:09.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-03-10 21:46:09.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-03-10 21:46:09.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-03-10 21:46:09.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-03-10 21:46:09.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-03-10 21:46:09.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-03-10 21:46:09.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-03-10 21:46:09.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-03-10 21:46:09.749 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-03-10 21:46:09.749 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-03-10 21:46:09.749 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.202-b08, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_202\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@13c612bd, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=AE, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Studies\JEEProjects\TP9, java.runtime.version=1.8.0_202-b08, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\endorsed, java.io.tmpdir=C:\Users\toubk\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_202\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\toubk\AppData\Local\Microsoft\WindowsApps;;., javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unitClients, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\toubk, user.timezone=Asia/Muscat, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=toubk, java.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;D:\Studies\JEEProjects\TP9\target\classes;C:\Users\toubk\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\toubk\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\toubk\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\toubk\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\toubk\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\toubk\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\toubk\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\toubk\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\toubk\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\toubk\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.2\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_202\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_202, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-03-10 21:46:09.749 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-03-10 21:46:09.749 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-03-10 21:46:09.783 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-10 21:46:09.783 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-10 21:46:09.803 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-10 21:46:09.803 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-10 21:46:09.812 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-03-10 21:46:09.812 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-03-10 21:46:09.812 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-03-10 21:46:09.812 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-03-10 21:46:09.828 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:664)] - Static SQL for collection: ma.cigma.pfe.models.Client.factures
2022-03-10 21:46:09.828 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:666)] -  Row insert: insert into TClients_Facture (TClients_id, factures_id) values (?, ?)
2022-03-10 21:46:09.828 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:669)] -  Row update: update TClients_Facture set factures_id=? where TClients_id=? and factures_id=?
2022-03-10 21:46:09.828 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:672)] -  Row delete: delete from TClients_Facture where TClients_id=? and factures_id=?
2022-03-10 21:46:09.828 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:675)] -  One-shot delete: delete from TClients_Facture where TClients_id=?
2022-03-10 21:46:09.828 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-03-10 21:46:09.828 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TClients where id =?
2022-03-10 21:46:09.828 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select client_.id, client_.name as name2_1_ from TClients client_ where client_.id=?
2022-03-10 21:46:09.828 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-03-10 21:46:09.828 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-03-10 21:46:09.828 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-03-10 21:46:09.828 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TClients (name) values (?)
2022-03-10 21:46:09.844 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49b07ee3]
2022-03-10 21:46:09.844 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-10 21:46:09.844 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-10 21:46:09.844 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22101c80]
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [READ]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@759d81f3]
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a4c638d]
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_NOWAIT]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aed0151]
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_SKIPLOCKED]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f12e153]
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [FORCE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a101b1c]
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_READ]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? lock in share mode
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29f0802c]
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_WRITE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60f2e0bd]
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b410923]
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@203dd56b]
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-10 21:46:09.866 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:46:09.881 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:46:09.882 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-10 21:46:09.882 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-10 21:46:09.891 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Client: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-10 21:46:09.891 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Client: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-10 21:46:09.891 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Facture
2022-03-10 21:46:09.891 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from Facture where id =?
2022-03-10 21:46:09.891 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.description as descript3_0_ from Facture facture_ where facture_.id=?
2022-03-10 21:46:09.891 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into Facture (amount, description, id) values (?, ?, ?)
2022-03-10 21:46:09.891 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update Facture set amount=?, description=? where id=?
2022-03-10 21:46:09.891 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from Facture where id=?
2022-03-10 21:46:09.891 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into Facture (amount, description) values (?, ?)
2022-03-10 21:46:09.891 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ecd665]
2022-03-10 21:46:09.891 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-10 21:46:09.891 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-10 21:46:09.891 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:46:09.891 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ec7d8b3]
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bb3131b]
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74fef3f7]
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_NOWAIT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69eb86b4]
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_SKIPLOCKED]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bb8f9e2]
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [FORCE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f78de22]
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? lock in share mode
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d8539de]
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_WRITE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@272a179c]
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67207d8a]
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c2a69b4]
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-10 21:46:09.897 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-10 21:46:09.913 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@720653c2]
2022-03-10 21:46:09.913 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4463d9d3]
2022-03-10 21:46:09.913 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-10 21:46:09.913 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-10 21:46:09.913 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:46:09.913 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:46:09.913 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.Client.factures)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.Client.factures])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.Client.factures].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.Client.factures)
          - SQL table alias mapping - factures0_
          - alias suffix - 0_
          - suffixed key columns - {TClients1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Facture)
                - SQL table alias mapping - facture1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2022-03-10 21:46:09.913 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:96)] - Static select for collection ma.cigma.pfe.models.Client.factures: select factures0_.TClients_id as TClients1_2_0_, factures0_.factures_id as factures2_2_0_, facture1_.id as id1_0_1_, facture1_.amount as amount2_0_1_, facture1_.description as descript3_0_1_ from TClients_Facture factures0_ inner join Facture facture1_ on factures0_.factures_id=facture1_.id where factures0_.TClients_id=?
2022-03-10 21:46:09.913 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-03-10 21:46:09.913 INFO [main][org.hibernate.tool.hbm2ddl.SchemaUpdate] [execute] [org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:101)] - HHH000228: Running hbm2ddl schema update
2022-03-10 21:46:09.961 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:505)] - No alter strings for table : Facture
2022-03-10 21:46:09.977 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:505)] - No alter strings for table : TClients
2022-03-10 21:46:09.977 INFO [main][org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl] [processGetTableResults] [org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processGetTableResults(InformationExtractorJdbcDatabaseMetaDataImpl.java:338)] - HHH000262: Table not found: TClients_Facture
2022-03-10 21:46:09.991 INFO [main][org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl] [processGetTableResults] [org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processGetTableResults(InformationExtractorJdbcDatabaseMetaDataImpl.java:338)] - HHH000262: Table not found: TClients_Facture
2022-03-10 21:46:10.009 INFO [main][org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl] [processGetTableResults] [org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processGetTableResults(InformationExtractorJdbcDatabaseMetaDataImpl.java:338)] - HHH000262: Table not found: TClients_Facture
2022-03-10 21:46:10.009 INFO [main][org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl] [processGetTableResults] [org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processGetTableResults(InformationExtractorJdbcDatabaseMetaDataImpl.java:338)] - HHH000262: Table not found: TClients_Facture
2022-03-10 21:46:10.119 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-03-10 21:46:10.119 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-03-10 21:46:10.119 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-03-10 21:46:10.119 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-03-10 21:46:10.119 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-03-10 21:46:10.119 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1e6308a9
2022-03-10 21:46:10.119 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: 80a6600a-b3e1-43a1-baee-b67923643d79 (<unnamed>)
2022-03-10 21:46:10.119 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-03-10 21:46:10.119 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-03-10 21:46:10.151 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@2571066a
2022-03-10 21:46:10.151 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unitClients 
2022-03-10 21:46:10.182 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-03-10 21:48:57.678 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@77846d2c
2022-03-10 21:48:57.742 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-10 21:48:57.758 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-10 21:48:57.773 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'ServiceID'
2022-03-10 21:48:57.773 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'DaoID'
2022-03-10 21:48:57.773 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-10 21:48:57.808 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-10 21:48:57.844 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-10 21:48:57.844 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unitClients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unitClients]
2022-03-10 21:48:57.844 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unitClients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-10 21:48:57.844 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unitClients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP9/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: update
		javax.persistence.jdbc.user: root]
2022-03-10 21:48:57.844 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-10 21:48:57.844 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-10 21:48:57.844 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-10 21:48:57.844 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-10 21:48:57.876 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-10 21:48:57.876 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-10 21:48:57.876 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-10 21:48:57.892 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-10 21:48:57.909 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-10 21:48:57.911 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-10 21:48:57.947 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2022-03-10 21:48:57.947 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2022-03-10 21:48:57.947 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4082ba93
2022-03-10 21:48:57.965 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@43df23d3
2022-03-10 21:48:57.965 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@305ffe9e
2022-03-10 21:48:57.965 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@7ae0a9ec
2022-03-10 21:48:57.968 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@2a693f59
2022-03-10 21:48:57.969 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@2a693f59
2022-03-10 21:48:57.969 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2a693f59
2022-03-10 21:48:57.969 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@723ca036
2022-03-10 21:48:57.969 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@723ca036
2022-03-10 21:48:57.969 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@723ca036
2022-03-10 21:48:57.971 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@4d0d9fe7
2022-03-10 21:48:57.971 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@4d0d9fe7
2022-03-10 21:48:57.971 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d0d9fe7
2022-03-10 21:48:57.971 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@66982506
2022-03-10 21:48:57.971 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@66982506
2022-03-10 21:48:57.971 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@66982506
2022-03-10 21:48:57.971 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4f32a3ad
2022-03-10 21:48:57.971 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4f32a3ad
2022-03-10 21:48:57.976 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4f32a3ad
2022-03-10 21:48:57.977 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@673fdbce
2022-03-10 21:48:57.978 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@673fdbce
2022-03-10 21:48:57.978 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@673fdbce
2022-03-10 21:48:57.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@3de8f619
2022-03-10 21:48:57.981 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@3de8f619
2022-03-10 21:48:57.981 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3de8f619
2022-03-10 21:48:57.982 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6f204a1a
2022-03-10 21:48:57.982 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6f204a1a
2022-03-10 21:48:57.984 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3cce5371
2022-03-10 21:48:57.984 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3cce5371
2022-03-10 21:48:57.984 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@338fc1d8
2022-03-10 21:48:57.984 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@338fc1d8
2022-03-10 21:48:57.984 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@480d3575
2022-03-10 21:48:57.984 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@65f8f5ae
2022-03-10 21:48:57.984 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@5c7933ad
2022-03-10 21:48:57.984 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5c7933ad
2022-03-10 21:48:57.984 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@33ecda92
2022-03-10 21:48:57.984 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@33ecda92
2022-03-10 21:48:57.984 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@55de24cc
2022-03-10 21:48:57.984 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@55de24cc
2022-03-10 21:48:57.994 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@25df00a0
2022-03-10 21:48:57.994 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@25df00a0
2022-03-10 21:48:57.994 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@25df00a0
2022-03-10 21:48:57.994 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5884a914
2022-03-10 21:48:57.994 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@1a4927d6
2022-03-10 21:48:57.994 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1a4927d6
2022-03-10 21:48:57.994 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1a4927d6
2022-03-10 21:48:57.994 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@97e93f1
2022-03-10 21:48:57.994 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@624ea235
2022-03-10 21:48:57.994 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@624ea235
2022-03-10 21:48:57.994 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@1b1cfb87
2022-03-10 21:48:57.994 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1b1cfb87
2022-03-10 21:48:57.994 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@20b2475a
2022-03-10 21:48:57.994 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@20b2475a
2022-03-10 21:48:57.994 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@58e1d9d
2022-03-10 21:48:57.994 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@58e1d9d
2022-03-10 21:48:57.994 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@28cda624
2022-03-10 21:48:57.994 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@28cda624
2022-03-10 21:48:57.994 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@126253fd
2022-03-10 21:48:58.009 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@5276d6ee
2022-03-10 21:48:58.010 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@5276d6ee
2022-03-10 21:48:58.010 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@5276d6ee
2022-03-10 21:48:58.011 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4dc27487
2022-03-10 21:48:58.012 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4dc27487
2022-03-10 21:48:58.012 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4dc27487
2022-03-10 21:48:58.013 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@6933b6c6
2022-03-10 21:48:58.013 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@1f9e9475
2022-03-10 21:48:58.013 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@1f9e9475
2022-03-10 21:48:58.013 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@1f9e9475
2022-03-10 21:48:58.013 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@14dd7b39
2022-03-10 21:48:58.013 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@14dd7b39
2022-03-10 21:48:58.013 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@14dd7b39
2022-03-10 21:48:58.013 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@51891008
2022-03-10 21:48:58.013 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@12591ac8
2022-03-10 21:48:58.019 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@f58853c
2022-03-10 21:48:58.019 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@f58853c
2022-03-10 21:48:58.019 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@700fb871
2022-03-10 21:48:58.019 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@503f91c3
2022-03-10 21:48:58.019 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@503f91c3
2022-03-10 21:48:58.019 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@2438dcd
2022-03-10 21:48:58.019 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2438dcd
2022-03-10 21:48:58.019 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@64b0598
2022-03-10 21:48:58.019 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@50029372
2022-03-10 21:48:58.019 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@7f2cfe3f
2022-03-10 21:48:58.028 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@2bdd8394
2022-03-10 21:48:58.028 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2bdd8394
2022-03-10 21:48:58.028 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2f01783a
2022-03-10 21:48:58.028 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@68878f6d
2022-03-10 21:48:58.028 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@41488b16
2022-03-10 21:48:58.028 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@a8ef162
2022-03-10 21:48:58.028 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2eea88a1
2022-03-10 21:48:58.028 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7ac296f6
2022-03-10 21:48:58.028 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7fd7a283
2022-03-10 21:48:58.028 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@22f59fa
2022-03-10 21:48:58.028 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-10 21:48:58.040 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-10 21:48:58.040 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-03-10 21:48:58.040 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-10 21:48:58.045 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-10 21:48:58.045 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-10 21:48:58.526 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.28
      major : 8
      minor : 0
2022-03-10 21:48:58.526 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.18 (Revision: fef2894d751d47223192b706977b4a5bc41e6be4)
      major : 8
      minor : 0
2022-03-10 21:48:58.526 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-03-10 21:48:58.542 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-03-10 21:48:58.542 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-03-10 21:48:58.558 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-03-10 21:48:58.558 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-03-10 21:48:58.573 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-03-10 21:48:58.573 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-03-10 21:48:58.573 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-10 21:48:58.573 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-10 21:48:58.573 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-03-10 21:48:58.573 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-03-10 21:48:58.573 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-03-10 21:48:58.573 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-10 21:48:58.573 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-03-10 21:48:58.573 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-03-10 21:48:58.573 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-03-10 21:48:58.573 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-03-10 21:48:58.573 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-10 21:48:58.573 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-03-10 21:48:58.589 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-03-10 21:48:58.609 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-03-10 21:48:58.609 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-03-10 21:48:58.621 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name TClients
2022-03-10 21:48:58.621 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-03-10 21:48:58.637 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-03-10 21:48:58.637 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-03-10 21:48:58.637 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-03-10 21:48:58.637 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-03-10 21:48:58.637 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-03-10 21:48:58.637 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-03-10 21:48:58.637 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures, insertable=true, updatable=true, unique=false}
2022-03-10 21:48:58.637 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures_KEY, insertable=true, updatable=true, unique=false}
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='factures_KEY', referencedColumn='null', mappedBy='null'}
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:386)] - Collection role: ma.cigma.pfe.models.Client.factures
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property factures
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property name with lazy=false
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for name
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property name
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Facture
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name Facture
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Facture on table Facture
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Facture), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:id]
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Facture), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property amount with lazy=false
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:amount]
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for amount
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property amount
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Facture), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property description with lazy=false
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:description]
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for description
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property description
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for name
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for amount
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for description
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [facture]
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:51)] - Second pass for collection: ma.cigma.pfe.models.Client.factures
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindManyToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindManyToManySecondPass(CollectionBinder.java:1155)] - Binding a OneToMany: ma.cigma.pfe.models.Client.factures through an association table
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:68)] - Mapped collection key: TClients_id, element: factures_id
2022-03-10 21:48:58.653 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Facture
2022-03-10 21:48:58.669 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-03-10 21:48:58.669 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Facture
2022-03-10 21:48:58.669 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-03-10 21:48:58.669 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-03-10 21:48:58.669 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-03-10 21:48:58.669 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-03-10 21:48:58.669 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-03-10 21:48:58.669 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-03-10 21:48:58.669 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-03-10 21:48:58.669 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-03-10 21:48:58.669 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-03-10 21:48:58.669 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-03-10 21:48:58.669 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-03-10 21:48:58.669 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-03-10 21:48:58.669 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-03-10 21:48:58.669 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-03-10 21:48:58.669 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-03-10 21:48:58.669 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-03-10 21:48:58.669 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-03-10 21:48:58.669 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-03-10 21:48:58.669 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-03-10 21:48:58.669 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-03-10 21:48:58.684 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-03-10 21:48:58.684 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-03-10 21:48:58.684 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-03-10 21:48:58.684 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1827a871
2022-03-10 21:48:58.684 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-03-10 21:48:58.684 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-03-10 21:48:58.684 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-03-10 21:48:58.684 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-03-10 21:48:58.684 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-03-10 21:48:58.684 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-03-10 21:48:58.684 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-03-10 21:48:58.684 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-03-10 21:48:58.684 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-03-10 21:48:58.684 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-03-10 21:48:58.684 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-03-10 21:48:58.684 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-03-10 21:48:58.684 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-03-10 21:48:58.700 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-03-10 21:48:58.700 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-03-10 21:48:58.700 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.202-b08, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_202\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@13c612bd, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=AE, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Studies\JEEProjects\TP9, java.runtime.version=1.8.0_202-b08, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\endorsed, java.io.tmpdir=C:\Users\toubk\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_202\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\toubk\AppData\Local\Microsoft\WindowsApps;;., javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unitClients, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\toubk, user.timezone=Asia/Muscat, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=toubk, java.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;D:\Studies\JEEProjects\TP9\target\classes;C:\Users\toubk\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\toubk\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\toubk\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\toubk\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\toubk\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\toubk\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\toubk\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\toubk\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\toubk\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\toubk\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.2\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_202\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_202, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-03-10 21:48:58.716 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-03-10 21:48:58.716 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-03-10 21:48:58.731 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-10 21:48:58.731 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-10 21:48:58.747 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-10 21:48:58.747 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-10 21:48:58.761 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-03-10 21:48:58.761 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-03-10 21:48:58.761 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-03-10 21:48:58.761 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-03-10 21:48:58.777 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:664)] - Static SQL for collection: ma.cigma.pfe.models.Client.factures
2022-03-10 21:48:58.777 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:666)] -  Row insert: insert into TClients_Facture (TClients_id, factures_id) values (?, ?)
2022-03-10 21:48:58.777 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:669)] -  Row update: update TClients_Facture set factures_id=? where TClients_id=? and factures_id=?
2022-03-10 21:48:58.777 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:672)] -  Row delete: delete from TClients_Facture where TClients_id=? and factures_id=?
2022-03-10 21:48:58.777 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:675)] -  One-shot delete: delete from TClients_Facture where TClients_id=?
2022-03-10 21:48:58.777 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-03-10 21:48:58.777 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TClients where id =?
2022-03-10 21:48:58.777 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select client_.id, client_.name as name2_1_ from TClients client_ where client_.id=?
2022-03-10 21:48:58.777 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-03-10 21:48:58.777 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-03-10 21:48:58.777 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-03-10 21:48:58.777 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TClients (name) values (?)
2022-03-10 21:48:58.794 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49b07ee3]
2022-03-10 21:48:58.809 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-10 21:48:58.810 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-10 21:48:58.810 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:48:58.810 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:48:58.810 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-10 21:48:58.810 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-10 21:48:58.810 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22101c80]
2022-03-10 21:48:58.810 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-10 21:48:58.810 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-10 21:48:58.810 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:48:58.810 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:48:58.810 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-10 21:48:58.810 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [READ]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-10 21:48:58.810 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@759d81f3]
2022-03-10 21:48:58.826 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-10 21:48:58.826 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-10 21:48:58.826 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:48:58.826 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:48:58.826 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a4c638d]
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_NOWAIT]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aed0151]
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_SKIPLOCKED]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f12e153]
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [FORCE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a101b1c]
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_READ]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? lock in share mode
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29f0802c]
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_WRITE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60f2e0bd]
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b410923]
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@203dd56b]
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-10 21:48:58.827 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-10 21:48:58.842 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Client: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Client: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Facture
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from Facture where id =?
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.description as descript3_0_ from Facture facture_ where facture_.id=?
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into Facture (amount, description, id) values (?, ?, ?)
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update Facture set amount=?, description=? where id=?
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from Facture where id=?
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into Facture (amount, description) values (?, ?)
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ecd665]
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ec7d8b3]
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bb3131b]
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74fef3f7]
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_NOWAIT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69eb86b4]
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_SKIPLOCKED]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bb8f9e2]
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [FORCE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f78de22]
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? lock in share mode
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d8539de]
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_WRITE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@272a179c]
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67207d8a]
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c2a69b4]
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-10 21:48:58.843 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-10 21:48:58.859 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@720653c2]
2022-03-10 21:48:58.859 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4463d9d3]
2022-03-10 21:48:58.859 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-10 21:48:58.859 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-10 21:48:58.859 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-10 21:48:58.859 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-10 21:48:58.859 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.Client.factures)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.Client.factures])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.Client.factures].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.Client.factures)
          - SQL table alias mapping - factures0_
          - alias suffix - 0_
          - suffixed key columns - {TClients1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Facture)
                - SQL table alias mapping - facture1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2022-03-10 21:48:58.859 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:96)] - Static select for collection ma.cigma.pfe.models.Client.factures: select factures0_.TClients_id as TClients1_2_0_, factures0_.factures_id as factures2_2_0_, facture1_.id as id1_0_1_, facture1_.amount as amount2_0_1_, facture1_.description as descript3_0_1_ from TClients_Facture factures0_ inner join Facture facture1_ on factures0_.factures_id=facture1_.id where factures0_.TClients_id=?
2022-03-10 21:48:58.859 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-03-10 21:48:58.859 INFO [main][org.hibernate.tool.hbm2ddl.SchemaUpdate] [execute] [org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:101)] - HHH000228: Running hbm2ddl schema update
2022-03-10 21:48:58.927 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:505)] - No alter strings for table : Facture
2022-03-10 21:48:58.927 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:505)] - No alter strings for table : TClients
2022-03-10 21:48:58.944 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:505)] - No alter strings for table : TClients_Facture
2022-03-10 21:48:58.993 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-03-10 21:48:58.993 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-03-10 21:48:58.993 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-03-10 21:48:58.993 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-03-10 21:48:58.993 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-03-10 21:48:58.993 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3a095ec0
2022-03-10 21:48:58.993 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: e5b5237a-25b3-40b5-9f1e-92c70160683a (<unnamed>)
2022-03-10 21:48:58.993 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-03-10 21:48:58.993 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-03-10 21:48:59.010 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@3a4ba480
2022-03-10 21:48:59.010 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unitClients 
2022-03-10 21:48:59.041 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-03-10 21:49:28.537 DEBUG [pool-2-thread-1][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [validate] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.validate(PooledConnections.java:49)] - Connection pool now considered primed; min-size will be maintained
2022-03-12 16:40:52.273 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@77846d2c
2022-03-12 16:40:52.414 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-12 16:40:52.461 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-12 16:40:52.477 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'ServiceID'
2022-03-12 16:40:52.477 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'DaoID'
2022-03-12 16:40:52.493 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-12 16:40:52.555 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-12 16:40:52.649 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-12 16:40:52.649 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unitClients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unitClients]
2022-03-12 16:40:52.649 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unitClients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-12 16:40:52.665 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unitClients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP9/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: update
		javax.persistence.jdbc.user: root]
2022-03-12 16:40:52.671 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-12 16:40:52.671 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-12 16:40:52.671 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-12 16:40:52.681 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-12 16:40:52.916 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-12 16:40:52.925 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-12 16:40:52.930 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-12 16:40:52.967 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-12 16:40:53.019 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-12 16:40:53.057 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-12 16:40:53.174 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2022-03-12 16:40:53.191 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2022-03-12 16:40:53.191 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4082ba93
2022-03-12 16:40:53.193 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@43df23d3
2022-03-12 16:40:53.193 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@305ffe9e
2022-03-12 16:40:53.193 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@7ae0a9ec
2022-03-12 16:40:53.193 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@2a693f59
2022-03-12 16:40:53.193 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@2a693f59
2022-03-12 16:40:53.208 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2a693f59
2022-03-12 16:40:53.208 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@723ca036
2022-03-12 16:40:53.208 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@723ca036
2022-03-12 16:40:53.208 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@723ca036
2022-03-12 16:40:53.208 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@4d0d9fe7
2022-03-12 16:40:53.208 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@4d0d9fe7
2022-03-12 16:40:53.208 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d0d9fe7
2022-03-12 16:40:53.208 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@66982506
2022-03-12 16:40:53.208 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@66982506
2022-03-12 16:40:53.208 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@66982506
2022-03-12 16:40:53.224 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4f32a3ad
2022-03-12 16:40:53.224 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4f32a3ad
2022-03-12 16:40:53.224 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4f32a3ad
2022-03-12 16:40:53.224 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@673fdbce
2022-03-12 16:40:53.224 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@673fdbce
2022-03-12 16:40:53.224 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@673fdbce
2022-03-12 16:40:53.224 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@3de8f619
2022-03-12 16:40:53.224 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@3de8f619
2022-03-12 16:40:53.224 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3de8f619
2022-03-12 16:40:53.240 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6f204a1a
2022-03-12 16:40:53.240 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6f204a1a
2022-03-12 16:40:53.240 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3cce5371
2022-03-12 16:40:53.240 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3cce5371
2022-03-12 16:40:53.240 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@338fc1d8
2022-03-12 16:40:53.240 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@338fc1d8
2022-03-12 16:40:53.240 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@480d3575
2022-03-12 16:40:53.240 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@65f8f5ae
2022-03-12 16:40:53.240 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@5c7933ad
2022-03-12 16:40:53.240 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5c7933ad
2022-03-12 16:40:53.240 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@33ecda92
2022-03-12 16:40:53.240 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@33ecda92
2022-03-12 16:40:53.257 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@55de24cc
2022-03-12 16:40:53.257 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@55de24cc
2022-03-12 16:40:53.257 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@25df00a0
2022-03-12 16:40:53.257 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@25df00a0
2022-03-12 16:40:53.257 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@25df00a0
2022-03-12 16:40:53.257 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5884a914
2022-03-12 16:40:53.257 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@1a4927d6
2022-03-12 16:40:53.257 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1a4927d6
2022-03-12 16:40:53.274 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1a4927d6
2022-03-12 16:40:53.274 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@97e93f1
2022-03-12 16:40:53.274 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@624ea235
2022-03-12 16:40:53.274 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@624ea235
2022-03-12 16:40:53.274 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@1b1cfb87
2022-03-12 16:40:53.274 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1b1cfb87
2022-03-12 16:40:53.274 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@20b2475a
2022-03-12 16:40:53.274 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@20b2475a
2022-03-12 16:40:53.274 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@58e1d9d
2022-03-12 16:40:53.274 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@58e1d9d
2022-03-12 16:40:53.274 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@28cda624
2022-03-12 16:40:53.274 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@28cda624
2022-03-12 16:40:53.274 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@126253fd
2022-03-12 16:40:53.290 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@5276d6ee
2022-03-12 16:40:53.291 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@5276d6ee
2022-03-12 16:40:53.291 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@5276d6ee
2022-03-12 16:40:53.291 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4dc27487
2022-03-12 16:40:53.291 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4dc27487
2022-03-12 16:40:53.291 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4dc27487
2022-03-12 16:40:53.291 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@6933b6c6
2022-03-12 16:40:53.291 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@1f9e9475
2022-03-12 16:40:53.291 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@1f9e9475
2022-03-12 16:40:53.291 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@1f9e9475
2022-03-12 16:40:53.291 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@14dd7b39
2022-03-12 16:40:53.291 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@14dd7b39
2022-03-12 16:40:53.291 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@14dd7b39
2022-03-12 16:40:53.291 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@51891008
2022-03-12 16:40:53.307 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@12591ac8
2022-03-12 16:40:53.307 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@f58853c
2022-03-12 16:40:53.307 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@f58853c
2022-03-12 16:40:53.307 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@700fb871
2022-03-12 16:40:53.307 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@503f91c3
2022-03-12 16:40:53.307 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@503f91c3
2022-03-12 16:40:53.324 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@2438dcd
2022-03-12 16:40:53.324 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2438dcd
2022-03-12 16:40:53.324 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@64b0598
2022-03-12 16:40:53.324 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@50029372
2022-03-12 16:40:53.324 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@7f2cfe3f
2022-03-12 16:40:53.324 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@2bdd8394
2022-03-12 16:40:53.324 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2bdd8394
2022-03-12 16:40:53.324 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2f01783a
2022-03-12 16:40:53.324 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@68878f6d
2022-03-12 16:40:53.324 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@41488b16
2022-03-12 16:40:53.324 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@a8ef162
2022-03-12 16:40:53.324 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2eea88a1
2022-03-12 16:40:53.324 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7ac296f6
2022-03-12 16:40:53.324 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7fd7a283
2022-03-12 16:40:53.324 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@22f59fa
2022-03-12 16:40:53.341 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-12 16:40:53.357 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-12 16:40:53.357 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-03-12 16:40:53.357 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-12 16:40:53.373 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-12 16:40:53.373 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-12 16:40:54.357 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.28
      major : 8
      minor : 0
2022-03-12 16:40:54.357 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.18 (Revision: fef2894d751d47223192b706977b4a5bc41e6be4)
      major : 8
      minor : 0
2022-03-12 16:40:54.357 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-03-12 16:40:54.373 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-03-12 16:40:54.389 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-03-12 16:40:54.406 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-03-12 16:40:54.422 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-03-12 16:40:54.439 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-03-12 16:40:54.439 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-03-12 16:40:54.439 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-12 16:40:54.439 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-12 16:40:54.439 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-03-12 16:40:54.439 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-03-12 16:40:54.439 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-03-12 16:40:54.439 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-12 16:40:54.439 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-03-12 16:40:54.439 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-03-12 16:40:54.439 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-03-12 16:40:54.439 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-03-12 16:40:54.439 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-12 16:40:54.455 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-03-12 16:40:54.473 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-03-12 16:40:54.489 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-03-12 16:40:54.506 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-03-12 16:40:54.506 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name TClients
2022-03-12 16:40:54.522 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-03-12 16:40:54.541 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-03-12 16:40:54.541 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-03-12 16:40:54.541 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-03-12 16:40:54.541 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-03-12 16:40:54.556 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-03-12 16:40:54.558 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-03-12 16:40:54.558 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures, insertable=true, updatable=true, unique=false}
2022-03-12 16:40:54.558 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-03-12 16:40:54.561 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-03-12 16:40:54.561 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures_KEY, insertable=true, updatable=true, unique=false}
2022-03-12 16:40:54.561 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='factures_KEY', referencedColumn='null', mappedBy='null'}
2022-03-12 16:40:54.561 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-03-12 16:40:54.561 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-03-12 16:40:54.561 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:386)] - Collection role: ma.cigma.pfe.models.Client.factures
2022-03-12 16:40:54.561 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property factures
2022-03-12 16:40:54.561 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-03-12 16:40:54.561 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property name with lazy=false
2022-03-12 16:40:54.561 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-03-12 16:40:54.561 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for name
2022-03-12 16:40:54.561 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property name
2022-03-12 16:40:54.561 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Facture
2022-03-12 16:40:54.561 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-03-12 16:40:54.572 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name Facture
2022-03-12 16:40:54.573 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Facture on table Facture
2022-03-12 16:40:54.573 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Facture), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-03-12 16:40:54.573 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-03-12 16:40:54.573 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:id]
2022-03-12 16:40:54.573 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-03-12 16:40:54.573 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-03-12 16:40:54.573 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Facture), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-03-12 16:40:54.573 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property amount with lazy=false
2022-03-12 16:40:54.573 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:amount]
2022-03-12 16:40:54.573 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for amount
2022-03-12 16:40:54.573 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property amount
2022-03-12 16:40:54.573 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Facture), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-03-12 16:40:54.573 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property description with lazy=false
2022-03-12 16:40:54.573 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:description]
2022-03-12 16:40:54.573 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for description
2022-03-12 16:40:54.573 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property description
2022-03-12 16:40:54.573 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-03-12 16:40:54.573 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for name
2022-03-12 16:40:54.573 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-03-12 16:40:54.573 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for amount
2022-03-12 16:40:54.573 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for description
2022-03-12 16:40:54.573 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-03-12 16:40:54.573 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [facture]
2022-03-12 16:40:54.573 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:51)] - Second pass for collection: ma.cigma.pfe.models.Client.factures
2022-03-12 16:40:54.573 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindManyToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindManyToManySecondPass(CollectionBinder.java:1155)] - Binding a OneToMany: ma.cigma.pfe.models.Client.factures through an association table
2022-03-12 16:40:54.573 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:68)] - Mapped collection key: TClients_id, element: factures_id
2022-03-12 16:40:54.589 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Facture
2022-03-12 16:40:54.589 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-03-12 16:40:54.589 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Facture
2022-03-12 16:40:54.589 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-03-12 16:40:54.604 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-03-12 16:40:54.604 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-03-12 16:40:54.604 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-03-12 16:40:54.604 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-03-12 16:40:54.604 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-03-12 16:40:54.604 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-03-12 16:40:54.604 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-03-12 16:40:54.604 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-03-12 16:40:54.604 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-03-12 16:40:54.604 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-03-12 16:40:54.604 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-03-12 16:40:54.604 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-03-12 16:40:54.604 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-03-12 16:40:54.604 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-03-12 16:40:54.604 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-03-12 16:40:54.604 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-03-12 16:40:54.604 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-03-12 16:40:54.620 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-03-12 16:40:54.620 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-03-12 16:40:54.620 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-03-12 16:40:54.620 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-03-12 16:40:54.620 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-03-12 16:40:54.620 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1827a871
2022-03-12 16:40:54.622 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-03-12 16:40:54.622 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-03-12 16:40:54.622 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-03-12 16:40:54.622 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-03-12 16:40:54.622 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-03-12 16:40:54.622 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-03-12 16:40:54.622 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-03-12 16:40:54.622 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-03-12 16:40:54.622 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-03-12 16:40:54.622 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-03-12 16:40:54.622 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-03-12 16:40:54.622 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-03-12 16:40:54.622 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-03-12 16:40:54.656 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-03-12 16:40:54.656 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-03-12 16:40:54.656 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.202-b08, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_202\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@13c612bd, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=AE, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Studies\JEEProjects\TP9, java.runtime.version=1.8.0_202-b08, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\endorsed, java.io.tmpdir=C:\Users\toubk\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_202\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\toubk\AppData\Local\Microsoft\WindowsApps;;., javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unitClients, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\toubk, user.timezone=Asia/Muscat, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=toubk, java.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;D:\Studies\JEEProjects\TP9\target\classes;C:\Users\toubk\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\toubk\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\toubk\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\toubk\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\toubk\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\toubk\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\toubk\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\toubk\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\toubk\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\toubk\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.2\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_202\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_202, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-03-12 16:40:54.675 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-03-12 16:40:54.675 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-03-12 16:40:54.723 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-12 16:40:54.723 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-12 16:40:54.749 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-12 16:40:54.749 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-12 16:40:54.773 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-03-12 16:40:54.773 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-03-12 16:40:54.773 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-03-12 16:40:54.773 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-03-12 16:40:54.789 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:664)] - Static SQL for collection: ma.cigma.pfe.models.Client.factures
2022-03-12 16:40:54.789 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:666)] -  Row insert: insert into TClients_Facture (TClients_id, factures_id) values (?, ?)
2022-03-12 16:40:54.789 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:669)] -  Row update: update TClients_Facture set factures_id=? where TClients_id=? and factures_id=?
2022-03-12 16:40:54.789 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:672)] -  Row delete: delete from TClients_Facture where TClients_id=? and factures_id=?
2022-03-12 16:40:54.789 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:675)] -  One-shot delete: delete from TClients_Facture where TClients_id=?
2022-03-12 16:40:54.789 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-03-12 16:40:54.789 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TClients where id =?
2022-03-12 16:40:54.789 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select client_.id, client_.name as name2_1_ from TClients client_ where client_.id=?
2022-03-12 16:40:54.789 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-03-12 16:40:54.789 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-03-12 16:40:54.789 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-03-12 16:40:54.789 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TClients (name) values (?)
2022-03-12 16:40:54.822 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49b07ee3]
2022-03-12 16:40:54.822 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-12 16:40:54.822 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-12 16:40:54.822 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 16:40:54.855 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 16:40:54.855 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-12 16:40:54.855 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-12 16:40:54.855 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22101c80]
2022-03-12 16:40:54.855 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-12 16:40:54.855 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-12 16:40:54.855 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 16:40:54.855 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 16:40:54.855 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-12 16:40:54.855 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [READ]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-12 16:40:54.855 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@759d81f3]
2022-03-12 16:40:54.855 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-12 16:40:54.855 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-12 16:40:54.855 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 16:40:54.855 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 16:40:54.855 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-12 16:40:54.855 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-12 16:40:54.855 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a4c638d]
2022-03-12 16:40:54.855 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-12 16:40:54.855 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-12 16:40:54.855 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 16:40:54.855 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 16:40:54.855 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-12 16:40:54.855 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_NOWAIT]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-12 16:40:54.855 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aed0151]
2022-03-12 16:40:54.871 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-12 16:40:54.871 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-12 16:40:54.872 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 16:40:54.872 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_SKIPLOCKED]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f12e153]
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [FORCE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a101b1c]
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_READ]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? lock in share mode
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29f0802c]
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_WRITE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60f2e0bd]
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b410923]
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@203dd56b]
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-12 16:40:54.873 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-12 16:40:54.889 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Client: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-12 16:40:54.889 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Client: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-12 16:40:54.889 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Facture
2022-03-12 16:40:54.889 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from Facture where id =?
2022-03-12 16:40:54.889 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.description as descript3_0_ from Facture facture_ where facture_.id=?
2022-03-12 16:40:54.889 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into Facture (amount, description, id) values (?, ?, ?)
2022-03-12 16:40:54.889 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update Facture set amount=?, description=? where id=?
2022-03-12 16:40:54.889 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from Facture where id=?
2022-03-12 16:40:54.889 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into Facture (amount, description) values (?, ?)
2022-03-12 16:40:54.889 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ecd665]
2022-03-12 16:40:54.889 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-12 16:40:54.889 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-12 16:40:54.889 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 16:40:54.889 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 16:40:54.889 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-12 16:40:54.889 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-12 16:40:54.889 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ec7d8b3]
2022-03-12 16:40:54.889 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-12 16:40:54.889 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-12 16:40:54.889 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 16:40:54.889 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 16:40:54.889 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-12 16:40:54.905 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-12 16:40:54.906 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bb3131b]
2022-03-12 16:40:54.906 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-12 16:40:54.907 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74fef3f7]
2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_NOWAIT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69eb86b4]
2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_SKIPLOCKED]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bb8f9e2]
2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [FORCE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f78de22]
2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? lock in share mode
2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d8539de]
2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_WRITE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@272a179c]
2022-03-12 16:40:54.908 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-12 16:40:54.922 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-12 16:40:54.922 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 16:40:54.922 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 16:40:54.922 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-12 16:40:54.922 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-12 16:40:54.922 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67207d8a]
2022-03-12 16:40:54.922 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-12 16:40:54.922 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-12 16:40:54.922 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 16:40:54.922 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 16:40:54.922 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-12 16:40:54.922 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-12 16:40:54.922 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c2a69b4]
2022-03-12 16:40:54.922 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-12 16:40:54.922 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-12 16:40:54.922 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 16:40:54.922 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 16:40:54.922 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-12 16:40:54.922 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-12 16:40:54.922 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-12 16:40:54.922 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-12 16:40:54.922 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@720653c2]
2022-03-12 16:40:54.922 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4463d9d3]
2022-03-12 16:40:54.922 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-12 16:40:54.922 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-12 16:40:54.922 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 16:40:54.940 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 16:40:54.940 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.Client.factures)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.Client.factures])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.Client.factures].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.Client.factures)
          - SQL table alias mapping - factures0_
          - alias suffix - 0_
          - suffixed key columns - {TClients1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Facture)
                - SQL table alias mapping - facture1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2022-03-12 16:40:54.940 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:96)] - Static select for collection ma.cigma.pfe.models.Client.factures: select factures0_.TClients_id as TClients1_2_0_, factures0_.factures_id as factures2_2_0_, facture1_.id as id1_0_1_, facture1_.amount as amount2_0_1_, facture1_.description as descript3_0_1_ from TClients_Facture factures0_ inner join Facture facture1_ on factures0_.factures_id=facture1_.id where factures0_.TClients_id=?
2022-03-12 16:40:54.940 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-03-12 16:40:54.940 INFO [main][org.hibernate.tool.hbm2ddl.SchemaUpdate] [execute] [org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:101)] - HHH000228: Running hbm2ddl schema update
2022-03-12 16:40:55.023 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:505)] - No alter strings for table : Facture
2022-03-12 16:40:55.039 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:505)] - No alter strings for table : TClients
2022-03-12 16:40:55.055 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:505)] - No alter strings for table : TClients_Facture
2022-03-12 16:40:55.123 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-03-12 16:40:55.123 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-03-12 16:40:55.123 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-03-12 16:40:55.123 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-03-12 16:40:55.123 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-03-12 16:40:55.123 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3a095ec0
2022-03-12 16:40:55.123 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: 44efe8dd-7656-4513-8586-41d48dbf91c9 (<unnamed>)
2022-03-12 16:40:55.123 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-03-12 16:40:55.123 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-03-12 16:40:55.155 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@3a4ba480
2022-03-12 16:40:55.155 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unitClients 
2022-03-12 16:40:55.221 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-03-12 18:09:37.940 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@77846d2c
2022-03-12 18:09:38.015 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-12 18:09:38.037 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-12 18:09:38.037 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'ServiceID'
2022-03-12 18:09:38.037 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'DaoID'
2022-03-12 18:09:38.057 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-12 18:09:38.090 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-12 18:09:38.122 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-12 18:09:38.122 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unitClients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unitClients]
2022-03-12 18:09:38.122 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unitClients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-12 18:09:38.138 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unitClients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP9/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: update
		javax.persistence.jdbc.user: root]
2022-03-12 18:09:38.138 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-12 18:09:38.138 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-12 18:09:38.138 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-12 18:09:38.138 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-12 18:09:38.168 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-12 18:09:38.168 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-12 18:09:38.168 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-12 18:09:38.184 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-12 18:09:38.200 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-12 18:09:38.200 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-12 18:09:38.249 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2022-03-12 18:09:38.249 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2022-03-12 18:09:38.249 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4082ba93
2022-03-12 18:09:38.249 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@43df23d3
2022-03-12 18:09:38.249 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@305ffe9e
2022-03-12 18:09:38.249 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@7ae0a9ec
2022-03-12 18:09:38.249 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@2a693f59
2022-03-12 18:09:38.249 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@2a693f59
2022-03-12 18:09:38.249 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2a693f59
2022-03-12 18:09:38.257 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@723ca036
2022-03-12 18:09:38.257 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@723ca036
2022-03-12 18:09:38.257 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@723ca036
2022-03-12 18:09:38.257 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@4d0d9fe7
2022-03-12 18:09:38.257 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@4d0d9fe7
2022-03-12 18:09:38.257 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d0d9fe7
2022-03-12 18:09:38.257 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@66982506
2022-03-12 18:09:38.257 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@66982506
2022-03-12 18:09:38.257 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@66982506
2022-03-12 18:09:38.257 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4f32a3ad
2022-03-12 18:09:38.257 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4f32a3ad
2022-03-12 18:09:38.257 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4f32a3ad
2022-03-12 18:09:38.265 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@673fdbce
2022-03-12 18:09:38.265 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@673fdbce
2022-03-12 18:09:38.265 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@673fdbce
2022-03-12 18:09:38.265 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@3de8f619
2022-03-12 18:09:38.265 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@3de8f619
2022-03-12 18:09:38.265 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3de8f619
2022-03-12 18:09:38.265 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6f204a1a
2022-03-12 18:09:38.265 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6f204a1a
2022-03-12 18:09:38.265 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3cce5371
2022-03-12 18:09:38.265 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3cce5371
2022-03-12 18:09:38.265 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@338fc1d8
2022-03-12 18:09:38.265 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@338fc1d8
2022-03-12 18:09:38.265 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@480d3575
2022-03-12 18:09:38.265 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@65f8f5ae
2022-03-12 18:09:38.265 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@5c7933ad
2022-03-12 18:09:38.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5c7933ad
2022-03-12 18:09:38.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@33ecda92
2022-03-12 18:09:38.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@33ecda92
2022-03-12 18:09:38.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@55de24cc
2022-03-12 18:09:38.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@55de24cc
2022-03-12 18:09:38.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@25df00a0
2022-03-12 18:09:38.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@25df00a0
2022-03-12 18:09:38.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@25df00a0
2022-03-12 18:09:38.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5884a914
2022-03-12 18:09:38.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@1a4927d6
2022-03-12 18:09:38.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1a4927d6
2022-03-12 18:09:38.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1a4927d6
2022-03-12 18:09:38.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@97e93f1
2022-03-12 18:09:38.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@624ea235
2022-03-12 18:09:38.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@624ea235
2022-03-12 18:09:38.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@1b1cfb87
2022-03-12 18:09:38.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1b1cfb87
2022-03-12 18:09:38.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@20b2475a
2022-03-12 18:09:38.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@20b2475a
2022-03-12 18:09:38.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@58e1d9d
2022-03-12 18:09:38.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@58e1d9d
2022-03-12 18:09:38.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@28cda624
2022-03-12 18:09:38.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@28cda624
2022-03-12 18:09:38.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@126253fd
2022-03-12 18:09:38.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@5276d6ee
2022-03-12 18:09:38.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@5276d6ee
2022-03-12 18:09:38.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@5276d6ee
2022-03-12 18:09:38.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4dc27487
2022-03-12 18:09:38.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4dc27487
2022-03-12 18:09:38.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4dc27487
2022-03-12 18:09:38.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@6933b6c6
2022-03-12 18:09:38.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@1f9e9475
2022-03-12 18:09:38.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@1f9e9475
2022-03-12 18:09:38.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@1f9e9475
2022-03-12 18:09:38.289 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@14dd7b39
2022-03-12 18:09:38.289 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@14dd7b39
2022-03-12 18:09:38.289 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@14dd7b39
2022-03-12 18:09:38.289 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@51891008
2022-03-12 18:09:38.289 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@12591ac8
2022-03-12 18:09:38.289 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@f58853c
2022-03-12 18:09:38.289 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@f58853c
2022-03-12 18:09:38.289 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@700fb871
2022-03-12 18:09:38.289 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@503f91c3
2022-03-12 18:09:38.289 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@503f91c3
2022-03-12 18:09:38.289 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@2438dcd
2022-03-12 18:09:38.289 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2438dcd
2022-03-12 18:09:38.289 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@64b0598
2022-03-12 18:09:38.289 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@50029372
2022-03-12 18:09:38.289 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@7f2cfe3f
2022-03-12 18:09:38.289 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@2bdd8394
2022-03-12 18:09:38.289 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2bdd8394
2022-03-12 18:09:38.289 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2f01783a
2022-03-12 18:09:38.289 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@68878f6d
2022-03-12 18:09:38.289 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@41488b16
2022-03-12 18:09:38.289 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@a8ef162
2022-03-12 18:09:38.289 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2eea88a1
2022-03-12 18:09:38.289 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7ac296f6
2022-03-12 18:09:38.289 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7fd7a283
2022-03-12 18:09:38.289 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@22f59fa
2022-03-12 18:09:38.305 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-12 18:09:38.315 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-12 18:09:38.315 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-03-12 18:09:38.315 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-12 18:09:38.315 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-12 18:09:38.315 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-12 18:09:38.828 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.28
      major : 8
      minor : 0
2022-03-12 18:09:38.828 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.18 (Revision: fef2894d751d47223192b706977b4a5bc41e6be4)
      major : 8
      minor : 0
2022-03-12 18:09:38.828 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-03-12 18:09:38.828 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-03-12 18:09:38.844 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-03-12 18:09:38.860 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-03-12 18:09:38.860 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-03-12 18:09:38.876 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-03-12 18:09:38.876 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-03-12 18:09:38.876 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-12 18:09:38.876 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-12 18:09:38.876 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-03-12 18:09:38.876 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-03-12 18:09:38.876 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-03-12 18:09:38.876 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-12 18:09:38.876 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-03-12 18:09:38.876 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-03-12 18:09:38.876 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-03-12 18:09:38.876 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-03-12 18:09:38.876 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-12 18:09:38.876 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-03-12 18:09:38.892 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-03-12 18:09:38.907 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-03-12 18:09:38.917 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-03-12 18:09:38.920 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name TClients
2022-03-12 18:09:38.923 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-03-12 18:09:38.940 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-03-12 18:09:38.943 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-03-12 18:09:38.944 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-03-12 18:09:38.945 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-03-12 18:09:38.946 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-03-12 18:09:38.948 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-03-12 18:09:38.948 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures, insertable=true, updatable=true, unique=false}
2022-03-12 18:09:38.949 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-03-12 18:09:38.955 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-03-12 18:09:38.955 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures_KEY, insertable=true, updatable=true, unique=false}
2022-03-12 18:09:38.955 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='factures_KEY', referencedColumn='null', mappedBy='null'}
2022-03-12 18:09:38.955 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-03-12 18:09:38.955 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-03-12 18:09:38.955 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:386)] - Collection role: ma.cigma.pfe.models.Client.factures
2022-03-12 18:09:38.955 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property factures
2022-03-12 18:09:38.955 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-03-12 18:09:38.955 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property name with lazy=false
2022-03-12 18:09:38.955 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-03-12 18:09:38.955 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for name
2022-03-12 18:09:38.955 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property name
2022-03-12 18:09:38.955 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Facture
2022-03-12 18:09:38.955 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-03-12 18:09:38.955 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name Facture
2022-03-12 18:09:38.955 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Facture on table Facture
2022-03-12 18:09:38.955 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Facture), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-03-12 18:09:38.955 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-03-12 18:09:38.955 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:id]
2022-03-12 18:09:38.955 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-03-12 18:09:38.955 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-03-12 18:09:38.955 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Facture), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-03-12 18:09:38.955 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property amount with lazy=false
2022-03-12 18:09:38.955 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:amount]
2022-03-12 18:09:38.955 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for amount
2022-03-12 18:09:38.955 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property amount
2022-03-12 18:09:38.955 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Facture), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-03-12 18:09:38.955 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property description with lazy=false
2022-03-12 18:09:38.955 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:description]
2022-03-12 18:09:38.963 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for description
2022-03-12 18:09:38.963 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property description
2022-03-12 18:09:38.963 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-03-12 18:09:38.963 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for name
2022-03-12 18:09:38.963 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-03-12 18:09:38.963 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for amount
2022-03-12 18:09:38.963 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for description
2022-03-12 18:09:38.963 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-03-12 18:09:38.963 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [facture]
2022-03-12 18:09:38.963 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:51)] - Second pass for collection: ma.cigma.pfe.models.Client.factures
2022-03-12 18:09:38.963 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindManyToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindManyToManySecondPass(CollectionBinder.java:1155)] - Binding a OneToMany: ma.cigma.pfe.models.Client.factures through an association table
2022-03-12 18:09:38.963 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:68)] - Mapped collection key: TClients_id, element: factures_id
2022-03-12 18:09:38.963 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Facture
2022-03-12 18:09:38.963 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-03-12 18:09:38.963 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Facture
2022-03-12 18:09:38.963 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-03-12 18:09:38.973 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-03-12 18:09:38.973 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-03-12 18:09:38.973 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-03-12 18:09:38.973 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-03-12 18:09:38.973 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-03-12 18:09:38.973 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-03-12 18:09:38.973 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-03-12 18:09:38.973 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-03-12 18:09:38.973 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-03-12 18:09:38.973 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-03-12 18:09:38.973 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-03-12 18:09:38.973 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-03-12 18:09:38.973 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-03-12 18:09:38.973 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-03-12 18:09:38.973 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-03-12 18:09:38.973 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-03-12 18:09:38.973 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-03-12 18:09:38.973 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-03-12 18:09:38.973 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-03-12 18:09:38.973 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-03-12 18:09:38.973 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-03-12 18:09:38.973 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-03-12 18:09:38.973 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1827a871
2022-03-12 18:09:38.973 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-03-12 18:09:38.973 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-03-12 18:09:38.973 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-03-12 18:09:38.973 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-03-12 18:09:38.973 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-03-12 18:09:38.973 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-03-12 18:09:38.973 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-03-12 18:09:38.973 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-03-12 18:09:38.973 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-03-12 18:09:38.973 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-03-12 18:09:38.973 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-03-12 18:09:38.973 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-03-12 18:09:38.973 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-03-12 18:09:39.005 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-03-12 18:09:39.005 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-03-12 18:09:39.005 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.202-b08, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_202\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@13c612bd, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=AE, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Studies\JEEProjects\TP9, java.runtime.version=1.8.0_202-b08, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\endorsed, java.io.tmpdir=C:\Users\toubk\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_202\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\toubk\AppData\Local\Microsoft\WindowsApps;;., javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unitClients, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\toubk, user.timezone=Asia/Muscat, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=toubk, java.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;D:\Studies\JEEProjects\TP9\target\classes;C:\Users\toubk\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\toubk\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\toubk\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\toubk\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\toubk\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\toubk\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\toubk\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\toubk\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\toubk\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\toubk\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.2\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_202\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_202, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-03-12 18:09:39.021 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-03-12 18:09:39.021 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-03-12 18:09:39.053 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-12 18:09:39.053 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-12 18:09:39.053 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-12 18:09:39.053 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-12 18:09:39.069 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-03-12 18:09:39.069 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-03-12 18:09:39.069 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-03-12 18:09:39.069 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-03-12 18:09:39.085 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:664)] - Static SQL for collection: ma.cigma.pfe.models.Client.factures
2022-03-12 18:09:39.085 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:666)] -  Row insert: insert into TClients_Facture (TClients_id, factures_id) values (?, ?)
2022-03-12 18:09:39.085 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:669)] -  Row update: update TClients_Facture set factures_id=? where TClients_id=? and factures_id=?
2022-03-12 18:09:39.085 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:672)] -  Row delete: delete from TClients_Facture where TClients_id=? and factures_id=?
2022-03-12 18:09:39.085 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:675)] -  One-shot delete: delete from TClients_Facture where TClients_id=?
2022-03-12 18:09:39.085 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-03-12 18:09:39.085 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TClients where id =?
2022-03-12 18:09:39.085 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select client_.id, client_.name as name2_1_ from TClients client_ where client_.id=?
2022-03-12 18:09:39.085 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-03-12 18:09:39.085 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-03-12 18:09:39.085 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-03-12 18:09:39.085 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TClients (name) values (?)
2022-03-12 18:09:39.106 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49b07ee3]
2022-03-12 18:09:39.106 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-12 18:09:39.116 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-12 18:09:39.116 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 18:09:39.124 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 18:09:39.124 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-12 18:09:39.124 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-12 18:09:39.124 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22101c80]
2022-03-12 18:09:39.124 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-12 18:09:39.124 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-12 18:09:39.124 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 18:09:39.124 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 18:09:39.124 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-12 18:09:39.124 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [READ]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-12 18:09:39.124 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@759d81f3]
2022-03-12 18:09:39.124 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-12 18:09:39.124 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-12 18:09:39.124 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a4c638d]
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_NOWAIT]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aed0151]
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_SKIPLOCKED]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f12e153]
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [FORCE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a101b1c]
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_READ]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? lock in share mode
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29f0802c]
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_WRITE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60f2e0bd]
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 18:09:39.132 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b410923]
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@203dd56b]
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Client: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Client: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Facture
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from Facture where id =?
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.description as descript3_0_ from Facture facture_ where facture_.id=?
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into Facture (amount, description, id) values (?, ?, ?)
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update Facture set amount=?, description=? where id=?
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from Facture where id=?
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into Facture (amount, description) values (?, ?)
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ecd665]
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ec7d8b3]
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bb3131b]
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74fef3f7]
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_NOWAIT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69eb86b4]
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 18:09:39.139 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_SKIPLOCKED]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bb8f9e2]
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [FORCE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f78de22]
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? lock in share mode
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d8539de]
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_WRITE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@272a179c]
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67207d8a]
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c2a69b4]
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@720653c2]
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4463d9d3]
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-12 18:09:39.155 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-12 18:09:39.171 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-12 18:09:39.172 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.Client.factures)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.Client.factures])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.Client.factures].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.Client.factures)
          - SQL table alias mapping - factures0_
          - alias suffix - 0_
          - suffixed key columns - {TClients1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Facture)
                - SQL table alias mapping - facture1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2022-03-12 18:09:39.172 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:96)] - Static select for collection ma.cigma.pfe.models.Client.factures: select factures0_.TClients_id as TClients1_2_0_, factures0_.factures_id as factures2_2_0_, facture1_.id as id1_0_1_, facture1_.amount as amount2_0_1_, facture1_.description as descript3_0_1_ from TClients_Facture factures0_ inner join Facture facture1_ on factures0_.factures_id=facture1_.id where factures0_.TClients_id=?
2022-03-12 18:09:39.172 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-03-12 18:09:39.173 INFO [main][org.hibernate.tool.hbm2ddl.SchemaUpdate] [execute] [org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:101)] - HHH000228: Running hbm2ddl schema update
2022-03-12 18:09:39.219 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:505)] - No alter strings for table : Facture
2022-03-12 18:09:39.234 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:505)] - No alter strings for table : TClients
2022-03-12 18:09:39.234 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:505)] - No alter strings for table : TClients_Facture
2022-03-12 18:09:39.283 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-03-12 18:09:39.283 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-03-12 18:09:39.283 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-03-12 18:09:39.283 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-03-12 18:09:39.289 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-03-12 18:09:39.289 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3a095ec0
2022-03-12 18:09:39.289 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: fc44a710-ddb3-4715-a587-ccc2854eea05 (<unnamed>)
2022-03-12 18:09:39.289 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-03-12 18:09:39.289 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-03-12 18:09:39.314 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@3a4ba480
2022-03-12 18:09:39.314 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unitClients 
2022-03-12 18:09:39.338 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-03-15 15:39:30.723 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c762604
2022-03-15 15:39:30.787 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-03-15 15:39:30.814 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-03-15 15:39:30.822 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'ServiceID'
2022-03-15 15:39:30.823 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'DaoID'
2022-03-15 15:39:30.832 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-03-15 15:39:30.857 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-03-15 15:39:30.888 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-03-15 15:39:30.888 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unitClients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unitClients]
2022-03-15 15:39:30.888 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unitClients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-03-15 15:39:30.904 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unitClients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Studies/JEEProjects/TP9/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: update
		javax.persistence.jdbc.user: root]
2022-03-15 15:39:30.904 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-03-15 15:39:30.904 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-03-15 15:39:30.904 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-03-15 15:39:30.904 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-03-15 15:39:30.936 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-03-15 15:39:30.936 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-03-15 15:39:30.936 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-03-15 15:39:30.955 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-03-15 15:39:30.968 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-03-15 15:39:30.978 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-03-15 15:39:31.007 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2b30a42c
2022-03-15 15:39:31.007 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2b30a42c
2022-03-15 15:39:31.007 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2b30a42c
2022-03-15 15:39:31.007 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@792b749c
2022-03-15 15:39:31.007 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1972e513
2022-03-15 15:39:31.007 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@61c4eee0
2022-03-15 15:39:31.007 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@7fd50002
2022-03-15 15:39:31.007 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@7fd50002
2022-03-15 15:39:31.007 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7fd50002
2022-03-15 15:39:31.024 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@28dcca0c
2022-03-15 15:39:31.024 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@28dcca0c
2022-03-15 15:39:31.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@28dcca0c
2022-03-15 15:39:31.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@312aa7c
2022-03-15 15:39:31.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@312aa7c
2022-03-15 15:39:31.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@312aa7c
2022-03-15 15:39:31.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@5a59ca5e
2022-03-15 15:39:31.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@5a59ca5e
2022-03-15 15:39:31.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5a59ca5e
2022-03-15 15:39:31.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4d1bf319
2022-03-15 15:39:31.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4d1bf319
2022-03-15 15:39:31.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4d1bf319
2022-03-15 15:39:31.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@7a5ceedd
2022-03-15 15:39:31.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@7a5ceedd
2022-03-15 15:39:31.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7a5ceedd
2022-03-15 15:39:31.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@4e5ed836
2022-03-15 15:39:31.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@4e5ed836
2022-03-15 15:39:31.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4e5ed836
2022-03-15 15:39:31.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5f8e8a9d
2022-03-15 15:39:31.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5f8e8a9d
2022-03-15 15:39:31.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6e535154
2022-03-15 15:39:31.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6e535154
2022-03-15 15:39:31.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@48e1f6c7
2022-03-15 15:39:31.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@48e1f6c7
2022-03-15 15:39:31.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@194fad1
2022-03-15 15:39:31.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@38467116
2022-03-15 15:39:31.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@5fb759d6
2022-03-15 15:39:31.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5fb759d6
2022-03-15 15:39:31.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@6e2829c7
2022-03-15 15:39:31.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6e2829c7
2022-03-15 15:39:31.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@30f842ca
2022-03-15 15:39:31.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@30f842ca
2022-03-15 15:39:31.041 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@7b4c50bc
2022-03-15 15:39:31.041 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7b4c50bc
2022-03-15 15:39:31.041 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7b4c50bc
2022-03-15 15:39:31.041 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@60f00693
2022-03-15 15:39:31.041 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@aba625
2022-03-15 15:39:31.041 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@aba625
2022-03-15 15:39:31.041 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@aba625
2022-03-15 15:39:31.041 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4b520ea8
2022-03-15 15:39:31.041 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@782859e
2022-03-15 15:39:31.041 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@782859e
2022-03-15 15:39:31.041 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@6f43c82
2022-03-15 15:39:31.041 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6f43c82
2022-03-15 15:39:31.041 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f15d60e
2022-03-15 15:39:31.041 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f15d60e
2022-03-15 15:39:31.041 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@4f0f2942
2022-03-15 15:39:31.041 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4f0f2942
2022-03-15 15:39:31.041 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7eecb5b8
2022-03-15 15:39:31.041 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7eecb5b8
2022-03-15 15:39:31.041 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@475c9c31
2022-03-15 15:39:31.041 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@1807f5a7
2022-03-15 15:39:31.041 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@1807f5a7
2022-03-15 15:39:31.041 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@1807f5a7
2022-03-15 15:39:31.041 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7dfd3c81
2022-03-15 15:39:31.041 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7dfd3c81
2022-03-15 15:39:31.041 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7dfd3c81
2022-03-15 15:39:31.041 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@7dfb0c0f
2022-03-15 15:39:31.041 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@d23e042
2022-03-15 15:39:31.041 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@d23e042
2022-03-15 15:39:31.041 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@d23e042
2022-03-15 15:39:31.041 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6cd24612
2022-03-15 15:39:31.055 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6cd24612
2022-03-15 15:39:31.055 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6cd24612
2022-03-15 15:39:31.055 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@f68f0dc
2022-03-15 15:39:31.055 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@38145825
2022-03-15 15:39:31.058 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@29f7cefd
2022-03-15 15:39:31.058 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@29f7cefd
2022-03-15 15:39:31.058 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@9816741
2022-03-15 15:39:31.058 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@2235eaab
2022-03-15 15:39:31.058 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2235eaab
2022-03-15 15:39:31.058 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@5167f57d
2022-03-15 15:39:31.058 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5167f57d
2022-03-15 15:39:31.058 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3e2055d6
2022-03-15 15:39:31.058 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@50f6ac94
2022-03-15 15:39:31.058 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@5038d0b5
2022-03-15 15:39:31.058 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@68746f22
2022-03-15 15:39:31.058 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@68746f22
2022-03-15 15:39:31.058 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@41488b16
2022-03-15 15:39:31.058 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@a8ef162
2022-03-15 15:39:31.058 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2eea88a1
2022-03-15 15:39:31.058 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7ac296f6
2022-03-15 15:39:31.058 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7fd7a283
2022-03-15 15:39:31.058 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@22f59fa
2022-03-15 15:39:31.058 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@78fa769e
2022-03-15 15:39:31.058 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@16612a51
2022-03-15 15:39:31.074 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-03-15 15:39:31.074 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-03-15 15:39:31.074 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-03-15 15:39:31.074 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-03-15 15:39:31.074 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-03-15 15:39:31.074 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-03-15 15:39:31.531 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.28
      major : 8
      minor : 0
2022-03-15 15:39:31.531 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.18 (Revision: fef2894d751d47223192b706977b4a5bc41e6be4)
      major : 8
      minor : 0
2022-03-15 15:39:31.531 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-03-15 15:39:31.536 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-03-15 15:39:31.540 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-03-15 15:39:31.555 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-03-15 15:39:31.555 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-03-15 15:39:31.570 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-03-15 15:39:31.570 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-03-15 15:39:31.570 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-15 15:39:31.570 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-03-15 15:39:31.570 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-03-15 15:39:31.570 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-03-15 15:39:31.570 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-03-15 15:39:31.570 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-15 15:39:31.570 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-03-15 15:39:31.570 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-03-15 15:39:31.570 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-03-15 15:39:31.570 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-03-15 15:39:31.570 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-03-15 15:39:31.586 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-03-15 15:39:31.602 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-03-15 15:39:31.618 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-03-15 15:39:31.618 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-03-15 15:39:31.618 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name TClients
2022-03-15 15:39:31.634 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-03-15 15:39:31.650 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-03-15 15:39:31.650 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-03-15 15:39:31.650 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-03-15 15:39:31.655 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-03-15 15:39:31.655 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-03-15 15:39:31.655 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-03-15 15:39:31.655 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures, insertable=true, updatable=true, unique=false}
2022-03-15 15:39:31.655 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-03-15 15:39:31.666 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-03-15 15:39:31.666 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures_KEY, insertable=true, updatable=true, unique=false}
2022-03-15 15:39:31.666 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='factures_KEY', referencedColumn='null', mappedBy='null'}
2022-03-15 15:39:31.666 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-03-15 15:39:31.666 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-03-15 15:39:31.666 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:386)] - Collection role: ma.cigma.pfe.models.Client.factures
2022-03-15 15:39:31.666 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property factures
2022-03-15 15:39:31.666 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-03-15 15:39:31.666 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property name with lazy=false
2022-03-15 15:39:31.666 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-03-15 15:39:31.666 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for name
2022-03-15 15:39:31.666 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property name
2022-03-15 15:39:31.666 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Facture
2022-03-15 15:39:31.666 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-03-15 15:39:31.666 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name Facture
2022-03-15 15:39:31.666 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Facture on table Facture
2022-03-15 15:39:31.666 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Facture), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-03-15 15:39:31.673 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-03-15 15:39:31.673 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:id]
2022-03-15 15:39:31.673 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-03-15 15:39:31.673 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-03-15 15:39:31.673 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Facture), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-03-15 15:39:31.674 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property amount with lazy=false
2022-03-15 15:39:31.674 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:amount]
2022-03-15 15:39:31.674 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for amount
2022-03-15 15:39:31.674 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property amount
2022-03-15 15:39:31.674 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Facture), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-03-15 15:39:31.674 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property description with lazy=false
2022-03-15 15:39:31.674 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:description]
2022-03-15 15:39:31.675 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for description
2022-03-15 15:39:31.675 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property description
2022-03-15 15:39:31.675 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-03-15 15:39:31.675 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for name
2022-03-15 15:39:31.675 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-03-15 15:39:31.676 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for amount
2022-03-15 15:39:31.676 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for description
2022-03-15 15:39:31.677 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-03-15 15:39:31.677 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [facture]
2022-03-15 15:39:31.677 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:51)] - Second pass for collection: ma.cigma.pfe.models.Client.factures
2022-03-15 15:39:31.677 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindManyToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindManyToManySecondPass(CollectionBinder.java:1155)] - Binding a OneToMany: ma.cigma.pfe.models.Client.factures through an association table
2022-03-15 15:39:31.682 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:68)] - Mapped collection key: TClients_id, element: factures_id
2022-03-15 15:39:31.682 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Facture
2022-03-15 15:39:31.683 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-03-15 15:39:31.684 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Facture
2022-03-15 15:39:31.684 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1833)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-03-15 15:39:31.698 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-03-15 15:39:31.699 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-03-15 15:39:31.699 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-03-15 15:39:31.700 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-03-15 15:39:31.700 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-03-15 15:39:31.700 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-03-15 15:39:31.700 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-03-15 15:39:31.700 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-03-15 15:39:31.700 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-03-15 15:39:31.700 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-03-15 15:39:31.700 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-03-15 15:39:31.701 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-03-15 15:39:31.701 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-03-15 15:39:31.701 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-03-15 15:39:31.701 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-03-15 15:39:31.701 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-03-15 15:39:31.701 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-03-15 15:39:31.701 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-03-15 15:39:31.701 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-03-15 15:39:31.701 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-03-15 15:39:31.701 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-03-15 15:39:31.702 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-03-15 15:39:31.702 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7249dadf
2022-03-15 15:39:31.702 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-03-15 15:39:31.702 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-03-15 15:39:31.702 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-03-15 15:39:31.702 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-03-15 15:39:31.702 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-03-15 15:39:31.702 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-03-15 15:39:31.702 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-03-15 15:39:31.702 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-03-15 15:39:31.703 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-03-15 15:39:31.703 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-03-15 15:39:31.703 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-03-15 15:39:31.703 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-03-15 15:39:31.703 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-03-15 15:39:31.723 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-03-15 15:39:31.723 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-03-15 15:39:31.723 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.202-b08, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_202\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6b739528, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=AE, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\Studies\JEEProjects\TP9, java.runtime.version=1.8.0_202-b08, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\endorsed, java.io.tmpdir=C:\Users\toubk\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_202\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\toubk\AppData\Local\Microsoft\WindowsApps;;., javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unitClients, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\toubk, user.timezone=Asia/Muscat, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=toubk, java.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;D:\Studies\JEEProjects\TP9\target\classes;C:\Users\toubk\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\toubk\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\toubk\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\toubk\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\toubk\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\toubk\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\toubk\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\toubk\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\toubk\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\toubk\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\toubk\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\toubk\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\toubk\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\toubk\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.2\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_202\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_202, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-03-15 15:39:31.723 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-03-15 15:39:31.723 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-03-15 15:39:31.765 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-15 15:39:31.765 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-15 15:39:31.765 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-03-15 15:39:31.765 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-03-15 15:39:31.797 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-03-15 15:39:31.797 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-03-15 15:39:31.797 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-03-15 15:39:31.797 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-03-15 15:39:31.797 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:664)] - Static SQL for collection: ma.cigma.pfe.models.Client.factures
2022-03-15 15:39:31.797 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:666)] -  Row insert: insert into TClients_Facture (TClients_id, factures_id) values (?, ?)
2022-03-15 15:39:31.797 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:669)] -  Row update: update TClients_Facture set factures_id=? where TClients_id=? and factures_id=?
2022-03-15 15:39:31.797 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:672)] -  Row delete: delete from TClients_Facture where TClients_id=? and factures_id=?
2022-03-15 15:39:31.797 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:675)] -  One-shot delete: delete from TClients_Facture where TClients_id=?
2022-03-15 15:39:31.814 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-03-15 15:39:31.814 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TClients where id =?
2022-03-15 15:39:31.814 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select client_.id, client_.name as name2_1_ from TClients client_ where client_.id=?
2022-03-15 15:39:31.814 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-03-15 15:39:31.814 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-03-15 15:39:31.814 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-03-15 15:39:31.814 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TClients (name) values (?)
2022-03-15 15:39:31.876 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65f00478]
2022-03-15 15:39:31.877 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-15 15:39:31.880 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-15 15:39:31.880 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@759d81f3]
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [READ]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a4c638d]
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aed0151]
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_NOWAIT]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f12e153]
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [UPGRADE_SKIPLOCKED]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a101b1c]
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [FORCE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29f0802c]
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_READ]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? lock in share mode
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60f2e0bd]
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_WRITE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b410923]
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-15 15:39:31.889 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=? for update
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@203dd56b]
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d64b553]
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : factures
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : name
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Client: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Client: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Facture
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from Facture where id =?
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.description as descript3_0_ from Facture facture_ where facture_.id=?
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into Facture (amount, description, id) values (?, ?, ?)
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update Facture set amount=?, description=? where id=?
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from Facture where id=?
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into Facture (amount, description) values (?, ?)
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ec7d8b3]
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bb3131b]
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74fef3f7]
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-15 15:39:31.905 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69eb86b4]
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_NOWAIT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bb8f9e2]
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_SKIPLOCKED]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f78de22]
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [FORCE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d8539de]
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? lock in share mode
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@272a179c]
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_WRITE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67207d8a]
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=? for update
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c2a69b4]
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@648ee871]
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-15 15:39:31.921 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from Facture facture0_ where facture0_.id=?
2022-03-15 15:39:31.937 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ad5923a]
2022-03-15 15:39:31.937 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5395ea39]
2022-03-15 15:39:31.937 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-03-15 15:39:31.937 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : description
2022-03-15 15:39:31.937 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-03-15 15:39:31.937 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-03-15 15:39:31.937 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.Client.factures)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.Client.factures])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.Client.factures].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.Client.factures)
          - SQL table alias mapping - factures0_
          - alias suffix - 0_
          - suffixed key columns - {TClients1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Facture)
                - SQL table alias mapping - facture1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2022-03-15 15:39:31.937 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:96)] - Static select for collection ma.cigma.pfe.models.Client.factures: select factures0_.TClients_id as TClients1_2_0_, factures0_.factures_id as factures2_2_0_, facture1_.id as id1_0_1_, facture1_.amount as amount2_0_1_, facture1_.description as descript3_0_1_ from TClients_Facture factures0_ inner join Facture facture1_ on factures0_.factures_id=facture1_.id where factures0_.TClients_id=?
2022-03-15 15:39:31.937 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-03-15 15:39:31.937 INFO [main][org.hibernate.tool.hbm2ddl.SchemaUpdate] [execute] [org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:101)] - HHH000228: Running hbm2ddl schema update
2022-03-15 15:39:32.016 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:505)] - No alter strings for table : Facture
2022-03-15 15:39:32.027 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:505)] - No alter strings for table : TClients
2022-03-15 15:39:32.029 INFO [main][org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl] [processGetTableResults] [org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processGetTableResults(InformationExtractorJdbcDatabaseMetaDataImpl.java:338)] - HHH000262: Table not found: TClients_Facture
2022-03-15 15:39:32.038 INFO [main][org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl] [processGetTableResults] [org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processGetTableResults(InformationExtractorJdbcDatabaseMetaDataImpl.java:338)] - HHH000262: Table not found: TClients_Facture
2022-03-15 15:39:32.056 INFO [main][org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl] [processGetTableResults] [org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processGetTableResults(InformationExtractorJdbcDatabaseMetaDataImpl.java:338)] - HHH000262: Table not found: TClients_Facture
2022-03-15 15:39:32.056 INFO [main][org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl] [processGetTableResults] [org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processGetTableResults(InformationExtractorJdbcDatabaseMetaDataImpl.java:338)] - HHH000262: Table not found: TClients_Facture
2022-03-15 15:39:32.148 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-03-15 15:39:32.148 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-03-15 15:39:32.148 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-03-15 15:39:32.148 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-03-15 15:39:32.148 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-03-15 15:39:32.148 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6edc4161
2022-03-15 15:39:32.156 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: d3466af3-a469-40b7-8838-53a5cff5d618 (<unnamed>)
2022-03-15 15:39:32.156 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-03-15 15:39:32.156 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-03-15 15:39:32.172 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@4fe875be
2022-03-15 15:39:32.172 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unitClients 
2022-03-15 15:39:32.208 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
